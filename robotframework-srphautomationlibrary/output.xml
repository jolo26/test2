<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.2 on win32)" generated="2024-06-05T16:36:43.143873" rpa="false" schemaversion="5">
<suite id="s1" name="Package Info Tests" source="C:\4_GOS\srph_sqe\GOS_Automation\Tests\Package_Info_Tests.robot">
<kw name="Login user" owner="Login_Actions" type="SETUP">
<kw name="Initialize Browser" owner="ExtendSeleniumActions">
<kw name="Launch Chrome Browser" owner="SeleniumActions">
<kw name="Create Chrome Options" owner="SeleniumActions">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-06-05T16:36:43.839488" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000019947E61400&gt;</msg>
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-06-05T16:36:43.839488" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${is_headless}">
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless\=new</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:43.840512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:43.839488" elapsed="0.001024"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:43.839488" elapsed="0.001024"/>
</if>
<if>
<branch type="IF" condition="${incognito}">
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--incognito</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.000996"/>
</kw>
<var name="${option}">--ignore-certificate-errors</var>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.841508" elapsed="0.000000"/>
</kw>
<var name="${option}">--disable-dev-shm-usage</var>
<status status="PASS" start="2024-06-05T16:36:43.841508" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.841508" elapsed="0.000000"/>
</kw>
<var name="${option}">--disable-popup-blocking</var>
<status status="PASS" start="2024-06-05T16:36:43.841508" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.842506" elapsed="0.000000"/>
</kw>
<var name="${option}">--disable-extensions</var>
<status status="PASS" start="2024-06-05T16:36:43.841508" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.842506" elapsed="0.000000"/>
</kw>
<var name="${option}">--no-sandbox</var>
<status status="PASS" start="2024-06-05T16:36:43.842506" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.842506" elapsed="0.000000"/>
</kw>
<var name="${option}">window-size=1920,1080</var>
<status status="PASS" start="2024-06-05T16:36:43.842506" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${option}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.843504" elapsed="0.000000"/>
</kw>
<var name="${option}">--start-maximized</var>
<status status="PASS" start="2024-06-05T16:36:43.843504" elapsed="0.000000"/>
</iter>
<var>${option}</var>
<value>@{other_chrome_options}</value>
<status status="PASS" start="2024-06-05T16:36:43.840512" elapsed="0.002992"/>
</for>
<kw name="Set Download Path" owner="SeleniumActions">
<kw name="Generate Random String" owner="String">
<msg time="2024-06-05T16:36:43.843504" level="INFO">${randomized_path} = YfS8</msg>
<var>${randomized_path}</var>
<arg>4</arg>
<arg>[LETTERS][NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-06-05T16:36:43.843504" elapsed="0.000000"/>
</kw>
<kw name="Join Path" owner="OperatingSystem">
<msg time="2024-06-05T16:36:43.844502" level="INFO">${generated_path} = C:\Users\A9566~1.YAN\AppData\Local\Temp\YfS8</msg>
<var>${generated_path}</var>
<arg>${TEMPDIR}</arg>
<arg>${randomized_path}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<status status="PASS" start="2024-06-05T16:36:43.844502" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-06-05T16:36:43.846495" level="INFO">${DOWNLOADDIR} = C:\Users\A9566~1.YAN\AppData\Local\Temp\YfS8</msg>
<arg>${DOWNLOADDIR}</arg>
<arg>${generated_path}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-06-05T16:36:43.844502" elapsed="0.001993"/>
</kw>
<doc>setups the randomly generated path for the download files to be placed on.</doc>
<status status="PASS" start="2024-06-05T16:36:43.843504" elapsed="0.002991"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-06-05T16:36:43.846495" level="INFO">${prefs} = {'download.default_directory': 'C:\\Users\\A9566~1.YAN\\AppData\\Local\\Temp\\YfS8'}</msg>
<var>${prefs}</var>
<arg>download.default_directory=${DOWNLOADDIR}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-06-05T16:36:43.846495" elapsed="0.000000"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-06-05T16:36:43.847493" elapsed="0.000000"/>
</kw>
<return>
<value>${chrome_options}</value>
<status status="PASS" start="2024-06-05T16:36:43.847493" elapsed="0.000000"/>
</return>
<msg time="2024-06-05T16:36:43.847493" level="INFO">${chrome_options_obj} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000019947E61400&gt;</msg>
<var>${chrome_options_obj}</var>
<arg>${is_headless}</arg>
<arg>${incognito}</arg>
<arg>${chrome_options_list}</arg>
<doc>builds up the all the needed chrome options as well as the additional
options needed by the project that will use this keyword.</doc>
<status status="PASS" start="2024-06-05T16:36:43.838483" elapsed="0.009010"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:43.847493" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<arg>Chrome</arg>
<arg>options=${chrome_options_obj}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2024-06-05T16:36:43.847493" elapsed="6.754886"/>
</kw>
<arg>${IS_HEADLESS}</arg>
<arg>${INCOGNITO}</arg>
<arg>${OPTIONS_LIST}</arg>
<doc>Arguments:
is_headless : set to True to run the test suite in headless mode
incognito : set to True to run the test suite in incognito mode
chrome_options_list: pass on all the necessary chrome options here</doc>
<status status="PASS" start="2024-06-05T16:36:43.837484" elapsed="6.764895"/>
</kw>
<kw name="Set Selenium Timeout" owner="SeleniumLibrary">
<arg>${DEFAULT_TIMEOUT}</arg>
<doc>Sets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:50.602379" elapsed="0.001996"/>
</kw>
<if>
<branch type="IF" condition="${ENABLE_SELENIUM_SPEED}">
<kw name="Set Selenium Speed" owner="SeleniumLibrary">
<arg>${SELENIUM_SPEED}</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:50.605371" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:50.605371" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:50.605371" elapsed="0.000000"/>
</if>
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:50.606369" level="INFO">Opening url 'https://admin-redesign.dev-gos-gsp.io/'</msg>
<arg>${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2024-06-05T16:36:50.606369" elapsed="3.240876"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:43.837484" elapsed="10.009761"/>
</kw>
<kw name="Maximize Browser Window" owner="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" start="2024-06-05T16:36:53.848241" elapsed="0.051864"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:53.902084" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:53.902084" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:53.902084" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:53.902084" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:53.903115" elapsed="0.033106"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:53.936221" elapsed="0.038992"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:53.975213" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:53.976231" elapsed="0.035884"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:53.975213" elapsed="0.037899"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.013112" elapsed="0.001036"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:53.901087" elapsed="0.113061"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.015107" level="INFO">Typing text 'a.yango' into text field 'id:username'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.014148" elapsed="0.148656"/>
</kw>
<arg>${username_input}</arg>
<arg>${username}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:53.900105" elapsed="0.262699"/>
</kw>
<kw name="Wait And Input Password" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.164824" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:54.164824" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:54.164824" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:54.164824" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:54.165822" elapsed="0.016955"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:54.182777" elapsed="0.027951"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.210728" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.211761" elapsed="0.025302"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:54.210728" elapsed="0.026335"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.237063" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.163826" elapsed="0.074258"/>
</kw>
<kw name="Input Password" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.238084" level="INFO">Typing password into text field 'id:password'.</msg>
<msg time="2024-06-05T16:36:54.297998" level="INFO">Temporally setting log level to: NONE</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.238084" elapsed="0.140095"/>
</kw>
<arg>${password_input}</arg>
<arg>${password}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
The password text is not printed displayed in logs.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
password: (string) Password text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.163826" elapsed="0.214353"/>
</kw>
<kw name="Get Totp" owner="totp">
<msg time="2024-06-05T16:36:54.379176" level="INFO">${otp} = 326738</msg>
<var>${otp}</var>
<arg>${TOKEN}</arg>
<status status="PASS" start="2024-06-05T16:36:54.378179" elapsed="0.000997"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.380173" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:54.380173" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:54.379176" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:54.379176" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:54.380173" elapsed="0.016097"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:54.396270" elapsed="0.027230"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.423500" elapsed="0.001026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.424526" elapsed="0.023790"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:54.424526" elapsed="0.023790"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.449314" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.379176" elapsed="0.071137"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.450313" level="INFO">Typing text '326738' into text field 'id:otpcode'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.450313" elapsed="0.112454"/>
</kw>
<arg>${otp_input}</arg>
<arg>${otp}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.379176" elapsed="0.183591"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.564768" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:54.564768" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:54.563795" elapsed="0.000973"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:54.563795" elapsed="0.000973"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:54.564768" elapsed="0.015900"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:54.581668" elapsed="0.029238"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.610906" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.610906" elapsed="0.028289"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:54.610906" elapsed="0.028289"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:54.639195" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.563795" elapsed="0.075400"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.640192" level="INFO">Clicking element '//button[@data-testid='submit-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:54.640192" elapsed="0.084563"/>
</kw>
<arg>${login_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.563795" elapsed="0.160960"/>
</kw>
<kw name="Wait And Mouse Over" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:54.726732" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:54.726732" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:54.725774" elapsed="0.000958"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:54.725774" elapsed="0.001950"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:54.727724" elapsed="2.161141"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:56.888865" elapsed="0.034930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:56.923795" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:56.924782" elapsed="0.022900"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:56.923795" elapsed="0.023887"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:56.948677" elapsed="0.001000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.725774" elapsed="2.223903"/>
</kw>
<kw name="Mouse Over" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:56.949677" level="INFO">Simulating Mouse Over on element '//img[@data-testid='sidebar-logo']'.</msg>
<arg>${locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:56.949677" elapsed="0.419146"/>
</kw>
<arg>${gos_header}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be visible, then executes a
mouse over command on it.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:54.724755" elapsed="2.644068"/>
</kw>
<kw name="Is Element Visible" owner="SeleniumActions">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Element Should Be Visible" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.418691" level="INFO">Element '//img[@data-testid='sidebar-logo']' is displayed.</msg>
<arg>${locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:57.369833" elapsed="0.049855"/>
</kw>
<msg time="2024-06-05T16:36:57.419688" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>Element Should Be Visible</arg>
<arg>${locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-06-05T16:36:57.369833" elapsed="0.049855"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2024-06-05T16:36:57.419688" elapsed="0.000000"/>
</return>
<arg>${gos_header}</arg>
<doc>Return the current state of the element, the keyword will return true if the element
is visible and false if it is not visible.</doc>
<status status="PASS" start="2024-06-05T16:36:57.368823" elapsed="0.050865"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:43.836455" elapsed="13.583233"/>
</kw>
<test id="s1-t1" name="(SRPHGBEQA-T5312) [Package Info - List] package info page should display correct page component" line="20">
<kw name="Get Random Package" owner="Random_Words">
<msg time="2024-06-05T16:36:57.420684" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'Utils\\wordlist.txt'</msg>
<var>${package_game}</var>
<arg>${CAT_GAME}</arg>
<status status="FAIL" start="2024-06-05T16:36:57.420684" elapsed="0.001995">FileNotFoundError: [Errno 2] No such file or directory: 'Utils\\wordlist.txt'</status>
</kw>
<kw name="Get Random Package" owner="Random_Words">
<var>${package_non_game}</var>
<arg>${CAT_NON_GAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.422679" elapsed="0.000000"/>
</kw>
<kw name="Get Random Package" owner="Random_Words">
<var>${package_unknown}</var>
<arg>${CAT_UNKNOWN}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.423677" elapsed="0.000000"/>
</kw>
<kw name="Get Random Package" owner="Random_Words">
<var>${package_unknown_required}</var>
<arg>${CAT_UNKNOWN}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.423677" elapsed="0.000000"/>
</kw>
<kw name="Get Random Package" owner="Random_Words">
<var>${package_unknown_for_move}</var>
<arg>${CAT_UNKNOWN}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.424674" elapsed="0.000000"/>
</kw>
<kw name="Get Random Word" owner="Random_Words">
<var>${title}</var>
<status status="NOT RUN" start="2024-06-05T16:36:57.424674" elapsed="0.000000"/>
</kw>
<kw name="Get Random Word" owner="Random_Words">
<var>${developer}</var>
<status status="NOT RUN" start="2024-06-05T16:36:57.424674" elapsed="0.000000"/>
</kw>
<kw name="Get Random Word" owner="Random_Words">
<var>${title_updated}</var>
<status status="NOT RUN" start="2024-06-05T16:36:57.425671" elapsed="0.000000"/>
</kw>
<kw name="Get Random Word" owner="Random_Words">
<var>${developer_updated}</var>
<status status="NOT RUN" start="2024-06-05T16:36:57.425671" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${package_game}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.426668" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${package_non_game}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.426668" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${package_unknown}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.426668" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${package_unknown_required}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.427680" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${package_unknown_for_move}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.427680" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${title}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.427680" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${developer}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.428663" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${title_updated}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.428663" elapsed="0.000000"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${developer_updated}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.429660" elapsed="0.000000"/>
</kw>
<kw name="Verify Package Page Component" owner="Package_Actions">
<status status="NOT RUN" start="2024-06-05T16:36:57.430673" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:36:57.419688" elapsed="0.010985">FileNotFoundError: [Errno 2] No such file or directory: 'Utils\\wordlist.txt'</status>
</test>
<test id="s1-t2" name="(SRPHGBEQA-T5312) [Package Info - Add] game package info when all fields are populated can be added" line="43">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.438648" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:57.438648" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.437639" elapsed="0.001009"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.437639" elapsed="0.001009"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:57.438648" elapsed="0.015970"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:57.455597" elapsed="0.028920"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.485516" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.486513" elapsed="0.031919"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:57.486513" elapsed="0.031919"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.519427" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.437639" elapsed="0.081788"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.520423" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.519427" elapsed="0.085769"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.435646" elapsed="0.169550"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.435646" elapsed="0.169550"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.435646" elapsed="0.169550"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.606193" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.605196" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.605196" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.606193" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.607190" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.606193" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.606193" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.607190" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.607190" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.607190" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.607190" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.608187" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.608187" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.607190" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.607190" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.608187" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.608187" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.608187" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.609185" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.609185" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.609185" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.609185" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.610182" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.609185" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.609185" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.610182" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.610182" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.610182" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.610182" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.611179" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.611179" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.610182" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.610182" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.611179" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.612177" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.611179" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.611179" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.612177" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.612177" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.612177" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.612177" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.613173" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.613173" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:57.612177" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.612177" elapsed="0.000996"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:36:57.435646" elapsed="0.177527"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.616167" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:57.615171" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.615171" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.615171" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:57.616167" elapsed="0.014959"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:57.631126" elapsed="0.023974"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.656122" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.656122" elapsed="0.020678"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:57.656122" elapsed="0.020678"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.676800" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.615171" elapsed="0.061629"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.677762" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.676800" elapsed="0.104549"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.614172" elapsed="0.167177"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.614172" elapsed="0.167177"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:36:57.786364" level="FAIL">Variable '${package_game}' not found.</msg>
<arg>${package_game}</arg>
<status status="FAIL" start="2024-06-05T16:36:57.783345" elapsed="0.003019">Variable '${package_game}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.787356" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.788331" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.789326" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:57.790358" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:36:57.791377" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:57.791377" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:36:57.432651" elapsed="0.359703">Variable '${package_game}' not found.</status>
</test>
<test id="s1-t3" name="(SRPHGBEQA-T5314) [Package Info - Add] game package info when package name is empty cannot be added" line="55">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.801328" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:57.800299" elapsed="0.001029"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.800299" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.800299" elapsed="0.001029"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:57.801328" elapsed="0.011711"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:57.813039" elapsed="0.027819"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.840858" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.841858" elapsed="0.028079"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:57.840858" elapsed="0.030073"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:57.870931" elapsed="0.001022"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.800299" elapsed="0.071654"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:57.871953" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:57.871953" elapsed="0.212295"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:57.797360" elapsed="0.287860"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:57.796308" elapsed="0.288912"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:57.796308" elapsed="0.288912"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.085220" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.085220" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.085220" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.085220" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.085220" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.086215" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.087182" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.087182" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.086215" elapsed="0.000967"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.086215" elapsed="0.000967"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.087182" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.087182" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.087182" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.088211" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.087182" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.087182" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.088211" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.088211" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.088211" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.088211" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.089176" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.089176" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.088211" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.088211" elapsed="0.000965"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.089176" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.089176" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.089176" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.089176" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.090204" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.090204" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.090204" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.090204" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.090204" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.091170" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.090204" elapsed="0.000966"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.090204" elapsed="0.000966"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.091170" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.091170" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.091170" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.091170" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:36:57.796308" elapsed="0.294862"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.094163" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:58.093196" elapsed="0.000967"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.093196" elapsed="0.000967"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.093196" elapsed="0.000967"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:58.094163" elapsed="0.035891"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:58.131055" elapsed="0.028399"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.160451" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.161448" elapsed="0.024561"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:58.160451" elapsed="0.025558"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.186009" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.093196" elapsed="0.092813"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.187009" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.187009" elapsed="0.090426"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.092169" elapsed="0.185266"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.092169" elapsed="0.186265"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.281426" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:58.281426" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.280428" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.280428" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:58.281426" elapsed="0.019946"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:58.301372" elapsed="0.026171"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.328530" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.328530" elapsed="0.026495"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:58.328530" elapsed="0.026495"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.355025" elapsed="0.001012"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.280428" elapsed="0.075609"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.356037" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.356037" elapsed="0.082156"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.279444" elapsed="0.158749"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.279444" elapsed="0.158749"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:36:58.442181" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:36:58.439204" elapsed="0.002977">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:58.442181" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:36:57.794379" elapsed="0.648800">Variable '${developer}' not found.</status>
</test>
<test id="s1-t4" name="Package_Info_Add_game package info when package name has invalid value cannot be added" line="62">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.451160" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:58.451160" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.450161" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.450161" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:58.451160" elapsed="0.012968"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:58.464128" elapsed="0.028868"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.492996" elapsed="0.001006"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.495017" elapsed="0.033336"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:58.494002" elapsed="0.034351"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.529359" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.450161" elapsed="0.079198"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.529359" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.529359" elapsed="0.214496"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.446205" elapsed="0.297650"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.446205" elapsed="0.297650"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.446205" elapsed="0.297650"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.744852" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.743855" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.743855" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.744852" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.745850" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.744852" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.744852" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.746847" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.746847" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.745850" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.745850" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.747844" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.747844" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.746847" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.746847" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.748846" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.747844" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.747844" elapsed="0.001002"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.749839" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.748846" elapsed="0.000993"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.748846" elapsed="0.000993"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.749839" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.750836" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.749839" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.749839" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.750836" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.751833" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.750836" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.750836" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.751833" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.751833" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.751833" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.752830" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000998"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.753828" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.752830" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.752830" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.753828" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:58.753828" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:58.753828" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.753828" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:36:58.446205" elapsed="0.308620"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.756819" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:58.756819" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.756819" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.756819" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:58.756819" elapsed="0.054027"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:58.811880" elapsed="0.026498"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.839400" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.839400" elapsed="0.020731"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:58.839400" elapsed="0.020731"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.861066" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.756819" elapsed="0.104247"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.861066" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:58.861066" elapsed="0.092571"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.755827" elapsed="0.197810"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.755827" elapsed="0.197810"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:58.956627" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:58.956627" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:58.956627" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:58.956627" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:58.957624" elapsed="0.014962"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:58.972586" elapsed="0.025296"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:58.998881" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.000876" elapsed="0.026333"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:58.999880" elapsed="0.027329"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.028206" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.956627" elapsed="0.071579"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.029205" level="INFO">Typing text 'com.$%W^##$#$%' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.029205" elapsed="0.144871"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:58.955645" elapsed="0.218431"/>
</kw>
<arg>${INVALID_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:36:58.954633" elapsed="0.219443"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:36:59.178094" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:36:59.175084" elapsed="0.003010">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_INVALID_NAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:36:59.178817" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:36:58.445175" elapsed="0.734410">Variable '${developer}' not found.</status>
</test>
<test id="s1-t5" name="Package_Info_Add_game package info when package name is more than maximum (256) cannot be added" line="69">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.186906" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:59.186906" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:59.186906" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.186906" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:59.186906" elapsed="0.014642"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:59.201548" elapsed="0.026754"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.228302" elapsed="0.000967"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.229269" elapsed="0.033168"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:59.229269" elapsed="0.033168"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.262437" elapsed="0.001028"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.185902" elapsed="0.077563"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.263465" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.263465" elapsed="0.223190"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.184871" elapsed="0.302781"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:59.183909" elapsed="0.303743"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.183909" elapsed="0.303743"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.487652" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.487652" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.487652" elapsed="0.001010"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.488662" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.489678" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.488662" elapsed="0.001016"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.488662" elapsed="0.001016"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.489678" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.490673" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.489678" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.489678" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.490673" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.491672" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.490673" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.490673" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.491672" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.491672" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.491672" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.492669" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.491672" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.491672" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.492669" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.493665" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.492669" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.492669" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.493665" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.494653" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.493665" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.493665" elapsed="0.000988"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.494653" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.494653" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.494653" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.494653" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.495633" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.495633" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.495633" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.495633" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.496660" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.496660" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.495633" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.495633" elapsed="0.001027"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.497628" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:36:59.497628" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:36:59.496660" elapsed="0.000968"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.496660" elapsed="0.000968"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:36:59.182878" elapsed="0.314750"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.501612" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:59.501612" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:59.500615" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.500615" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:59.501612" elapsed="0.035815"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:59.537427" elapsed="0.025155"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.562582" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.563604" elapsed="0.022160"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:59.562582" elapsed="0.024179"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.586761" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.500615" elapsed="0.086146"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.587758" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.586761" elapsed="0.092273"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.499618" elapsed="0.179416"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:59.499618" elapsed="0.179416"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.681029" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:36:59.681029" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:36:59.681029" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:36:59.681029" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:36:59.682025" elapsed="0.013000"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:36:59.695025" elapsed="0.028566"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.723591" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.724624" elapsed="0.027345"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:36:59.724624" elapsed="0.027345"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:36:59.751969" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.681029" elapsed="0.071919"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:36:59.752948" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:36:59.752948" elapsed="0.442649"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:36:59.680032" elapsed="0.515565"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:36:59.680032" elapsed="0.516542"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:00.200564" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:00.196574" elapsed="0.003990">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.201561" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:36:59.180880" elapsed="1.020681">Variable '${developer}' not found.</status>
</test>
<test id="s1-t6" name="Package_Info_Add_game package info when using existing package name cannot be added" line="76">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.207545" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:00.207545" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.206548" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.206548" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:00.207545" elapsed="0.017954"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:00.226495" elapsed="0.028569"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.255064" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.256055" elapsed="0.029382"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:00.256055" elapsed="0.029382"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.286470" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.206548" elapsed="0.079922"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.287474" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.286470" elapsed="0.197268"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.205552" elapsed="0.278186"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.204555" elapsed="0.279183"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.204555" elapsed="0.279183"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.484765" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.483738" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.483738" elapsed="0.001027"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.484765" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.484765" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.484765" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.484765" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.484765" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.484765" elapsed="0.001004"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.485769" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.486729" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.486729" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.486729" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.487726" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.488754" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.488754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.487726" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.487726" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.488754" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.488754" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.488754" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.488754" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.489752" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.489752" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.489752" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.489752" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.489752" elapsed="0.000997"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.490749" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.489752" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.489752" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:00.204555" elapsed="0.286194"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.492739" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:00.492739" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.492739" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.491715" elapsed="0.001024"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:00.493710" elapsed="0.040923"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:00.534633" elapsed="0.027841"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.562474" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.563473" elapsed="0.032794"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:00.562474" elapsed="0.033793"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.596267" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.491715" elapsed="0.104552"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.597267" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.597267" elapsed="0.104387"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.491715" elapsed="0.209939"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.490749" elapsed="0.210905"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:00.706639" level="FAIL">Variable '${package_game}' not found.</msg>
<arg>${package_game}</arg>
<status status="FAIL" start="2024-06-05T16:37:00.702650" elapsed="0.003989">Variable '${package_game}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.707636" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.708635" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.708635" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.709631" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:00.709631" elapsed="0.000000"/>
</kw>
<kw name="Verify Toast Error message" owner="Package_Actions">
<arg>${ERROR_PACKAGE_ALREADY_EXISTS}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:00.710628" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:00.203554" elapsed="0.508078">Variable '${package_game}' not found.</status>
</test>
<test id="s1-t7" name="Package_Info_Add_game package info when title is empty cannot be added" line="87">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.722598" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:00.721609" elapsed="0.000989"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.721609" elapsed="0.000989"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.721609" elapsed="0.000989"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:00.722598" elapsed="0.015955"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:00.738553" elapsed="0.030984"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.769537" elapsed="0.001019"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.770556" elapsed="0.026519"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:00.770556" elapsed="0.026519"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:00.798072" elapsed="0.001010"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.720603" elapsed="0.078479"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:00.800065" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:00.799082" elapsed="0.197233"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:00.718625" elapsed="0.277690"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.717609" elapsed="0.278706"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.717609" elapsed="0.278706"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.996315" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.996315" elapsed="0.000961"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.996315" elapsed="0.000961"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.997276" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.998273" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.997276" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.997276" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.998273" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.999269" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.998273" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.998273" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:00.999269" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.000267" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:00.999269" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:00.999269" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.000267" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.000267" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.000267" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.000267" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.000267" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.000267" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.001264" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.001264" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.001264" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.001264" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.002262" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.002262" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.001264" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.001264" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.002262" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.002262" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.002262" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.002262" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.003258" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.003258" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.003258" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.003258" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.003258" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.003258" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.004256" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:00.716612" elapsed="0.287644"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.007249" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:01.007249" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.006251" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.006251" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:01.007249" elapsed="0.041001"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:01.048250" elapsed="0.028548"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.077819" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.077819" elapsed="0.025692"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:01.077819" elapsed="0.025692"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.104509" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.006251" elapsed="0.098258"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.104509" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.104509" elapsed="0.133415"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.006251" elapsed="0.231673"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.005253" elapsed="0.232671"/>
</kw>
<kw name="Click Title in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.240915" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:01.240915" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.240915" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.240915" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:01.240915" elapsed="0.017512"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:01.258427" elapsed="0.027042"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.285469" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.286466" elapsed="0.026407"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:01.285469" elapsed="0.027404"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.313870" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.239918" elapsed="0.073952"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.314868" level="INFO">Clicking element '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.314868" elapsed="0.079333"/>
</kw>
<arg>${input_title_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.239918" elapsed="0.154283"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.238936" elapsed="0.155265"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.396612" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:01.396612" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.395615" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.395615" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:01.396612" elapsed="0.020673"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:01.417285" elapsed="0.026089"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.443374" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.444373" elapsed="0.024627"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:01.443374" elapsed="0.025626"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.469000" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.395615" elapsed="0.074406"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.470021" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.470021" elapsed="0.148633"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.395615" elapsed="0.223039"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:01.394584" elapsed="0.224070"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:01.620650" elapsed="0.041923"/>
</kw>
<arg>${ERROR_TITLE_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:01.619667" elapsed="0.042906"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:00.713622" elapsed="0.949913"/>
</test>
<test id="s1-t8" name="Package_Info_Add_game package info when title is more than maximum (256) cannot be added" line="94">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.670516" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:01.670516" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.670516" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.670516" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:01.670516" elapsed="0.015958"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:01.686474" elapsed="0.037917"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.724391" elapsed="0.000979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.726367" elapsed="0.038901"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:01.725370" elapsed="0.039898"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:01.766260" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.669520" elapsed="0.097736"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:01.767256" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:01.767256" elapsed="0.224598"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:01.667549" elapsed="0.324305"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:01.666526" elapsed="0.325328"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.666526" elapsed="0.325328"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.991854" elapsed="0.000996"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.991854" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.991854" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.992850" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.992850" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.992850" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.992850" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.993847" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.993847" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.992850" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.992850" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.994844" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.994844" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.993847" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.993847" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.994844" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.994844" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.994844" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.995841" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.995841" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.994844" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.995841" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.996839" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.995841" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.995841" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.996839" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.996839" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.996839" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.996839" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.997836" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.997836" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.997836" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.997836" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.998834" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.998834" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.997836" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.997836" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.999833" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:01.999833" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.998834" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.998834" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:02.000829" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:02.000829" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:01.999833" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:01.999833" elapsed="0.002001"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:01.665530" elapsed="0.336304"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.005813" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:02.004830" elapsed="0.000983"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.004830" elapsed="0.000983"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:02.004830" elapsed="0.000983"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:02.005813" elapsed="0.035905"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:02.041718" elapsed="0.031915"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.074632" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.075629" elapsed="0.028930"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:02.074632" elapsed="0.029927"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.104559" elapsed="0.000990"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.003821" elapsed="0.101728"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.105549" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.105549" elapsed="0.163272"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.002824" elapsed="0.265997"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.002824" elapsed="0.265997"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.271812" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:02.271812" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.270815" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:02.270815" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:02.271812" elapsed="0.016957"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:02.288769" elapsed="0.032912"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.321681" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.322679" elapsed="0.022949"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:02.322679" elapsed="0.022949"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.345628" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.270815" elapsed="0.074813"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.346624" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.345628" elapsed="0.400941"/>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.269819" elapsed="0.476750"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:02.269819" elapsed="0.476750"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:02.751555" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:02.747567" elapsed="0.003988">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:02.751555" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:01.664532" elapsed="1.088021">Variable '${developer}' not found.</status>
</test>
<test id="s1-t9" name="Package_Info_Add_game package info when developer is empty cannot be added" line="101">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.757540" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:02.757540" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.757540" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:02.757540" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:02.757540" elapsed="0.014307"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:02.771847" elapsed="0.028924"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.801769" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.802766" elapsed="0.024932"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:02.801769" elapsed="0.026927"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:02.828696" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.756543" elapsed="0.072153"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:02.829693" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:02.829693" elapsed="0.218200"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:02.755546" elapsed="0.292347"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.754549" elapsed="0.293344"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:02.754549" elapsed="0.294339"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.048888" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.048888" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.048888" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.049885" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.050914" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.049885" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.049885" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.051910" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.051910" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.050914" elapsed="0.001994"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.050914" elapsed="0.001994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.053874" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.053874" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.052908" elapsed="0.001964"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.052908" elapsed="0.001964"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.054872" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.054872" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.054872" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.055900" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.055900" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.055900" elapsed="0.000994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.056894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.057897" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.056894" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.056894" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.058884" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.059882" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.057897" elapsed="0.001985"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.057897" elapsed="0.001985"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.060856" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.060856" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.059882" elapsed="0.000974"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.059882" elapsed="0.000974"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.061883" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.062848" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.061883" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.060856" elapsed="0.001992"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.063846" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.063846" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.062848" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.062848" elapsed="0.001996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.064844" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:03.065841" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:03.064844" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.064844" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:02.754549" elapsed="0.311292"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.068839" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:03.068839" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.067857" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.067857" elapsed="0.000982"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:03.069832" elapsed="0.042920"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:03.112752" elapsed="0.037869"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.150621" elapsed="0.000991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.151612" elapsed="0.020968"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:03.151612" elapsed="0.020968"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.172580" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.067857" elapsed="0.104723"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.173581" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.172580" elapsed="0.121654"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.067857" elapsed="0.227373"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.066859" elapsed="0.228371"/>
</kw>
<kw name="Click Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.299218" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:03.298222" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.298222" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.298222" elapsed="0.001996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:03.300218" elapsed="0.020976"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:03.321194" elapsed="0.026893"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.349085" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.350086" elapsed="0.026924"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:03.350086" elapsed="0.026924"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.377010" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.297225" elapsed="0.080782"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.378007" level="INFO">Clicking element '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.378007" elapsed="0.077802"/>
</kw>
<arg>${input_developer_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.296227" elapsed="0.159582"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.296227" elapsed="0.159582"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.458790" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:03.458790" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.457796" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.457796" elapsed="0.000994"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:03.458790" elapsed="0.013965"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:03.473752" elapsed="0.030916"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.505665" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.505665" elapsed="0.024933"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:03.505665" elapsed="0.025933"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.531598" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.457796" elapsed="0.074798"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.533593" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.533593" elapsed="0.143619"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.456798" elapsed="0.221408"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:03.456798" elapsed="0.221408"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:03.679203" elapsed="0.034908"/>
</kw>
<arg>${ERROR_DEVELOPER_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:03.678206" elapsed="0.035905"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:02.753550" elapsed="0.961557"/>
</test>
<test id="s1-t10" name="Package_Info_Add_game package info when developer is more than maximum (256) cannot be added" line="108">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.721124" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:03.721124" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.721124" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.721124" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:03.722089" elapsed="0.014959"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:03.737048" elapsed="0.029926"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.766974" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.767998" elapsed="0.027892"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:03.767998" elapsed="0.027892"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:03.796887" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.720095" elapsed="0.076792"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:03.797885" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:03.797885" elapsed="0.237988"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:03.719098" elapsed="0.317774"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.719098" elapsed="0.317774"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:03.719098" elapsed="0.317774"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.036872" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.036872" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.036872" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.036872" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.037869" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.036872" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.036872" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.037869" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.037869" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.037869" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.037869" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.038888" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.038888" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.037869" elapsed="0.001019"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.037869" elapsed="0.001019"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.039872" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.038888" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.038888" elapsed="0.000984"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.039872" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.039872" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.039872" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.039872" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.039872" elapsed="0.000989"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.039872" elapsed="0.000989"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.041858" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.040861" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.040861" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.041858" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.041858" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.041858" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.041858" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.042856" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.042856" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.041858" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.041858" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.043853" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:04.043853" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:04.042856" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.042856" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:03.718102" elapsed="0.325751"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.047841" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:04.047841" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.046846" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.046846" elapsed="0.000995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:04.048838" elapsed="0.069816"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:04.119659" elapsed="0.027917"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.148572" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.150568" elapsed="0.024944"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:04.149573" elapsed="0.025939"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.175512" elapsed="0.001014"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.045864" elapsed="0.130662"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.176526" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.176526" elapsed="0.136615"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.044851" elapsed="0.268290"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.044851" elapsed="0.268290"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.317131" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:04.316134" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.316134" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.316134" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:04.317131" elapsed="0.015960"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:04.334114" elapsed="0.028924"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.363038" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.364001" elapsed="0.024935"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:04.363038" elapsed="0.025898"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.388936" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.315168" elapsed="0.074765"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.389933" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.389933" elapsed="0.411900"/>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.314138" elapsed="0.488693"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:04.313141" elapsed="0.489690"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.804825" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:04.804825" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.804825" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.804825" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:04.805821" elapsed="0.011968"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:04.818791" elapsed="0.021938"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.840729" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.841727" elapsed="0.021940"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:04.841727" elapsed="0.021940"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:04.863667" elapsed="0.001000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.803827" elapsed="0.060840"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.865665" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:04.864667" elapsed="0.068819"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.803827" elapsed="0.129659"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.803827" elapsed="0.129659"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:04.935480" elapsed="0.033912"/>
</kw>
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:37:04.934483" elapsed="0.034909"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:03.717113" elapsed="1.253275"/>
</test>
<test id="s1-t11" name="Package_Info_Add_game package info when history comment is empty cannot be added" line="115">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:04.975375" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:04.975375" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.975375" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.975375" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:04.976373" elapsed="0.011967"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:04.988340" elapsed="0.022941"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.011281" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.012278" elapsed="0.024933"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:05.012278" elapsed="0.024933"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.037211" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.975375" elapsed="0.062833"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.038208" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.038208" elapsed="0.186501"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:04.973379" elapsed="0.251330"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.973379" elapsed="0.251330"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:04.973379" elapsed="0.251330"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.225739" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.224709" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.224709" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.225739" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.225739" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.225739" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.225739" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.226742" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.226742" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.226742" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.226742" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.227702" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.227702" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.226742" elapsed="0.000960"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.226742" elapsed="0.000960"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.227702" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.227702" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.227702" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.228732" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.227702" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.227702" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.228732" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.228732" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.228732" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.228732" elapsed="0.000963"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.229695" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.229695" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.229695" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.229695" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.229695" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.230694" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.229695" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.229695" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.230694" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.230694" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.230694" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.230694" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.231691" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.231691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.231691" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.230694" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.232689" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:05.232689" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:05.231691" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.231691" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:04.972383" elapsed="0.260306"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.235706" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:05.234707" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.234707" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.234707" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:05.235706" elapsed="0.042243"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:05.277949" elapsed="0.034852"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.312801" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.313798" elapsed="0.024983"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:05.313798" elapsed="0.024983"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.338781" elapsed="0.000947"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.234707" elapsed="0.105021"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.339728" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.339728" elapsed="0.098761"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.233686" elapsed="0.204803"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.233686" elapsed="0.205820"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.441480" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:05.441480" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.441480" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.441480" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:05.441480" elapsed="0.013962"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:05.455442" elapsed="0.027877"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.483319" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.484316" elapsed="0.022938"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:05.484316" elapsed="0.022938"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.507254" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.440483" elapsed="0.067789"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.508272" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.508272" elapsed="0.081760"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.440483" elapsed="0.149549"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.439506" elapsed="0.150526"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.592051" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:05.592051" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.592051" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.592051" elapsed="0.001000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:05.593051" elapsed="0.013935"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:05.606986" elapsed="0.027926"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.634912" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.635945" elapsed="0.025895"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:05.635945" elapsed="0.025895"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.661840" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.592051" elapsed="0.070786"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.662837" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.662837" elapsed="0.080820"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.591029" elapsed="0.152628"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.591029" elapsed="0.152628"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:05.745649" elapsed="0.043552"/>
</kw>
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:05.744627" elapsed="0.044574"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:04.971386" elapsed="0.818812"/>
</test>
<test id="s1-t12" name="Package_Info_Add_game package info when history comment is more than maximum (1001) cannot be added" line="123">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.795211" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:05.795211" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.795211" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.795211" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:05.796186" elapsed="0.017948"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:05.814134" elapsed="0.030949"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.845083" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.846071" elapsed="0.038350"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:05.846071" elapsed="0.038350"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:05.885472" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.795211" elapsed="0.090261"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:05.885472" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:05.885472" elapsed="0.197328"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:05.794215" elapsed="0.289524"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.793214" elapsed="0.290525"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:05.793214" elapsed="0.290525"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.083739" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.083739" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.083739" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.083739" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.084736" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.083739" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.083739" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.084736" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.084736" elapsed="0.000998"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.084736" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.084736" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.085734" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.085734" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.085734" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.085734" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.085734" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.085734" elapsed="0.001049"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.085734" elapsed="0.001049"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.086783" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.086783" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.086783" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.086783" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.086783" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.086783" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.086783" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.087786" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.087786" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.087786" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.087786" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.088784" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.088784" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.088784" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.088784" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.089785" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.089785" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.088784" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.088784" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.089785" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.090753" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.089785" elapsed="0.000968"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.089785" elapsed="0.000968"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.090753" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:06.090753" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:06.090753" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.090753" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:05.793214" elapsed="0.297539"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:06.092791" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:06.092791" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:06.092791" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.092791" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:06.093738" elapsed="0.033886"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:06.127624" elapsed="0.029801"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:06.157425" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:06.158422" elapsed="0.025626"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:06.158422" elapsed="0.025626"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:06.184048" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:06.092791" elapsed="0.092253"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:06.185044" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:06.185044" elapsed="0.089769"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:06.091771" elapsed="0.183042"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:06.091771" elapsed="0.183042"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:06.278803" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:06.278803" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:06.278803" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:06.278803" elapsed="0.000995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:06.279798" elapsed="0.014960"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:06.295755" elapsed="0.030463"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:06.326218" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:06.327218" elapsed="0.025695"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:06.326218" elapsed="0.026695"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:06.353895" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:06.277817" elapsed="0.076078"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:06.353895" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:06.353895" elapsed="1.287467"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:06.276807" elapsed="1.364555"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:06.275809" elapsed="1.366550"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:07.644354" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:07.644354" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:07.644354" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:07.644354" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:07.645351" elapsed="0.012964"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:07.658315" elapsed="0.021941"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:07.680256" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:07.681255" elapsed="0.024661"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:07.681255" elapsed="0.024661"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:07.705916" elapsed="0.000987"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:07.643356" elapsed="0.063547"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:07.706903" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:07.706903" elapsed="0.072803"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:07.643356" elapsed="0.136350"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:07.642359" elapsed="0.137347"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:07.780703" elapsed="0.035908"/>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="PASS" start="2024-06-05T16:37:07.780703" elapsed="0.035908"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:05.791194" elapsed="2.026433"/>
</test>
<test id="s1-t13" name="Package_Info_Add_Non_game package info when all fields are populated can be added" line="131">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:07.824585" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:07.824585" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:07.824585" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:07.824585" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:07.825582" elapsed="0.029922"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:07.855504" elapsed="0.034906"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:07.891407" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:07.892404" elapsed="0.027927"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:07.892404" elapsed="0.027927"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:07.920331" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:07.824585" elapsed="0.095746"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:07.921329" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:07.921329" elapsed="0.191493"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:07.822591" elapsed="0.291225"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:07.821594" elapsed="0.292222"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:07.821594" elapsed="0.292222"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.113816" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.113816" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.113816" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.114813" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.114813" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.114813" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.114813" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.115810" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.115810" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.115810" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.115810" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.116807" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.116807" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.116807" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.116807" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.117805" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.116807" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.116807" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.117805" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.117805" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.117805" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.118802" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.118802" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.117805" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.117805" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.118802" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.119812" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.118802" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.118802" elapsed="0.001010"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.119812" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.119812" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.119812" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.119812" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.120796" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.120796" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.120796" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.120796" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.120796" elapsed="0.000998"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.121794" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.120796" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.120796" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.121794" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.121794" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.121794" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.121794" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:07.821594" elapsed="0.301197"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.124785" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:08.124785" elapsed="0.001006"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.124785" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.124785" elapsed="0.001006"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:08.125791" elapsed="0.046864"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:08.172655" elapsed="0.031919"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.205570" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.206567" elapsed="0.022948"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:08.205570" elapsed="0.023945"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.229515" elapsed="0.000986"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.123789" elapsed="0.106712"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.231501" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.230501" elapsed="0.092752"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.123789" elapsed="0.199464"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.122791" elapsed="0.200462"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.328239" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:08.327250" elapsed="0.000989"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.327250" elapsed="0.000989"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.327250" elapsed="0.000989"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:08.328239" elapsed="0.015958"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:08.345195" elapsed="0.025930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.371125" elapsed="0.001023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.372148" elapsed="0.018926"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:08.372148" elapsed="0.018926"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.391074" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.327250" elapsed="0.063824"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.392071" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.392071" elapsed="0.078425"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.324250" elapsed="0.146246"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:08.324250" elapsed="0.146246"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:08.474520" level="FAIL">Variable '${package_non_game}' not found.</msg>
<arg>${package_non_game}</arg>
<status status="FAIL" start="2024-06-05T16:37:08.471494" elapsed="0.003026">Variable '${package_non_game}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:08.474520" elapsed="0.000964"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:08.475484" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:08.476482" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:08.476482" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:08.477480" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:07.819601" elapsed="0.658874">Variable '${package_non_game}' not found.</status>
</test>
<test id="s1-t14" name="Package_Info_Add_non_game package info when package name is empty cannot be added" line="142">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.491443" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:08.490477" elapsed="0.000966"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.490477" elapsed="0.000966"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.490477" elapsed="0.000966"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:08.491443" elapsed="0.017960"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:08.509403" elapsed="0.032902"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.542305" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.543302" elapsed="0.030930"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:08.543302" elapsed="0.030930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.574232" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.489447" elapsed="0.084785"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.575217" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.575217" elapsed="0.199472"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.485457" elapsed="0.289232"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.484461" elapsed="0.290228"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.484461" elapsed="0.290228"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.774689" elapsed="0.000992"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.774689" elapsed="0.000992"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.774689" elapsed="0.000992"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.775681" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.775681" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.775681" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.775681" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.776678" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.776678" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.776678" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.776678" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.776678" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.776678" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.776678" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.777675" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.778672" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.778672" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.778672" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.778672" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.778672" elapsed="0.000998"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.779670" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.778672" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.778672" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.779670" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.780667" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.779670" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.779670" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.780667" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.780667" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.780667" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.780667" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.781665" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.781665" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.781665" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.781665" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.782663" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:08.782663" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:08.781665" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.781665" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:08.483463" elapsed="0.299200"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.785654" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:08.785654" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.784657" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.784657" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:08.785654" elapsed="0.039417"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:08.825071" elapsed="0.031914"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.857983" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.857983" elapsed="0.020943"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:08.857983" elapsed="0.020943"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:08.878926" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.784657" elapsed="0.094269"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.879923" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:08.879923" elapsed="0.087768"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.783660" elapsed="0.185028"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.783660" elapsed="0.185028"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:08.975670" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:08.975670" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:08.974706" elapsed="0.000964"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:08.974706" elapsed="0.000964"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:08.976669" elapsed="0.015953"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:08.992622" elapsed="0.023938"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.017557" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.018569" elapsed="0.022924"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.017557" elapsed="0.023936"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.041493" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.974706" elapsed="0.067784"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.042490" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.042490" elapsed="0.064828"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:08.969719" elapsed="0.138596"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:08.968688" elapsed="0.139627"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.111307" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:09.110316" elapsed="0.000991"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.110316" elapsed="0.000991"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.110316" elapsed="0.000991"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:09.111307" elapsed="0.014959"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:09.126266" elapsed="0.028922"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.155188" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.156185" elapsed="0.037900"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.155188" elapsed="0.038897"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.194085" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.110316" elapsed="0.083769"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.195082" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.195082" elapsed="0.065460"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.109312" elapsed="0.151230"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.109312" elapsed="0.151230"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:09.266528" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:09.261540" elapsed="0.004988">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:09.267526" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:08.481483" elapsed="0.786043">Variable '${developer}' not found.</status>
</test>
<test id="s1-t15" name="Package_Info_Add_non_game package info when package name has invalid value cannot be added" line="150">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.274511" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:09.274511" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.273508" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.273508" elapsed="0.001003"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:09.274511" elapsed="0.015952"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:09.290463" elapsed="0.025588"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.317048" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.318045" elapsed="0.027924"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.317048" elapsed="0.028921"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.346968" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.273508" elapsed="0.073460"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.347966" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.347966" elapsed="0.238870"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.272512" elapsed="0.314324"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.271514" elapsed="0.315322"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.271514" elapsed="0.315322"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.587833" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.587833" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.587833" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.588830" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.589827" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.588830" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.588830" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.589827" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.590824" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.589827" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.589827" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.590824" elapsed="0.000998"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.591822" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.590824" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.590824" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.592819" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.591822" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.591822" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.592819" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.592819" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.592819" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.593817" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.593817" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.593817" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.593817" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.594814" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.595812" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.594814" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.594814" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.596808" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.596808" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.595812" elapsed="0.002005"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.595812" elapsed="0.002005"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.598805" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.598805" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.597817" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.597817" elapsed="0.000988"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.599802" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.600799" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.599802" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.599802" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.601795" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:09.601795" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:09.600799" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.600799" elapsed="0.000996"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:09.271514" elapsed="0.330281"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.606783" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:09.606783" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.605785" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.605785" elapsed="0.001995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:09.607780" elapsed="0.029919"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:09.637699" elapsed="0.022940"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.661636" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.662633" elapsed="0.025931"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.661636" elapsed="0.026928"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.688564" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.604787" elapsed="0.084775"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.689562" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.689562" elapsed="0.091755"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.603795" elapsed="0.177522"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.602793" elapsed="0.178524"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.787302" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:09.787302" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.786326" elapsed="0.000976"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.786326" elapsed="0.000976"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:09.788299" elapsed="0.014958"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:09.803257" elapsed="0.035903"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.839160" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.841160" elapsed="0.023932"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.840158" elapsed="0.024934"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.866093" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.786326" elapsed="0.079767"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.867089" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.867089" elapsed="0.077789"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.783313" elapsed="0.161565"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:09.782314" elapsed="0.163561"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:09.949865" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:09.949865" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:09.949865" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:09.948868" elapsed="0.001994"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:09.950862" elapsed="0.014960"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:09.965822" elapsed="0.026929"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:09.992751" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:09.993748" elapsed="0.023936"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:09.993748" elapsed="0.023936"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.017684" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.948868" elapsed="0.069813"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.019678" level="INFO">Typing text 'com.$%W^##$#$%' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.018681" elapsed="0.125664"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:09.946873" elapsed="0.197472"/>
</kw>
<arg>${INVALID_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:37:09.945875" elapsed="0.198470"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:10.152323" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:10.145343" elapsed="0.006980">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_INVALID_NAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:10.153321" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:09.269519" elapsed="0.884800">Variable '${developer}' not found.</status>
</test>
<test id="s1-t16" name="Package_Info_Add_non_game package info when package name is more than maximum (256) cannot be added" line="158">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.164292" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:10.163294" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.163294" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.163294" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:10.164292" elapsed="0.016954"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:10.181246" elapsed="0.037902"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.219148" elapsed="0.000995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.221140" elapsed="0.024933"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:10.220143" elapsed="0.025930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.247072" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.162298" elapsed="0.084774"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.248068" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.248068" elapsed="0.199467"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.158308" elapsed="0.290224"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.158308" elapsed="0.290224"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.158308" elapsed="0.290224"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.449529" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.448532" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.448532" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.450527" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.450527" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.449529" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.449529" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.451524" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.452521" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.451524" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.451524" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.453532" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.453532" elapsed="0.000984"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.452521" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.452521" elapsed="0.001995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.454516" elapsed="0.001008"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.454516" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.454516" elapsed="0.001008"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.455524" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.455524" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.455524" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.455524" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.455524" elapsed="0.000988"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.456512" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.457509" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.457509" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.456512" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.456512" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.457509" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.457509" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.457509" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.457509" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.458506" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.459503" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.458506" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.458506" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.460500" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:10.460500" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:10.459503" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.459503" elapsed="0.001995"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:10.158308" elapsed="0.303190"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.464490" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:10.464490" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.464490" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.463492" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:10.465487" elapsed="0.051456"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:10.516943" elapsed="0.027925"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.545865" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.545865" elapsed="0.021942"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:10.545865" elapsed="0.021942"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.567807" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.463492" elapsed="0.104315"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.568804" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.568804" elapsed="0.117686"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.462496" elapsed="0.224998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.462496" elapsed="0.224998"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.691510" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:10.691510" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.691510" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.691510" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:10.692473" elapsed="0.011969"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:10.705467" elapsed="0.027897"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.734361" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.735358" elapsed="0.021942"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:10.734361" elapsed="0.022939"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.757300" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.690516" elapsed="0.067815"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.758331" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.758331" elapsed="0.076376"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.688484" elapsed="0.146223"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:10.688484" elapsed="0.147259"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.837730" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:10.837730" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:10.836735" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:10.836735" elapsed="0.000995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:10.837730" elapsed="0.012935"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:10.851693" elapsed="0.024937"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.876630" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.877622" elapsed="0.026898"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:10.876630" elapsed="0.027890"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:10.904520" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.836735" elapsed="0.068782"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:10.905517" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:10.905517" elapsed="0.464119"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:10.836735" elapsed="0.532901"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:10.835743" elapsed="0.533893"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:11.372608" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:11.370613" elapsed="0.002992">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:11.373605" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:10.155316" elapsed="1.218289">Variable '${developer}' not found.</status>
</test>
<test id="s1-t17" name="Package_Info_Add_non_game package info when using existing package name cannot be added" line="166">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.379063" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:11.379063" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:11.379063" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.379063" elapsed="0.000990"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:11.380053" elapsed="0.014964"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:11.395017" elapsed="0.030888"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.426901" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.427901" elapsed="0.030839"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:11.427901" elapsed="0.030839"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.458740" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.379063" elapsed="0.080674"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.459737" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.459737" elapsed="0.187175"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.377059" elapsed="0.269853"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:11.377059" elapsed="0.269853"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.377059" elapsed="0.270852"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.647911" elapsed="0.000996"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.647911" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.647911" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.648907" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.648907" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.648907" elapsed="0.001046"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.648907" elapsed="0.001046"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.649953" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.649953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.649953" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.649953" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.649953" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.650966" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.649953" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.649953" elapsed="0.001013"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.650966" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.650966" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.650966" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.651899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.650966" elapsed="0.000933"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.650966" elapsed="0.000933"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.651899" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.651899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.651899" elapsed="0.001054"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.651899" elapsed="0.001054"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.652953" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.652953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.652953" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.652953" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.653924" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.653924" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.652953" elapsed="0.000971"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.652953" elapsed="0.000971"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.653924" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.653924" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.653924" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.653924" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.654919" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.654919" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.654919" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.654919" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.654919" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:11.655917" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:11.654919" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.654919" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:11.377059" elapsed="0.278858"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.658880" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:11.658880" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:11.657911" elapsed="0.000969"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.657911" elapsed="0.000969"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:11.658880" elapsed="0.044933"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:11.703813" elapsed="0.026941"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.731731" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.732733" elapsed="0.028098"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:11.732733" elapsed="0.029111"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.761844" elapsed="0.000974"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.657911" elapsed="0.104907"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.762818" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.762818" elapsed="0.095886"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.656942" elapsed="0.202771"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:11.656942" elapsed="0.202771"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.866706" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:11.866706" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:11.866706" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:11.866706" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:11.867710" elapsed="0.015924"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:11.883634" elapsed="0.029950"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.914554" elapsed="0.000996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.916552" elapsed="0.022691"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:11.915550" elapsed="0.023693"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:11.939243" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.866706" elapsed="0.072537"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:11.940240" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:11.939243" elapsed="0.077538"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:11.861694" elapsed="0.155087"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:11.860703" elapsed="0.156078"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:12.022764" level="FAIL">Variable '${package_non_game}' not found.</msg>
<arg>${package_non_game}</arg>
<status status="FAIL" start="2024-06-05T16:37:12.017778" elapsed="0.004986">Variable '${package_non_game}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:12.022764" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:12.023763" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:12.024759" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:12.024759" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:12.025757" elapsed="0.000000"/>
</kw>
<kw name="Verify Toast Error message" owner="Package_Actions">
<arg>${ERROR_PACKAGE_ALREADY_EXISTS}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:12.026754" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:11.376038" elapsed="0.651713">Variable '${package_non_game}' not found.</status>
</test>
<test id="s1-t18" name="Package_Info_Add_non_game package info when title is empty cannot be added" line="178">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.037724" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:12.037724" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.036728" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.036728" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:12.037724" elapsed="0.036902"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:12.074626" elapsed="0.042911"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.117537" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.118566" elapsed="0.025021"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:12.117537" elapsed="0.027039"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.144576" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.036728" elapsed="0.107848"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.144576" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.144576" elapsed="0.194188"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.033735" elapsed="0.305029"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.033735" elapsed="0.305029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.033735" elapsed="0.305029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.338764" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.338764" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.338764" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.339761" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.339761" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.339761" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.339761" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.339761" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.340759" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.339761" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.339761" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.340759" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.340759" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.340759" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.340759" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.341771" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.340759" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.340759" elapsed="0.001012"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.341771" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.341771" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.341771" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.341771" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.341771" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.341771" elapsed="0.000984"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.343750" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.342755" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.342755" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.343750" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.343750" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.343750" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.343750" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.343750" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.343750" elapsed="0.000965"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.344715" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:12.033735" elapsed="0.310980"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.348707" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:12.348707" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.347707" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.347707" elapsed="0.001000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:12.348707" elapsed="0.040891"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:12.389598" elapsed="0.027697"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.417295" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.418293" elapsed="0.022774"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:12.417295" elapsed="0.023772"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.441067" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.347707" elapsed="0.093360"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.442087" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.442087" elapsed="0.088700"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.346729" elapsed="0.185056"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.346729" elapsed="0.185056"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.537809" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:12.537809" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.537809" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.537809" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:12.537809" elapsed="0.018155"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:12.555964" elapsed="0.029507"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.586474" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.586474" elapsed="0.024175"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:12.586474" elapsed="0.024175"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.610649" elapsed="0.001022"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.536771" elapsed="0.074900"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.611671" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.611671" elapsed="0.079784"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.533780" elapsed="0.157675"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:12.532782" elapsed="0.158673"/>
</kw>
<kw name="Click Title in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.697438" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:12.696421" elapsed="0.001017"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.696421" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.696421" elapsed="0.001017"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:12.698416" elapsed="0.016956"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:12.715372" elapsed="0.035440"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.751809" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.752806" elapsed="0.030918"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:12.752806" elapsed="0.030918"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.784720" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.695425" elapsed="0.089295"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.785719" level="INFO">Clicking element '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.785719" elapsed="0.081654"/>
</kw>
<arg>${input_title_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.693430" elapsed="0.174963"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.693430" elapsed="0.174963"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.873380" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:12.872381" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.871384" elapsed="0.001996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:12.871384" elapsed="0.001996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:12.874357" elapsed="0.017950"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:12.892307" elapsed="0.034907"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.927214" elapsed="0.001022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.929210" elapsed="0.026926"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:12.928236" elapsed="0.027900"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:12.956136" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.871384" elapsed="0.085749"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:12.957133" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:12.957133" elapsed="0.140518"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:12.870397" elapsed="0.227254"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:12.869369" elapsed="0.228282"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:13.098650" elapsed="0.029844"/>
</kw>
<arg>${ERROR_TITLE_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:13.098650" elapsed="0.029844"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:12.028750" elapsed="1.100744"/>
</test>
<test id="s1-t19" name="Package_Info_Add_non_game package info when title is more than maximum (256) cannot be added" line="186">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.135476" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:13.135476" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.135476" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.135476" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:13.136474" elapsed="0.011984"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:13.148458" elapsed="0.023919"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.172377" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.172377" elapsed="0.031915"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:13.172377" elapsed="0.031915"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.204292" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.135476" elapsed="0.069813"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.205289" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.205289" elapsed="0.213449"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.133485" elapsed="0.286251"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.133485" elapsed="0.286251"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.133485" elapsed="0.286251"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.420749" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.419736" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.419736" elapsed="0.001013"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.420749" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.421731" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.420749" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.420749" elapsed="0.000982"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.421731" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.422733" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.421731" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.421731" elapsed="0.001002"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.422733" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.422733" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.422733" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.422733" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.423726" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.422733" elapsed="0.000993"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.422733" elapsed="0.000993"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.423726" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.423726" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.423726" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.423726" elapsed="0.000997"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.424723" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.423726" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.423726" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.424723" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.424723" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.424723" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.424723" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.425720" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.425720" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.425720" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.425720" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.425720" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.426717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.425720" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.425720" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.426717" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.426717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.426717" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.426717" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.427714" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:13.427714" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:13.426717" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.426717" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:13.132485" elapsed="0.295229"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.431703" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:13.430715" elapsed="0.000988"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.430715" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.430715" elapsed="0.000988"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:13.431703" elapsed="0.039894"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:13.471597" elapsed="0.027926"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.499523" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.500521" elapsed="0.026927"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:13.500521" elapsed="0.026927"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.528448" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.429709" elapsed="0.098739"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.528448" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.528448" elapsed="0.087762"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.428717" elapsed="0.187493"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.428717" elapsed="0.187493"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.621828" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:13.621828" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.621197" elapsed="0.000631"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.621197" elapsed="0.000631"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:13.622816" elapsed="0.012966"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:13.635782" elapsed="0.027924"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.663706" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.665728" elapsed="0.020916"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:13.664704" elapsed="0.021940"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.686644" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.620220" elapsed="0.067421"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.687641" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.687641" elapsed="0.063865"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.617208" elapsed="0.134298"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:13.617208" elapsed="0.134298"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.754463" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:13.754463" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:13.753467" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:13.753467" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:13.754463" elapsed="0.012969"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:13.767432" elapsed="0.026738"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.795210" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.796203" elapsed="0.026835"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:13.795210" elapsed="0.027828"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:13.823038" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.753467" elapsed="0.070568"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:13.824035" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:13.824035" elapsed="0.418098"/>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:13.752469" elapsed="0.489664"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:13.752469" elapsed="0.489664"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:14.245124" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:14.243132" elapsed="0.001992">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:14.246122" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:13.131487" elapsed="1.114635">Variable '${developer}' not found.</status>
</test>
<test id="s1-t20" name="Package_Info_Add_non_game package info when developer is empty cannot be added" line="194">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.253104" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:14.253104" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.252107" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.252107" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:14.253104" elapsed="0.012196"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:14.265300" elapsed="0.024946"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.290246" elapsed="0.001033"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.291279" elapsed="0.031216"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:14.291279" elapsed="0.031216"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.322495" elapsed="0.001021"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.252107" elapsed="0.071409"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.323516" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.323516" elapsed="0.207640"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.250113" elapsed="0.281043"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.250113" elapsed="0.281043"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.250113" elapsed="0.281043"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.532177" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.531156" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.531156" elapsed="0.002006"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.533162" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.533162" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.533162" elapsed="0.000987"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.533162" elapsed="0.000987"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.534149" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.534149" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.534149" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.535146" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.535146" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.535146" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.535146" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.535146" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.535146" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.536143" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.536143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.536143" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.536143" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.537156" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.537156" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.536143" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.536143" elapsed="0.001013"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.537156" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.537156" elapsed="0.000982"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.537156" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.537156" elapsed="0.000982"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.538138" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.538138" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.538138" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.538138" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.539146" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.539146" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.538138" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.538138" elapsed="0.001008"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.539146" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:14.539146" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:14.539146" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.539146" elapsed="0.000986"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:14.249117" elapsed="0.291015"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.542126" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:14.542126" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.541134" elapsed="0.000992"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.541134" elapsed="0.000992"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:14.542126" elapsed="0.034875"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:14.577001" elapsed="0.034582"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.611583" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.613577" elapsed="0.023427"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:14.612580" elapsed="0.024424"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.638034" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.541134" elapsed="0.096900"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.638034" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.638034" elapsed="0.087412"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.541134" elapsed="0.184312"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.540132" elapsed="0.186345"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.730435" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:14.729436" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.729436" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.729436" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:14.730435" elapsed="0.016310"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:14.747757" elapsed="0.027935"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.775692" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.776691" elapsed="0.021167"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:14.775692" elapsed="0.023161"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.799866" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.728438" elapsed="0.071428"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.800849" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.799866" elapsed="0.069688"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.727441" elapsed="0.142113"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:14.727441" elapsed="0.143133"/>
</kw>
<kw name="Click Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.871571" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:14.871571" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.871571" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:14.871571" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:14.872568" elapsed="0.011403"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:14.883971" elapsed="0.028903"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.912874" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.914869" elapsed="0.026375"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:14.913871" elapsed="0.027373"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:14.941244" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.871571" elapsed="0.069673"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:14.942263" level="INFO">Clicking element '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:14.942263" elapsed="0.069352"/>
</kw>
<arg>${input_developer_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:14.871571" elapsed="0.140044"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.870574" elapsed="0.142063"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.015613" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:15.014607" elapsed="0.001006"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.014607" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.014607" elapsed="0.001006"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:15.016603" elapsed="0.009131"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.026772" elapsed="0.032926"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.059698" elapsed="0.001011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.060709" elapsed="0.028938"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:15.060709" elapsed="0.028938"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.090663" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.014607" elapsed="0.076056"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.090663" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.090663" elapsed="0.187657"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.013622" elapsed="0.264698"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:15.012637" elapsed="0.266684"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.281311" elapsed="0.029333"/>
</kw>
<arg>${ERROR_DEVELOPER_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:15.280328" elapsed="0.030316"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:14.248117" elapsed="1.063588"/>
</test>
<test id="s1-t21" name="Package_Info_Add_non_game package info when developer is more than maximum (256) cannot be added" line="202">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.317626" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:15.317626" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.317626" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.317626" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:15.317626" elapsed="0.010894"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.329518" elapsed="0.029093"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.358611" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.358611" elapsed="0.034650"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:15.358611" elapsed="0.034650"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.393261" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.317626" elapsed="0.076632"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.394258" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.394258" elapsed="0.183688"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.315632" elapsed="0.262314"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.315632" elapsed="0.262314"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.315632" elapsed="0.262314"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.578911" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.577946" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.577946" elapsed="0.000965"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.578911" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.578911" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.578911" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.578911" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.579940" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.579940" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.579940" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.579940" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.580938" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.580938" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.580938" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.580938" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.581936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.580938" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.580938" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.581936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.581936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.581936" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.581936" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.582901" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.581936" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.581936" elapsed="0.000965"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.582901" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.582901" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.582901" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.582901" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.583931" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.583931" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.582901" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.582901" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.583931" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.583931" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.583931" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.583931" elapsed="0.000963"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.584894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.584894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.584894" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.584894" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.584894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:15.585893" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:15.584894" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.584894" elapsed="0.000999"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:15.314634" elapsed="0.271259"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.587918" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:15.587918" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.586889" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.586889" elapsed="0.001029"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:15.587918" elapsed="0.036043"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.624951" elapsed="0.031262"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.656213" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.657242" elapsed="0.027768"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:15.656213" elapsed="0.028797"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.685010" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.586889" elapsed="0.098121"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.686007" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.685010" elapsed="0.094608"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.586889" elapsed="0.192729"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.586889" elapsed="0.192729"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.787596" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:15.787596" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.786599" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.786599" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:15.788594" elapsed="0.014961"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.804554" elapsed="0.025775"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.830329" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.832325" elapsed="0.022853"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:15.832325" elapsed="0.022853"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.855178" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.786599" elapsed="0.068579"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.856178" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.856178" elapsed="0.067924"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.781613" elapsed="0.142489"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:15.780617" elapsed="0.143485"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:15.926168" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:15.926168" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.926168" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:15.926168" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:15.927165" elapsed="0.016966"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:15.944131" elapsed="0.027977"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:15.972108" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:15.973051" elapsed="0.030381"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:15.972108" elapsed="0.031324"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.003432" elapsed="0.000994"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.926168" elapsed="0.078258"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.004426" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.004426" elapsed="0.434075"/>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:15.925143" elapsed="0.513358"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:15.925143" elapsed="0.513358"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.440520" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:16.440520" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.440520" elapsed="0.000972"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.440520" elapsed="0.000972"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:16.441492" elapsed="0.011968"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:16.453460" elapsed="0.026566"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.481024" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.482021" elapsed="0.027011"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:16.481024" elapsed="0.028008"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.509032" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.440520" elapsed="0.069509"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.510029" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.510029" elapsed="0.078788"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.439520" elapsed="0.149297"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.439520" elapsed="0.149297"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:16.589841" elapsed="0.034554"/>
</kw>
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:37:16.589841" elapsed="0.034554"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:15.313638" elapsed="1.311718"/>
</test>
<test id="s1-t22" name="Package_Info_Add_non_game package info when history comment is empty cannot be added" line="210">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.631683" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:16.630749" elapsed="0.000934"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.630749" elapsed="0.000934"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.630749" elapsed="0.000934"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:16.631683" elapsed="0.012072"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:16.643755" elapsed="0.029354"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.673109" elapsed="0.001002"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.674111" elapsed="0.035237"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:16.674111" elapsed="0.035237"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.709348" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.629709" elapsed="0.080657"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.710366" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.710366" elapsed="0.180812"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.627688" elapsed="0.263490"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.627688" elapsed="0.263490"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.627688" elapsed="0.263490"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.892177" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.891178" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.891178" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.892177" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.893174" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.892177" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.892177" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.893174" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.893174" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.893174" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.893174" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.894171" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.894171" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.893174" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.893174" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.894171" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.894171" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.894171" elapsed="0.001012"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.895183" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.895183" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.895183" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.895183" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.896166" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.895183" elapsed="0.000983"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.895183" elapsed="0.000983"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.896166" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.897162" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.896166" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.896166" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.898159" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.898159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.897162" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.897162" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.899160" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.899160" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.898159" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.898159" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.899160" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.900156" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.899160" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.899160" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.900156" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:16.900156" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:16.900156" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.900156" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:16.627688" elapsed="0.272468"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.903148" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:16.903148" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.903148" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:16.903148" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:16.904144" elapsed="0.032173"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:16.936317" elapsed="0.030492"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.967830" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.967830" elapsed="0.028274"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:16.967830" elapsed="0.028274"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:16.996104" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.902150" elapsed="0.094950"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:16.998098" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:16.997100" elapsed="0.093318"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:16.902150" elapsed="0.188268"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.901152" elapsed="0.189266"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.097403" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:17.097403" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.096401" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.096401" elapsed="0.001002"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:17.097403" elapsed="0.013670"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.111073" elapsed="0.050822"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.161895" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.161895" elapsed="0.023231"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:17.161895" elapsed="0.023231"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.185126" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.095404" elapsed="0.089722"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.186152" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.185126" elapsed="0.069942"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.092412" elapsed="0.162656"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:17.091418" elapsed="0.163650"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.258060" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:17.257062" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.257062" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.257062" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:17.258060" elapsed="0.017621"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.275681" elapsed="0.024804"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.301482" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.301482" elapsed="0.029140"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:17.301482" elapsed="0.029140"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.331620" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.257062" elapsed="0.075554"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.332616" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.332616" elapsed="0.077504"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.256066" elapsed="0.154054"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.256066" elapsed="0.154054"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.416106" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:17.416106" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.415111" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.415111" elapsed="0.000995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:17.416106" elapsed="0.015956"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.432062" elapsed="0.034159"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.466221" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.467218" elapsed="0.023460"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:17.467218" elapsed="0.023460"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.490678" elapsed="0.000999"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.415111" elapsed="0.076566"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.491677" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.491677" elapsed="0.088859"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.411120" elapsed="0.170411"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.411120" elapsed="0.170411"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.583522" elapsed="0.031923"/>
</kw>
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:17.582526" elapsed="0.032919"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:16.626699" elapsed="0.989737"/>
</test>
<test id="s1-t23" name="Package_Info_Add_non_game package info when history comment is more than maximum (1001) cannot be added" line="219">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.623438" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:17.623438" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.623438" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.623438" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:17.623438" elapsed="0.012230"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.635668" elapsed="0.025673"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.661341" elapsed="0.001033"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.662374" elapsed="0.035970"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:17.662374" elapsed="0.035970"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.698344" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.622438" elapsed="0.076904"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.699342" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.699342" elapsed="0.185648"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.620426" elapsed="0.264564"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.619422" elapsed="0.265568"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.619422" elapsed="0.265568"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.884990" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.884990" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.884990" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.884990" elapsed="0.000969"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.884990" elapsed="0.000969"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.885959" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.886955" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.886955" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.886955" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.886955" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.887953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.887953" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.887953" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.887953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.887953" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.887953" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.888949" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.888949" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.888949" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.888949" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.890980" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.890980" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.889948" elapsed="0.001032"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.889948" elapsed="0.001032"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.891958" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.891958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.891958" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.890980" elapsed="0.000978"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.891958" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.891958" elapsed="0.001011"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.891958" elapsed="0.001011"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:17.893965" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:17.892969" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.892969" elapsed="0.000996"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:17.619422" elapsed="0.274543"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.896929" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:17.895931" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.895931" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:17.895931" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:17.896929" elapsed="0.043881"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:17.940810" elapsed="0.029235"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.970045" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.971042" elapsed="0.023524"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:17.971042" elapsed="0.023524"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:17.994566" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.895931" elapsed="0.098635"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:17.995566" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:17.995566" elapsed="0.092171"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:17.894934" elapsed="0.192803"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.894934" elapsed="0.192803"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:18.092740" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:18.092740" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:18.092740" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:18.092740" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:18.093722" elapsed="0.013856"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:18.107578" elapsed="0.027280"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:18.134858" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:18.135859" elapsed="0.020798"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:18.135859" elapsed="0.020798"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:18.156657" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:18.092740" elapsed="0.063917"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:18.157689" level="INFO">Clicking element '//input[@id='Non Game']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:18.157689" elapsed="0.076584"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:18.089733" elapsed="0.144540"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:37:18.088734" elapsed="0.146560"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:18.237291" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:18.237291" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:18.236312" elapsed="0.000979"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:18.236312" elapsed="0.000979"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:18.237291" elapsed="0.012234"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:18.249525" elapsed="0.026173"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:18.275698" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:18.276698" elapsed="0.027933"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:18.275698" elapsed="0.028933"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:18.305622" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:18.236312" elapsed="0.069310"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:18.306618" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:18.305622" elapsed="1.305170"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:18.236312" elapsed="1.374480"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:18.235294" elapsed="1.375498"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:19.613798" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:19.612816" elapsed="0.000982"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:19.612816" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:19.612816" elapsed="0.000982"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:19.613798" elapsed="0.013968"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:19.627766" elapsed="0.026845"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:19.654611" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:19.655632" elapsed="0.022975"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:19.654611" elapsed="0.023996"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:19.678607" elapsed="0.000994"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:19.612816" elapsed="0.066785"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:19.680575" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:19.680575" elapsed="0.068664"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:19.611788" elapsed="0.137451"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:19.611788" elapsed="0.137451"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:19.751267" elapsed="0.030220"/>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="PASS" start="2024-06-05T16:37:19.750262" elapsed="0.031225"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:17.618425" elapsed="2.163062"/>
</test>
<test id="s1-t24" name="Package_Info_Add_Unknown package info when all fields are populated can be added" line="228">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:19.788162" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:19.787204" elapsed="0.000958"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:19.787204" elapsed="0.000958"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:19.787204" elapsed="0.000958"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:19.788162" elapsed="0.012008"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:19.800170" elapsed="0.025827"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:19.827018" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:19.827018" elapsed="0.030159"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:19.827018" elapsed="0.030159"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:19.858234" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:19.787204" elapsed="0.071030"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:19.859166" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:19.858234" elapsed="0.175127"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:19.785148" elapsed="0.248213"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:19.785148" elapsed="0.248213"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:19.785148" elapsed="0.249213"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.034361" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.034361" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.034361" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.034361" elapsed="0.000994"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.035355" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.034361" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.034361" elapsed="0.000994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.035355" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.035355" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.035355" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.035355" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.036352" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.036352" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.035355" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.035355" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.036352" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.036352" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.036352" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.037381" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.036352" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.036352" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.037381" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.037381" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.037381" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.038380" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000996"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.039376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.038380" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.038380" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.039376" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.039376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.039376" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.039376" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.040340" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:19.784192" elapsed="0.257180"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.043371" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.043371" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.043371" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.043371" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.043371" elapsed="0.041863"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:20.085234" elapsed="0.030905"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.117135" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.118132" elapsed="0.028923"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:20.118132" elapsed="0.030052"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.148184" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.042367" elapsed="0.105817"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.149095" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.149095" elapsed="0.087440"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.042367" elapsed="0.194168"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.041372" elapsed="0.195163"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.241517" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.241517" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.241517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.240522" elapsed="0.000995"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.241517" elapsed="0.016640"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:20.258157" elapsed="0.029937"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.288094" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.290071" elapsed="0.021118"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:20.289093" elapsed="0.022096"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.312224" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.240522" elapsed="0.071702"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.312224" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.312224" elapsed="0.070093"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.238527" elapsed="0.143790"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:20.237530" elapsed="0.145817"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:20.387302" level="FAIL">Variable '${package_unknown}' not found.</msg>
<arg>${package_unknown}</arg>
<status status="FAIL" start="2024-06-05T16:37:20.384312" elapsed="0.002990">Variable '${package_unknown}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.387302" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.388313" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.388313" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.389298" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:20.389298" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:19.783149" elapsed="0.606149">Variable '${package_unknown}' not found.</status>
</test>
<test id="s1-t25" name="Package_Info_Add_Unknown package info when only required fields are populated can be added" line="240">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.395700" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.395700" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.394703" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.394703" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.395700" elapsed="0.012635"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:20.408335" elapsed="0.030023"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.438358" elapsed="0.000967"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.439325" elapsed="0.027100"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:20.439325" elapsed="0.027100"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.466425" elapsed="0.000995"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.394703" elapsed="0.072717"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.467420" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.467420" elapsed="0.176675"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.392688" elapsed="0.251407"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.392688" elapsed="0.251407"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.392688" elapsed="0.251407"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.644095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.644095" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.644095" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.645092" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.645092" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.645092" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.645092" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.646088" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.646088" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.645092" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.645092" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.647086" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.647086" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.646088" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.646088" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.648096" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.647086" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.647086" elapsed="0.001010"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.648096" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.648096" elapsed="0.000923"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.648096" elapsed="0.000964"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.649060" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.649060" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.649060" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.649060" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.650020" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.650020" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.649060" elapsed="0.000960"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.649060" elapsed="0.000960"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.651017" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.651017" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.650020" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.650020" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.651017" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.652029" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.651017" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.651017" elapsed="0.001012"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.652029" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.652029" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.652029" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.652029" elapsed="0.000988"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.653017" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:20.653017" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:20.653017" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.653017" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:20.392688" elapsed="0.260329"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.656033" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.656033" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.655007" elapsed="0.001026"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.655007" elapsed="0.001026"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.656033" elapsed="0.044852"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:20.701912" elapsed="0.025642"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.728584" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.728584" elapsed="0.023617"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:20.728584" elapsed="0.023617"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.752201" elapsed="0.000995"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.655007" elapsed="0.098189"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.753196" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.753196" elapsed="0.086422"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.655007" elapsed="0.184611"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.654010" elapsed="0.185608"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.843623" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.843623" elapsed="0.001017"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.843623" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.843623" elapsed="0.001017"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.844640" elapsed="0.015275"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:20.859915" elapsed="0.027770"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.887685" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.887685" elapsed="0.023126"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:20.887685" elapsed="0.023126"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:20.911798" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.842629" elapsed="0.069169"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.912797" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:20.911798" elapsed="0.070228"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.840613" elapsed="0.141413"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:20.840613" elapsed="0.141413"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:20.985022" level="FAIL">Variable '${package_unknown_required}' not found.</msg>
<arg>${package_unknown_required}</arg>
<status status="FAIL" start="2024-06-05T16:37:20.983003" elapsed="0.002019">Variable '${package_unknown_required}' not found.</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.985796" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:20.986295" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:20.986722" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:20.390681" elapsed="0.596041">Variable '${package_unknown_required}' not found.</status>
</test>
<test id="s1-t26" name="Package_Info_Add_unknown package info when package name is empty cannot be added" line="249">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:20.992970" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:20.992970" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.991972" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.991972" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:20.992970" elapsed="0.014586"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:21.007556" elapsed="0.030044"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.038596" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.039593" elapsed="0.028931"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:21.038596" elapsed="0.029928"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.069462" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.991972" elapsed="0.077490"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.070459" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.069462" elapsed="0.174317"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:20.989979" elapsed="0.253800"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:20.989979" elapsed="0.253800"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:20.989979" elapsed="0.253800"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.243779" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.243779" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.243779" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.243779" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.243779" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.244777" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.245773" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.245773" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.244777" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.244777" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.245773" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.245773" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.245773" elapsed="0.001014"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.246787" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.246787" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.246787" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.246787" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.247768" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.246787" elapsed="0.000981"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.246787" elapsed="0.000981"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.247768" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.247768" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.247768" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.247768" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.248765" elapsed="0.001002"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.249767" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.248765" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.248765" elapsed="0.001002"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.249767" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.249767" elapsed="0.001002"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.249767" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.249767" elapsed="0.001002"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.250769" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.250769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.250769" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.250769" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.251758" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:21.251758" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:21.250769" elapsed="0.000989"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.250769" elapsed="0.000989"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:20.989979" elapsed="0.261779"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.253753" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:21.253753" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.253753" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.253753" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:21.254750" elapsed="0.034325"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:21.289075" elapsed="0.028470"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.317545" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.318542" elapsed="0.021859"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:21.317545" elapsed="0.022856"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.340401" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.252755" elapsed="0.087646"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.341423" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.341423" elapsed="0.092397"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.252755" elapsed="0.181065"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.252755" elapsed="0.181065"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.440790" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:21.440790" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.440790" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.440790" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:21.441786" elapsed="0.016394"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:21.459180" elapsed="0.025465"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.484645" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.485677" elapsed="0.020763"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:21.485677" elapsed="0.020763"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.506440" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.439790" elapsed="0.066650"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.507437" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.507437" elapsed="0.063821"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.435820" elapsed="0.135438"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:21.434804" elapsed="0.136454"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.573331" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:21.573331" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.573331" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.573331" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:21.574327" elapsed="0.013225"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:21.587552" elapsed="0.028576"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.616128" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.617161" elapsed="0.025283"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:21.616128" elapsed="0.027335"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.643463" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.573331" elapsed="0.070132"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.644459" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.643463" elapsed="0.072075"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.572329" elapsed="0.143209"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.572329" elapsed="0.143209"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:21.719531" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:21.716542" elapsed="0.002989">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:21.720527" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:20.988981" elapsed="0.732541">Variable '${developer}' not found.</status>
</test>
<test id="s1-t27" name="Package_Info_Add_unknown package info when package name has invalid value cannot be added" line="257">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.729501" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:21.729501" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.728503" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.728503" elapsed="0.002017"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:21.730520" elapsed="0.014938"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:21.745458" elapsed="0.032854"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.779336" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.781305" elapsed="0.034291"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:21.780307" elapsed="0.035289"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:21.816593" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.728503" elapsed="0.088090"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:21.817591" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:21.817591" elapsed="0.187664"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:21.726509" elapsed="0.278746"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:21.725512" elapsed="0.279743"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:21.725512" elapsed="0.279743"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.006253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.006253" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.006253" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.006253" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.007250" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.006253" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.006253" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.007250" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.007250" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.007250" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.007250" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.008248" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.008248" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.008248" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.008248" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.009245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.008248" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.008248" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.009245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.009245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.009245" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.010243" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.010243" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.009245" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.009245" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.010243" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.011240" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.010243" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.010243" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.011240" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.011240" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.011240" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.011240" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.012237" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.012237" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.011240" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.011240" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.012237" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.013234" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.012237" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.012237" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.013234" elapsed="0.000999"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.014233" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.013234" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.013234" elapsed="0.000999"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:21.725512" elapsed="0.288721"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.017252" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:22.016265" elapsed="0.000987"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.016265" elapsed="0.000987"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.016265" elapsed="0.000987"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:22.017252" elapsed="0.059824"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:22.077076" elapsed="0.026840"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.103916" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.104945" elapsed="0.022903"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:22.104945" elapsed="0.022903"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.128877" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.016265" elapsed="0.112612"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.129843" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.128877" elapsed="0.130879"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.016265" elapsed="0.244488"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.015268" elapsed="0.245485"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.266738" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:22.266738" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.265760" elapsed="0.000978"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.265760" elapsed="0.000978"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:22.266738" elapsed="0.015956"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:22.282694" elapsed="0.025932"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.309623" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.310621" elapsed="0.025566"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:22.309623" elapsed="0.026564"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.337169" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.265760" elapsed="0.071409"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.338166" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.337169" elapsed="0.067572"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.261752" elapsed="0.142989"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:22.261752" elapsed="0.142989"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.406497" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:22.406497" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.406497" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.406497" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:22.406497" elapsed="0.014212"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:22.420709" elapsed="0.025795"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.447490" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.448514" elapsed="0.026762"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:22.447490" elapsed="0.027786"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.475276" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.406497" elapsed="0.069777"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.476274" level="INFO">Typing text 'com.$%W^##$#$%' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.476274" elapsed="0.132818"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.405473" elapsed="0.203619"/>
</kw>
<arg>${INVALID_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:37:22.405473" elapsed="0.203619"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:22.612792" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:22.609767" elapsed="0.003025">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_INVALID_NAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:22.613766" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:21.723536" elapsed="0.892228">Variable '${developer}' not found.</status>
</test>
<test id="s1-t28" name="Package_Info_Add_unknown package info when package name is more than maximum (256) cannot be added" line="265">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.621738" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:22.621738" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.621738" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.621738" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:22.621738" elapsed="0.014630"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:22.636368" elapsed="0.037111"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.673479" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.674495" elapsed="0.032209"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:22.674495" elapsed="0.032209"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.707735" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.621738" elapsed="0.085997"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.707735" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.707735" elapsed="0.190787"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.619744" elapsed="0.278778"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.619744" elapsed="0.278778"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.619744" elapsed="0.278778"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.899552" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.898522" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.898522" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.899552" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.899552" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.899552" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.899552" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.900552" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.900552" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.899552" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.899552" elapsed="0.001000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.900552" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.900552" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.900552" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.900552" elapsed="0.000994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.901546" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.903509" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.903509" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.901546" elapsed="0.002992"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.901546" elapsed="0.002992"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.904538" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.904538" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.904538" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.904538" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.904538" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.904538" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.904538" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.906532" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.905537" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.905537" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.906532" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:22.906532" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:22.906532" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.906532" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:22.619744" elapsed="0.286788"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.909495" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:22.909495" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.909495" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:22.909495" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:22.910540" elapsed="0.029018"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:22.940590" elapsed="0.023374"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.964986" elapsed="0.000972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.965958" elapsed="0.021606"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:22.965958" elapsed="0.021606"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:22.987564" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.908496" elapsed="0.080064"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:22.988560" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:22.988560" elapsed="0.086384"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:22.908496" elapsed="0.166448"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:22.907530" elapsed="0.167414"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.079930" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:23.078953" elapsed="0.000977"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.078953" elapsed="0.000977"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.078953" elapsed="0.000977"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:23.079930" elapsed="0.011397"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:23.092347" elapsed="0.027168"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.120512" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.120512" elapsed="0.022644"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:23.120512" elapsed="0.022644"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.143156" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.077965" elapsed="0.065191"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.144189" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.144189" elapsed="0.068994"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.075941" elapsed="0.137242"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:23.075941" elapsed="0.137242"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.217172" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:23.216175" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.216175" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.216175" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:23.217172" elapsed="0.011821"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:23.229985" elapsed="0.028642"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.258627" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.259648" elapsed="0.033801"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:23.258627" elapsed="0.034822"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.294467" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.216175" elapsed="0.078292"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.294467" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.294467" elapsed="0.425543"/>
</kw>
<arg>${input_package_name_add}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.215176" elapsed="0.504834"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:23.214192" elapsed="0.505818"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:23.724033" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:23.721007" elapsed="0.003026">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_PACKAGE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:23.724033" elapsed="0.000996"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:22.618748" elapsed="1.106281">Variable '${developer}' not found.</status>
</test>
<test id="s1-t29" name="Package_Info_Add_unknown package info when using existing package name cannot be added" line="273">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.732975" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:23.732975" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.731978" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.731978" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:23.733972" elapsed="0.015958"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:23.750927" elapsed="0.025537"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.776464" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.777459" elapsed="0.028832"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:23.776464" elapsed="0.029827"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:23.807288" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.731004" elapsed="0.076284"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.808285" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:23.808285" elapsed="0.174919"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.728011" elapsed="0.255193"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.728011" elapsed="0.255193"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.728011" elapsed="0.255193"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.984234" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.983204" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.983204" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.984234" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.984234" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.984234" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.984234" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.985232" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.985232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.984234" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.984234" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.985232" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.985232" elapsed="0.000967"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.985232" elapsed="0.000967"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.986199" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.986199" elapsed="0.001020"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.986199" elapsed="0.001020"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.987219" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.988222" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.988222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.988222" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.987219" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.988222" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.989208" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.988222" elapsed="0.000986"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.988222" elapsed="0.000986"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.989208" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.989208" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.989208" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.989208" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.990217" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:23.990217" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:23.990217" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.989208" elapsed="0.001009"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:23.727005" elapsed="0.263212"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:23.992208" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:23.992208" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.992208" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:23.992208" elapsed="0.000969"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:23.993177" elapsed="0.034399"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.027576" elapsed="0.034017"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.061593" elapsed="0.001028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.062621" elapsed="0.029585"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.062621" elapsed="0.029585"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.092206" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.991182" elapsed="0.102021"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.093203" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.093203" elapsed="0.123892"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:23.991182" elapsed="0.225913"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:23.991182" elapsed="0.225913"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.221084" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:24.221084" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.220125" elapsed="0.000959"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.220125" elapsed="0.000959"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:24.221084" elapsed="0.016962"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.239064" elapsed="0.025046"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.264110" elapsed="0.000981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.266128" elapsed="0.021959"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.265091" elapsed="0.022996"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.288087" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.220125" elapsed="0.068959"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.289084" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.289084" elapsed="0.068747"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.218094" elapsed="0.139737"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:24.218094" elapsed="0.139737"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:24.360849" level="FAIL">Variable '${package_unknown_required}' not found.</msg>
<arg>${package_unknown_required}</arg>
<status status="FAIL" start="2024-06-05T16:37:24.358842" elapsed="0.002007">Variable '${package_unknown_required}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:24.361695" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:24.361695" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:24.361695" elapsed="0.001001"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:24.362696" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:24.363693" elapsed="0.000000"/>
</kw>
<kw name="Verify Toast Error message" owner="Package_Actions">
<arg>${ERROR_PACKAGE_ALREADY_EXISTS}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:24.365692" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:23.725995" elapsed="0.639697">Variable '${package_unknown_required}' not found.</status>
</test>
<test id="s1-t30" name="Package_Info_Add_unknown package info when title is more than maximum (256) cannot be added" line="285">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.372669" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:24.372669" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.372669" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.372669" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:24.372669" elapsed="0.013892"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.386561" elapsed="0.026401"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.412962" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.414968" elapsed="0.027867"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.413963" elapsed="0.028872"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.443824" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.371672" elapsed="0.072152"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.443824" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.443824" elapsed="0.169011"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.369678" elapsed="0.243157"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.369678" elapsed="0.244169"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.369678" elapsed="0.244169"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.613847" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.613847" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.613847" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.614818" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.614818" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.613847" elapsed="0.000971"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.613847" elapsed="0.000971"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.614818" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.615840" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.614818" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.614818" elapsed="0.001022"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.615840" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.615840" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.615840" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.615840" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.615840" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.615840" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.616837" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.616837" elapsed="0.001013"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.617850" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.617850" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.617850" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.617850" elapsed="0.000990"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.618840" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.618840" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.618840" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.618840" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.619824" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.619824" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.618840" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.618840" elapsed="0.000984"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.619824" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.620825" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.619824" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.619824" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.620825" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:24.620825" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:24.620825" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.620825" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:24.368679" elapsed="0.252146"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.623806" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:24.622820" elapsed="0.000986"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.622820" elapsed="0.000986"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.622820" elapsed="0.000986"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:24.623806" elapsed="0.032162"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.655968" elapsed="0.027698"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.683666" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.684663" elapsed="0.020668"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.683666" elapsed="0.022692"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.706358" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.622820" elapsed="0.083538"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.706358" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.706358" elapsed="0.086732"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.621843" elapsed="0.171247"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.621843" elapsed="0.172244"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.800071" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:24.800071" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.800071" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.800071" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:24.801068" elapsed="0.011160"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.813227" elapsed="0.028505"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.842720" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.843713" elapsed="0.023421"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.842720" elapsed="0.024414"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.867134" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.799077" elapsed="0.069054"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.868131" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.868131" elapsed="0.067523"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.795084" elapsed="0.140570"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:24.794087" elapsed="0.141567"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:24.937673" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:24.937673" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:24.937673" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:24.937673" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:24.937673" elapsed="0.011374"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:24.949047" elapsed="0.026937"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:24.975984" elapsed="0.001022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:24.977006" elapsed="0.024580"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:24.977006" elapsed="0.024580"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.002581" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.937673" elapsed="0.064908"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.003580" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.002581" elapsed="0.437309"/>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:24.936651" elapsed="0.504239"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:24.936651" elapsed="0.504239"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:25.443901" level="FAIL">Variable '${developer}' not found.</msg>
<arg>${developer}</arg>
<status status="FAIL" start="2024-06-05T16:37:25.440890" elapsed="0.003011">Variable '${developer}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:25.444898" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:24.367686" elapsed="1.077212">Variable '${developer}' not found.</status>
</test>
<test id="s1-t31" name="Package_Info_Add_unknown package info when developer is more than maximum (256) cannot be added" line="293">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.450862" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:25.450862" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.450862" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.450862" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:25.450862" elapsed="0.014964"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:25.465826" elapsed="0.024927"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.490753" elapsed="0.001034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.491787" elapsed="0.026170"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:25.491787" elapsed="0.026170"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.517957" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.449878" elapsed="0.069077"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.518955" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.518955" elapsed="0.178961"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.448885" elapsed="0.249031"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.447891" elapsed="0.250025"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.447891" elapsed="0.250025"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.698895" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.697916" elapsed="0.000979"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.697916" elapsed="0.000979"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.698895" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.698895" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.698895" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.698895" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.699908" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.699908" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.700905" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.701871" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.701871" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.701871" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.701871" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.701871" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.702870" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.701871" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.701871" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.702870" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.702870" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.702870" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.702870" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.703899" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.703899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.702870" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.702870" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.703899" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.703899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.703899" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.703899" elapsed="0.000966"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.704865" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:25.704865" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:25.704865" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.704865" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:25.447891" elapsed="0.256974"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.706890" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:25.706890" elapsed="0.001002"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.706890" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.706890" elapsed="0.001002"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:25.707892" elapsed="0.032876"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:25.741799" elapsed="0.030823"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.772622" elapsed="0.001024"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.773646" elapsed="0.020618"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:25.773646" elapsed="0.020618"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.794264" elapsed="0.001013"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.706890" elapsed="0.088387"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.795277" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.795277" elapsed="0.098244"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.705862" elapsed="0.187659"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.705862" elapsed="0.187659"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.898501" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:25.898501" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.897524" elapsed="0.000977"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:25.897524" elapsed="0.001992"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:25.899516" elapsed="0.011763"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:25.912304" elapsed="0.029897"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.942201" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.943216" elapsed="0.022586"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:25.943216" elapsed="0.022586"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:25.965802" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.897524" elapsed="0.069311"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:25.966835" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:25.966835" elapsed="0.062128"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:25.894512" elapsed="0.134451"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:25.894512" elapsed="0.134451"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.031957" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:26.031957" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.031957" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.031957" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:26.031957" elapsed="0.012077"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:26.044034" elapsed="0.029266"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.073300" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.074300" elapsed="0.025157"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:26.073300" elapsed="0.026157"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.100496" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.030960" elapsed="0.069536"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.101486" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.100496" elapsed="0.428841"/>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.029960" elapsed="0.499377"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:26.029960" elapsed="0.500373"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.532345" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:26.532345" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.532345" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.532345" elapsed="0.000982"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:26.533327" elapsed="0.009971"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:26.543298" elapsed="0.030388"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.573686" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.575680" elapsed="0.030917"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:26.574683" elapsed="0.031914"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.606597" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.532345" elapsed="0.075249"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.607594" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.607594" elapsed="0.063830"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.531332" elapsed="0.140092"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.531332" elapsed="0.140092"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:26.672421" elapsed="0.026523"/>
</kw>
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:37:26.672421" elapsed="0.026523"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:25.445896" elapsed="1.254045"/>
</test>
<test id="s1-t32" name="Package_Info_Add_unknown package info when history comment is empty cannot be added" line="301">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.704951" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:26.704951" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.704951" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.704951" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:26.704951" elapsed="0.012342"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:26.717293" elapsed="0.026422"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.743715" elapsed="0.001025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.744740" elapsed="0.030887"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:26.744740" elapsed="0.031868"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:26.776608" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.703956" elapsed="0.072652"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.777605" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:26.777605" elapsed="0.202464"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.702940" elapsed="0.277129"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.702940" elapsed="0.278124"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.702940" elapsed="0.278124"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.982060" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.981064" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.981064" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.982060" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.983057" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.982060" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.982060" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.983057" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.983057" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.983057" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.983057" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.984054" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.984054" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.984054" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.984054" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.985051" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.984054" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.984054" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.985051" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.985051" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.985051" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.986081" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.986081" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.985051" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.985051" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.986081" elapsed="0.000980"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.987061" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.986081" elapsed="0.000980"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.986081" elapsed="0.000980"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.987061" elapsed="0.000982"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.988043" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.987061" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.987061" elapsed="0.000982"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.988043" elapsed="0.000998"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.989041" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.988043" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.988043" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.990038" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.990038" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.989041" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.989041" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.990038" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:26.991035" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:26.990038" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.990038" elapsed="0.000997"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:26.701971" elapsed="0.289064"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:26.994028" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:26.994028" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.994028" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:26.994028" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:26.995047" elapsed="0.041903"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.036950" elapsed="0.033940"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.070890" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.071857" elapsed="0.022939"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:27.071857" elapsed="0.022939"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.094796" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.994028" elapsed="0.101765"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.096762" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.095793" elapsed="0.135616"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:26.993031" elapsed="0.239376"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.992033" elapsed="0.240374"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.236412" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:27.236412" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.236412" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:27.236412" elapsed="0.000981"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:27.237393" elapsed="0.013987"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.251380" elapsed="0.030893"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.282273" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.283272" elapsed="0.024969"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:27.283272" elapsed="0.024969"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.308241" elapsed="0.000979"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.235397" elapsed="0.073823"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.309220" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.309220" elapsed="0.066016"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.233403" elapsed="0.141833"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:27.233403" elapsed="0.141833"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.377226" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:27.377226" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.377226" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:27.377226" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:27.377226" elapsed="0.014197"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.391423" elapsed="0.029661"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.421084" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.422084" elapsed="0.027562"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:27.421084" elapsed="0.029558"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.450642" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.377226" elapsed="0.073416"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.450642" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.450642" elapsed="0.073471"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.376192" elapsed="0.147921"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.376192" elapsed="0.147921"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.526202" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:27.526202" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.526202" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:27.526202" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:27.527200" elapsed="0.015198"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.542398" elapsed="0.034300"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.576698" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.577699" elapsed="0.031577"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:27.577699" elapsed="0.031577"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.609276" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.525251" elapsed="0.085006"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.610257" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.610257" elapsed="0.084445"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.525251" elapsed="0.169451"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.525251" elapsed="0.169451"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.696698" elapsed="0.038822"/>
</kw>
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:27.695701" elapsed="0.039819"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:26.700938" elapsed="1.035580"/>
</test>
<test id="s1-t33" name="Package_Info_Add_unknown package info when history comment is more than maximum (1001) cannot be added" line="310">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.741527" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:27.741527" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.741527" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:27.741527" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:27.742524" elapsed="0.012981"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:27.755505" elapsed="0.026241"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.782742" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.782742" elapsed="0.033936"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:27.782742" elapsed="0.033936"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:27.817694" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.741527" elapsed="0.076167"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:27.818674" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:27.818674" elapsed="0.184278"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:27.739533" elapsed="0.263419"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.739533" elapsed="0.263419"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:27.739533" elapsed="0.263419"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.003932" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.002952" elapsed="0.000980"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.002952" elapsed="0.000980"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.003932" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.004923" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.003932" elapsed="0.000991"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.003932" elapsed="0.000991"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.004923" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.004923" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.004923" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.004923" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.004923" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.004923" elapsed="0.001006"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.005929" elapsed="0.000961"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.005929" elapsed="0.000961"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.006890" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.006890" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.006890" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.006890" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.007915" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.007915" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.006890" elapsed="0.001025"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.006890" elapsed="0.001025"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.007915" elapsed="0.001970"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.009885" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.007915" elapsed="0.001970"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.007915" elapsed="0.001970"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.010911" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.010911" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.009885" elapsed="0.001026"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.009885" elapsed="0.001026"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.010911" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.011914" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.010911" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.010911" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.011914" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:28.012876" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:28.011914" elapsed="0.000962"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.011914" elapsed="0.000962"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:27.739533" elapsed="0.273343"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.016897" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:28.015887" elapsed="0.001010"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:28.015887" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.015887" elapsed="0.001010"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:28.016897" elapsed="0.033879"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:28.050776" elapsed="0.030800"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.081576" elapsed="0.000996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.082572" elapsed="0.030378"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:28.082572" elapsed="0.031377"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.113949" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.014877" elapsed="0.099072"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.114947" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.114947" elapsed="0.127399"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.013874" elapsed="0.228472"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:28.013874" elapsed="0.228472"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.250333" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:28.249325" elapsed="0.001008"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:28.249325" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.249325" elapsed="0.001008"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:28.250333" elapsed="0.015946"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:28.267275" elapsed="0.028887"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.296162" elapsed="0.000994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.298155" elapsed="0.022643"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:28.297156" elapsed="0.023642"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.321795" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.248327" elapsed="0.073468"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.322793" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.321795" elapsed="0.069181"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.244340" elapsed="0.146636"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:28.243340" elapsed="0.147636"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.392972" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:28.392972" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:28.392972" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:28.392972" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:28.392972" elapsed="0.014961"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:28.407933" elapsed="0.028754"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.436687" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.437685" elapsed="0.029255"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:28.437685" elapsed="0.029255"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:28.467938" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.391976" elapsed="0.075962"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:28.468936" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:28.467938" elapsed="1.306721"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:28.391976" elapsed="1.382683"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:28.391976" elapsed="1.382683"/>
</kw>
<kw name="Click Package Name in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:29.776653" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:29.776653" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:29.776653" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:29.776653" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:29.776653" elapsed="0.012944"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:29.790587" elapsed="0.028494"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:29.819081" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:29.820113" elapsed="0.025310"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:29.820113" elapsed="0.025310"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:29.846419" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:29.775625" elapsed="0.070794"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:29.847421" level="INFO">Clicking element '//input[@data-testid = 'input-name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:29.847421" elapsed="0.068887"/>
</kw>
<arg>${input_package_name_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:29.775625" elapsed="0.141701"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:29.775625" elapsed="0.141701"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:29.918316" elapsed="0.027894"/>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="PASS" start="2024-06-05T16:37:29.918316" elapsed="0.027894"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:27.738511" elapsed="2.208701"/>
</test>
<test id="s1-t34" name="[Package Info - Add] add package info page will be redirected to package list page when cancel button is clicked" line="319">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:29.954189" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:29.954189" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:29.953200" elapsed="0.000989"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:29.953200" elapsed="0.000989"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:29.954189" elapsed="0.014963"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:29.969152" elapsed="0.025993"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:29.995600" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:29.996573" elapsed="0.033078"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:29.995600" elapsed="0.034051"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.030649" elapsed="0.001010"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:29.953200" elapsed="0.078459"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.032641" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.031659" elapsed="0.190376"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:29.951198" elapsed="0.270837"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:29.951198" elapsed="0.270837"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:29.951198" elapsed="0.270837"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.223064" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.222035" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.222035" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.223064" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.223064" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.223064" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.223064" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.224061" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.224061" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.223064" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.223064" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.225049" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.225049" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.225049" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.225049" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.226025" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.225049" elapsed="0.000976"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.225049" elapsed="0.000976"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.226025" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.226025" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.226025" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.226025" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.227022" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.226025" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.226025" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.227022" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.227022" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.227022" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.227022" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.227022" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.228020" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.228020" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.229018" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.230013" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.229018" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.229018" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.230013" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.230013" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.230013" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.230013" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:29.951198" elapsed="0.278815"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.233035" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:30.233035" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.232008" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.232008" elapsed="0.001027"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:30.233035" elapsed="0.038089"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:30.271124" elapsed="0.032093"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.303217" elapsed="0.001012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.304229" elapsed="0.027913"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:30.304229" elapsed="0.027913"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.333137" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.232008" elapsed="0.101129"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.333137" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.333137" elapsed="0.125250"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.232008" elapsed="0.226379"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.231010" elapsed="0.227377"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.464357" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:30.464357" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.463367" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.463367" elapsed="0.001997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:30.465364" elapsed="0.016946"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:30.483340" elapsed="0.024784"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.508124" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.509162" elapsed="0.024893"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:30.509162" elapsed="0.024893"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.534055" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.462363" elapsed="0.071692"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.535078" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.534055" elapsed="0.069505"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.460367" elapsed="0.143193"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:37:30.459374" elapsed="0.144186"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:30.606139" level="FAIL">Variable '${package_game}' not found.</msg>
<arg>${package_game}</arg>
<status status="FAIL" start="2024-06-05T16:37:30.604118" elapsed="0.002021">Variable '${package_game}' not found.</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:30.607112" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:30.607112" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:30.608109" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:30.608641" elapsed="0.000000"/>
</kw>
<kw name="Click Cancel Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:30.608641" elapsed="0.000000"/>
</kw>
<kw name="Verify Package Page Component" owner="Package_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:30.610275" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:29.949205" elapsed="0.661584">Variable '${package_game}' not found.</status>
</test>
<test id="s1-t35" name="[Package Info - Edit] game package info when all fields are populated can be Edited" line="333">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.617181" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:30.617181" elapsed="0.001012"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.617181" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.617181" elapsed="0.001012"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:30.618193" elapsed="0.013199"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:30.632425" elapsed="0.027137"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.659562" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.660559" elapsed="0.027925"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:30.659562" elapsed="0.029925"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.689487" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.617181" elapsed="0.073297"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.690478" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.690478" elapsed="0.179727"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.615180" elapsed="0.256024"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.614186" elapsed="0.257018"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.614186" elapsed="0.257018"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.871204" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.871204" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.871204" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.872232" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.872232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.871204" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.871204" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.872232" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.872232" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.872232" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.872232" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.873229" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.873229" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.873229" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.875224" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.874226" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.874226" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.876222" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.876222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.875224" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.875224" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.876222" elapsed="0.001000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.877222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.876222" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.876222" elapsed="0.001000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.877222" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.877222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.877222" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.877222" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.878184" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:30.878184" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:30.877222" elapsed="0.000962"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.877222" elapsed="0.000962"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:30.614186" elapsed="0.263998"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.880179" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:30.880179" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:30.880179" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:30.880179" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:30.881176" elapsed="0.038896"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:30.921104" elapsed="0.023268"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.945397" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.946373" elapsed="0.024017"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:30.945397" elapsed="0.024993"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:30.970390" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.880179" elapsed="0.091246"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:30.971425" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:30.971425" elapsed="0.069760"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:30.879181" elapsed="0.162004"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.044219" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:31.043216" elapsed="0.001003"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:31.043216" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:31.043216" elapsed="0.001003"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:31.044219" elapsed="0.020906"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:31.065125" elapsed="0.028922"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.094047" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.095083" elapsed="0.023022"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:31.095083" elapsed="0.023022"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.118105" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.043216" elapsed="0.075887"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.119103" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.119103" elapsed="0.107945"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.041185" elapsed="0.185863"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:37:30.879181" elapsed="0.347867"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.229042" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:37:31.550255" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:37:31.550255" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:37:31.550255" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:37:31.566213" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:37:31.566213" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:37:31.228058" elapsed="0.349125"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.579207" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:31.579207" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:31.579207" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:31.579207" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:31.580190" elapsed="0.012493"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:31.592683" elapsed="0.029050"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.621733" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.622730" elapsed="0.022695"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:31.622730" elapsed="0.023692"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.646422" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.578208" elapsed="0.069212"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.647420" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.647420" elapsed="0.207652"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.578208" elapsed="0.276864"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:31.228058" elapsed="0.627014"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.857071" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:31.857071" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:31.857071" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:31.857071" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:31.857071" elapsed="0.019605"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:31.876676" elapsed="0.027398"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.904074" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.905074" elapsed="0.030214"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:31.904074" elapsed="0.031214"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:31.935288" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.856054" elapsed="0.079234"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:31.936260" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:31.936260" elapsed="0.088545"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:31.856054" elapsed="0.168751"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:32.024805" elapsed="0.957045"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:31.856054" elapsed="1.125796"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:32.985532" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:32.984534" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:32.984534" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:32.984534" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:32.985532" elapsed="0.015038"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:33.000570" elapsed="0.025994"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:33.026564" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:33.027565" elapsed="0.024393"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:33.026564" elapsed="0.025394"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:33.051958" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:32.984534" elapsed="0.067424"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:33.052957" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.game.street.20240521')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:33.052957" elapsed="0.083864"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:32.982504" elapsed="0.154317"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:32.982504" elapsed="0.155314"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:33.139814" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:33.139814" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:33.139814" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:33.139814" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:33.140810" elapsed="0.031486"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:33.172296" elapsed="0.028728"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:33.202042" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:33.203045" elapsed="0.020592"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:33.202042" elapsed="0.021595"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:33.224655" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:33.139814" elapsed="0.084841"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:33.224655" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:33.224655" elapsed="0.082923"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:33.138833" elapsed="0.168745"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:33.307578" elapsed="0.734950"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:33.137818" elapsed="0.904710"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:34.046205" level="FAIL">Variable '${developer_updated}' not found.</msg>
<arg>${developer_updated}</arg>
<status status="FAIL" start="2024-06-05T16:37:34.043210" elapsed="0.002995">Variable '${developer_updated}' not found.</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:34.047204" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title_updated}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:34.048201" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${MSCC}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:34.048201" elapsed="0.000998"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:37:34.049199" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:30.612187" elapsed="3.438008">Variable '${developer_updated}' not found.</status>
</test>
<test id="s1-t36" name="[Package Info - Edit] game package info when title is empty cannot be added" line="350">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.056212" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:34.056212" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:34.056212" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.056212" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:34.057214" elapsed="0.013924"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:34.071138" elapsed="0.023197"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.094335" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.095334" elapsed="0.023402"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:34.094335" elapsed="0.024401"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.118736" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.055181" elapsed="0.063555"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.119733" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.119733" elapsed="0.112521"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.054218" elapsed="0.178036"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:34.053220" elapsed="0.179034"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.053220" elapsed="0.179034"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.233244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.232254" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.232254" elapsed="0.000990"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.233244" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.233244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.233244" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.233244" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.234272" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.234272" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.234272" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.234272" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.234272" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.235273" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.234272" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.234272" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.235273" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.235273" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.235273" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.236236" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.235273" elapsed="0.000963"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.235273" elapsed="0.000963"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.236236" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.236236" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.236236" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.237233" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.001028"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.238261" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.237233" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.237233" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.238261" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.238261" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.238261" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.238261" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.239226" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.239226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.238261" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.238261" elapsed="0.000965"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.239226" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:34.240258" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:34.239226" elapsed="0.001032"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.239226" elapsed="0.001032"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:34.053220" elapsed="0.187038"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.242219" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:34.242219" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:34.242219" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.242219" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:34.242219" elapsed="0.016015"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:34.258234" elapsed="0.028864"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.288117" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.289097" elapsed="0.030966"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:34.288117" elapsed="0.031946"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.320063" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.241222" elapsed="0.078841"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.321008" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.321008" elapsed="0.079372"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.241222" elapsed="0.160149"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.404396" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:34.403396" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:34.403396" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:34.403396" elapsed="0.001000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:34.404396" elapsed="0.127654"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:34.533043" elapsed="0.026324"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.559367" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.560368" elapsed="0.031475"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:34.559367" elapsed="0.032476"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:34.591843" elapsed="0.000972"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.403396" elapsed="0.189419"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.592815" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:34.592815" elapsed="0.075368"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:34.401371" elapsed="0.266812"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:37:34.241222" elapsed="0.426961"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:34.670202" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:37:34.992475" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:37:34.992475" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:37:34.992475" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:37:35.009402" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:37:35.009402" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:37:34.669180" elapsed="0.351454"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:35.021635" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:35.021635" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:35.021635" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:35.021635" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:35.021635" elapsed="0.013127"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:35.034762" elapsed="0.023003"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:35.058788" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:35.058788" elapsed="0.021409"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:35.058788" elapsed="0.021409"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:35.081214" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:35.021635" elapsed="0.059579"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:35.081214" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:35.081214" elapsed="0.197355"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:35.020634" elapsed="0.257935"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:34.669180" elapsed="0.609389"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:35.281563" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:35.281563" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:35.280565" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:35.280565" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:35.281563" elapsed="0.012210"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:35.293773" elapsed="0.038986"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:35.332759" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:35.333758" elapsed="0.028524"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:35.332759" elapsed="0.030520"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:35.363279" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:35.280565" elapsed="0.082714"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:35.364277" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:35.364277" elapsed="0.087678"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:35.280565" elapsed="0.171390"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:35.451955" elapsed="0.690323"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:35.279566" elapsed="0.862712"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:36.145991" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:36.145991" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:36.145028" elapsed="0.000963"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:36.145028" elapsed="0.000963"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:36.145991" elapsed="0.011213"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:36.157204" elapsed="0.026287"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:36.183491" elapsed="0.000996"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:36.184487" elapsed="0.020403"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:36.184487" elapsed="0.020403"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:36.204890" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:36.145028" elapsed="0.060858"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:36.205886" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.game.street.20240521')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:36.205886" elapsed="0.088885"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:36.142996" elapsed="0.151775"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:36.142996" elapsed="0.152802"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:36.298780" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:36.298780" elapsed="0.000977"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:36.298780" elapsed="0.000977"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:36.298780" elapsed="0.000977"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:36.299757" elapsed="0.013591"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:36.313348" elapsed="0.026838"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:36.340186" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:36.341186" elapsed="0.024077"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:36.340186" elapsed="0.025077"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:36.365263" elapsed="0.001022"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:36.297773" elapsed="0.068512"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:36.366285" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:36.366285" elapsed="0.088584"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:36.297773" elapsed="0.157096"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:36.454869" elapsed="0.472951"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:36.296766" elapsed="0.632052"/>
</kw>
<kw name="Clear Field Value" owner="Package_Actions">
<if>
<branch type="IF" condition="'${field}' == 'title'">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:36.930813" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //input[@data-testid = 'input-applicationName'] element.</msg>
<msg time="2024-06-05T16:37:37.238222" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:37:37.238222" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:37:37.238222" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:37:37.254179" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:37:37.254179" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_title_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:37:36.930813" elapsed="0.338669"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:36.929817" elapsed="0.339665"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:36.929817" elapsed="0.339665"/>
</if>
<if>
<branch type="IF" condition="'${field}' == 'developer'">
<kw name="Press Keys" owner="SeleniumLibrary">
<arg>${input_developer_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:37.269482" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:37.269482" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:37.269482" elapsed="0.000000"/>
</if>
<arg>title</arg>
<status status="PASS" start="2024-06-05T16:37:36.929817" elapsed="0.340643"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:37.272710" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:37.272710" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:37.271712" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:37.271712" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:37.272710" elapsed="0.011128"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:37.284836" elapsed="0.027300"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:37.313147" elapsed="0.000987"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:37.315171" elapsed="0.035666"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:37.315171" elapsed="0.035666"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:37.350837" elapsed="0.000972"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:37.271712" elapsed="0.080097"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:37.351809" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:37.351809" elapsed="0.142075"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:37.271712" elapsed="0.222172"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:37.270684" elapsed="0.223200"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:37.495878" elapsed="0.032864"/>
</kw>
<arg>${ERROR_TITLE_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:37.494893" elapsed="0.033849"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:34.052208" elapsed="3.477499"/>
</test>
<test id="s1-t37" name="[Package Info - Edit] game package info when title is empty cannot be added" line="364">
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:37.534693" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:37.534693" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:37.534693" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:37.534693" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:37.534693" elapsed="0.011984"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:37.547662" elapsed="0.028045"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:37.575707" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:37.576707" elapsed="0.023941"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:37.575707" elapsed="0.024941"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:37.600648" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:37.533696" elapsed="0.066952"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:37.601644" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:37.601644" elapsed="0.416875"/>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:37.533696" elapsed="0.484823"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:37.533696" elapsed="0.484823"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.021512" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:38.021512" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.020514" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:38.020514" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:38.021512" elapsed="0.012964"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:38.035474" elapsed="0.023221"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:38.059698" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:38.059698" elapsed="0.026585"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:38.059698" elapsed="0.026585"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:38.087280" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.020514" elapsed="0.066766"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.087280" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:38.087280" elapsed="0.192473"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.020514" elapsed="0.259239"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:38.019518" elapsed="0.260235"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:38.281748" elapsed="0.035996"/>
</kw>
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:37:38.280752" elapsed="0.036992"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:37.532698" elapsed="0.786059"/>
</test>
<test id="s1-t38" name="[Package Info - Edit] game package info when developer is empty cannot be added" line="369">
<kw name="Clear Field Value" owner="Package_Actions">
<if>
<branch type="IF" condition="'${field}' == 'title'">
<kw name="Press Keys" owner="SeleniumLibrary">
<arg>${input_title_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:38.321728" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:38.321728" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:38.321728" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="'${field}' == 'developer'">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.322722" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //input[@data-testid = 'input-seller'] element.</msg>
<msg time="2024-06-05T16:37:38.626957" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:37:38.626957" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:37:38.626957" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:37:38.642921" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:37:38.642921" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_developer_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:37:38.321728" elapsed="0.334151"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.321728" elapsed="0.334151"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:38.321728" elapsed="0.334151"/>
</if>
<arg>developer</arg>
<status status="PASS" start="2024-06-05T16:37:38.320741" elapsed="0.335138"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.658871" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:38.658871" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.658871" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:38.658871" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:38.658871" elapsed="0.013969"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:38.673855" elapsed="0.027790"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:38.702640" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:38.702640" elapsed="0.023343"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:38.702640" elapsed="0.023343"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:38.725983" elapsed="0.001030"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.658871" elapsed="0.068142"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.727013" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:38.727013" elapsed="0.184693"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.657923" elapsed="0.253783"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:38.656883" elapsed="0.254823"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:38.913698" elapsed="0.034534"/>
</kw>
<arg>${ERROR_DEVELOPER_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:37:38.912701" elapsed="0.036520"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.320741" elapsed="0.629474"/>
</test>
<test id="s1-t39" name="[Package Info - Edit] game package info when developer is more than maximum (256) cannot be added" line="374">
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:38.953207" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:38.953207" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.953207" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:38.953207" elapsed="0.001022"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:38.954229" elapsed="0.013099"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:38.967328" elapsed="0.026015"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:38.993343" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:38.994343" elapsed="0.026442"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:38.994343" elapsed="0.026442"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.020785" elapsed="0.001000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.953207" elapsed="0.068578"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.021785" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.021785" elapsed="0.445847"/>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:38.952234" elapsed="0.515398"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:38.952234" elapsed="0.515398"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.470624" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:39.469626" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:39.469626" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.469626" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:39.470624" elapsed="0.010972"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:39.481596" elapsed="0.022937"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.504533" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.505531" elapsed="0.018471"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:39.505531" elapsed="0.018471"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.524002" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.469626" elapsed="0.055374"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.525000" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.525000" elapsed="0.153589"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.468629" elapsed="0.209960"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:37:39.468629" elapsed="0.209960"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:39.682582" elapsed="0.033907"/>
</kw>
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:37:39.681594" elapsed="0.035891"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:38.951229" elapsed="0.766256"/>
</test>
<test id="s1-t40" name="[Package Info - Edit] game package info when history comment is empty cannot be added" line="379">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.722471" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:39.722471" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:39.722471" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.722471" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:39.722471" elapsed="0.009974"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:39.733442" elapsed="0.021942"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.756382" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.757379" elapsed="0.017952"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:39.756382" elapsed="0.018949"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.776328" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.721488" elapsed="0.054840"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.776328" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.776328" elapsed="0.110203"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.720477" elapsed="0.166054"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:39.719480" elapsed="0.167051"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.719480" elapsed="0.167051"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.886531" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.886531" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.886531" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.887528" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.887528" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.887528" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.887528" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.888526" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.888526" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.888526" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.888526" elapsed="0.001006"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.889532" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.889532" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.889532" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.889532" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.890521" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.890521" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.890521" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.891517" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.891517" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.891517" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.892515" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.892515" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:37:39.893545" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.893545" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:37:39.719480" elapsed="0.175063"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.897536" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:39.897536" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:39.896537" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:39.896537" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:39.898533" elapsed="0.010129"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:39.909663" elapsed="0.027945"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.938639" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.938639" elapsed="0.022189"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:39.938639" elapsed="0.022189"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:39.961813" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.895526" elapsed="0.066287"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:39.962816" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:39.962816" elapsed="0.071494"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:39.894543" elapsed="0.139767"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.039297" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:40.039297" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:40.038300" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:40.038300" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:40.039297" elapsed="0.013961"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:40.053258" elapsed="0.135544"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.188802" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.189802" elapsed="0.050840"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:40.189802" elapsed="0.051836"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.241638" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.038300" elapsed="0.203338"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.241638" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.241638" elapsed="0.066775"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.035306" elapsed="0.274137"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:37:39.894543" elapsed="0.414900"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.311428" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:37:40.616143" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:37:40.616143" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:37:40.616143" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:37:40.632101" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:37:40.632101" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:37:40.310454" elapsed="0.335375"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.647823" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:40.647823" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:40.647823" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:40.647823" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:40.647823" elapsed="0.012386"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:40.660209" elapsed="0.027063"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.688290" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.688290" elapsed="0.021320"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:40.688290" elapsed="0.021320"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.709610" elapsed="0.001020"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.646827" elapsed="0.063803"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.710630" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.710630" elapsed="0.197036"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.646827" elapsed="0.260839"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:40.310454" elapsed="0.597212"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.910657" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:40.910657" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:40.910657" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:40.910657" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:40.910657" elapsed="0.012082"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:40.922739" elapsed="0.029174"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.951913" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.952938" elapsed="0.026999"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:40.952938" elapsed="0.026999"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:40.980935" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.908662" elapsed="0.073271"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:40.981933" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:40.981933" elapsed="0.089431"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:40.908662" elapsed="0.162702"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:41.071364" elapsed="0.698371"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:40.908662" elapsed="0.861073"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:41.772543" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:41.772543" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:41.772543" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:41.772543" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:41.773540" elapsed="0.012283"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:41.785823" elapsed="0.020755"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:41.807602" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:41.807602" elapsed="0.015933"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:41.807602" elapsed="0.015933"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:41.823535" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:41.772543" elapsed="0.050992"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:41.824568" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.game.street.20240521')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:41.823535" elapsed="0.058935"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:41.770513" elapsed="0.111957"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:37:41.770513" elapsed="0.111957"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:41.884466" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:41.883468" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:41.883468" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:41.883468" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:41.884466" elapsed="0.009293"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:41.894756" elapsed="0.020429"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:41.915185" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:41.916182" elapsed="0.016255"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:41.916182" elapsed="0.016255"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:41.932437" elapsed="0.001024"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:41.883468" elapsed="0.049993"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:41.933461" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:41.933461" elapsed="0.051011"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:41.883468" elapsed="0.101004"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:37:41.984472" elapsed="0.682544"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:41.882470" elapsed="0.784546"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:42.669011" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:42.669011" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:42.669011" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:42.669011" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:42.669011" elapsed="0.008976"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:42.677987" elapsed="0.020948"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:42.698935" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:42.699965" elapsed="0.016920"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:42.698935" elapsed="0.017950"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:42.716885" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:42.668014" elapsed="0.049868"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:42.717882" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:42.717882" elapsed="0.052856"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:42.668014" elapsed="0.102724"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:42.668014" elapsed="0.102724"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:37:42.773730" level="FAIL">Variable '${title_updated}' not found.</msg>
<arg>${title_updated}</arg>
<status status="FAIL" start="2024-06-05T16:37:42.771736" elapsed="0.001994">Variable '${title_updated}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:37:42.773730" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:37:39.718483" elapsed="3.056245">Variable '${title_updated}' not found.</status>
</test>
<test id="s1-t41" name="[Package Info - Edit] game package info when history comment is more than maximum (1001) cannot be added" line="393">
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:42.777720" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:37:42.776722" elapsed="0.000998"/>
</kw>
<status status="PASS" start="2024-06-05T16:37:42.776722" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:37:42.776722" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:37:42.777720" elapsed="0.009975"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:37:42.788693" elapsed="0.019975"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:42.809635" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:42.809635" elapsed="0.017953"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:37:42.809635" elapsed="0.017953"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:37:42.827588" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:42.776722" elapsed="0.051863"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:37:42.829583" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:37:42.828585" elapsed="0.845905"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:37:42.776722" elapsed="0.897768"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:37:42.775725" elapsed="0.898765"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:13.848310" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-46.png"&gt;&lt;img src="selenium-screenshot-46.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:38:13.848310" level="FAIL">Element '//div[@class='error-message']/div[contains(text(),"History Comment cannot exceed 1000 characters")]' not visible after 30 seconds.</msg>
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="FAIL" start="2024-06-05T16:37:43.675487" elapsed="30.174818">Element '//div[@class='error-message']/div[contains(text(),"History Comment cannot exceed 1000 characters")]' not visible after 30 seconds.</status>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="FAIL" start="2024-06-05T16:37:43.674490" elapsed="30.175815">Element '//div[@class='error-message']/div[contains(text(),"History Comment cannot exceed 1000 characters")]' not visible after 30 seconds.</status>
</kw>
<status status="FAIL" start="2024-06-05T16:37:42.775725" elapsed="31.075578">Element '//div[@class='error-message']/div[contains(text(),"History Comment cannot exceed 1000 characters")]' not visible after 30 seconds.</status>
</test>
<test id="s1-t42" name="[Package Info - Edit] non game package info when all fields are populated can be added" line="397">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:13.856289" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:13.855292" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:13.855292" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:13.855292" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:13.856289" elapsed="0.008978"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:13.865267" elapsed="0.020942"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:13.886209" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:13.886209" elapsed="0.025190"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:13.886209" elapsed="0.025190"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:13.912395" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:13.855292" elapsed="0.057103"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:13.913392" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:13.913392" elapsed="0.089981"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:13.854295" elapsed="0.149078"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:13.854295" elapsed="0.149078"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:13.854295" elapsed="0.150104"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.004399" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.004399" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.004399" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.005362" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.005362" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.004399" elapsed="0.000963"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.004399" elapsed="0.000963"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.005362" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.006392" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.005362" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.005362" elapsed="0.001030"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.006392" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.007382" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.006392" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.006392" elapsed="0.000990"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.007382" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.007382" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.007382" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.007382" elapsed="0.000973"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.007382" elapsed="0.000973"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.008355" elapsed="0.001439"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.008355" elapsed="0.001439"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.010815" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.009794" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.009794" elapsed="0.001021"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.010815" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.010815" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.010815" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.010815" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.011782" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:14.011782" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:14.010815" elapsed="0.000967"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.010815" elapsed="0.000967"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:13.853297" elapsed="0.158485"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.014773" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:14.014773" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:14.013799" elapsed="0.000974"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.013799" elapsed="0.000974"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:14.014773" elapsed="0.012299"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:14.028106" elapsed="0.019736"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.048866" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.048866" elapsed="0.017599"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:14.048866" elapsed="0.017599"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.066465" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.013799" elapsed="0.052666"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.067462" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.067462" elapsed="0.052054"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.012779" elapsed="0.106737"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.121514" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:14.121514" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:14.121514" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.121514" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:14.122511" elapsed="0.010414"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:14.132925" elapsed="0.019855"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.152780" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.153779" elapsed="0.015989"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:14.152780" elapsed="0.016988"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.169768" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.121514" elapsed="0.049250"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.170764" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.170764" elapsed="0.046005"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.119516" elapsed="0.097253"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:38:14.012779" elapsed="0.203990"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.217767" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:38:14.508084" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:14.508084" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:14.508084" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:14.518057" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:14.519056" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:14.217767" elapsed="0.306883"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.525672" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:14.525672" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:14.525672" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.525672" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:14.525672" elapsed="0.010371"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:14.537075" elapsed="0.020683"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.557758" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.557758" elapsed="0.018969"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:14.557758" elapsed="0.018969"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.576727" elapsed="0.001001"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.525672" elapsed="0.052056"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.577728" level="INFO">Typing text 'com.package.nongame.errand.20240520' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.577728" elapsed="0.157277"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.524650" elapsed="0.210355"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:14.217767" elapsed="0.517238"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.737024" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:14.737024" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:14.736000" elapsed="0.001024"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:14.736000" elapsed="0.001024"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:14.737024" elapsed="0.013540"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:14.750564" elapsed="0.020957"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.771521" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.772518" elapsed="0.019855"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:14.771521" elapsed="0.020852"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:14.793397" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.736000" elapsed="0.057397"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:14.793397" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:14.793397" elapsed="0.071282"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:14.736000" elapsed="0.128679"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:14.864679" elapsed="0.936363"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:14.736000" elapsed="1.065042"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:15.806916" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:15.806916" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:15.806916" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:15.806916" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:15.807913" elapsed="0.020004"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:15.827917" elapsed="0.020986"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:15.848903" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:15.849933" elapsed="0.015186"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:15.848903" elapsed="0.016216"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:15.866142" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:15.805918" elapsed="0.060224"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:15.866142" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.nongame.errand.20240520')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:15.866142" elapsed="0.066665"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:15.802928" elapsed="0.129879"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:15.801884" elapsed="0.130923"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:15.934801" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:15.934801" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:15.934801" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:15.934801" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:15.934801" elapsed="0.013613"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:15.949411" elapsed="0.019412"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:15.968823" elapsed="0.001024"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:15.969847" elapsed="0.016972"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:15.969847" elapsed="0.016972"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:15.986819" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:15.933804" elapsed="0.054013"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:15.987817" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:15.987817" elapsed="0.053145"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:15.933804" elapsed="0.107158"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:16.041961" elapsed="0.887503"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:15.933804" elapsed="0.995660"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:38:16.933457" level="FAIL">Variable '${developer_updated}' not found.</msg>
<arg>${developer_updated}</arg>
<status status="FAIL" start="2024-06-05T16:38:16.930465" elapsed="0.002992">Variable '${developer_updated}' not found.</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:16.934312" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title_updated}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:16.934836" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${MSCC}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:16.935542" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:38:16.935963" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:13.852300" elapsed="3.084088">Variable '${developer_updated}' not found.</status>
</test>
<test id="s1-t43" name="[Package Info - Edit] non game package info when title is empty cannot be added" line="413">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:16.939667" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:16.939667" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:16.939667" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:16.939667" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:16.939667" elapsed="0.010935"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:16.950602" elapsed="0.019947"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:16.970549" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:16.971582" elapsed="0.015915"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:16.970549" elapsed="0.016948"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:16.987497" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:16.939667" elapsed="0.048826"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:16.988493" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:16.988493" elapsed="0.076897"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:16.938675" elapsed="0.126715"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:16.937638" elapsed="0.127752"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:16.937638" elapsed="0.127752"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.066413" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.067410" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.067410" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.067410" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.067410" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.067410" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.067410" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.067410" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.068407" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.001017"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.068407" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.068407" elapsed="0.001017"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.069424" elapsed="0.000979"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.069424" elapsed="0.000979"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.071404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.070403" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.070403" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.071404" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:17.071404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:17.071404" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.071404" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:16.937638" elapsed="0.133766"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.073361" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:17.073361" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:17.073361" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.073361" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:17.073361" elapsed="0.011638"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:17.084999" elapsed="0.020951"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.105950" elapsed="0.001027"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.106977" elapsed="0.015530"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:17.106977" elapsed="0.015530"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.123529" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.072360" elapsed="0.051169"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.123529" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.123529" elapsed="0.048108"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.072360" elapsed="0.099277"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.173634" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:17.173634" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:17.173634" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.173634" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:17.173634" elapsed="0.015156"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:17.189792" elapsed="0.037504"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.228294" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.228294" elapsed="0.016525"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:17.228294" elapsed="0.016525"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.245843" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.173634" elapsed="0.072209"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.245843" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.245843" elapsed="0.141771"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.171637" elapsed="0.215977"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:38:17.072360" elapsed="0.315254"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.389811" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:38:17.700866" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:17.700866" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:17.700866" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:17.709815" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:17.709815" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:17.388811" elapsed="0.328393"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.718198" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:17.718198" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:17.717204" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.717204" elapsed="0.000994"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:17.718198" elapsed="0.009952"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:17.728150" elapsed="0.019935"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.749133" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.749133" elapsed="0.018887"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:17.749133" elapsed="0.018887"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.768020" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.717204" elapsed="0.050816"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.769021" level="INFO">Typing text 'com.package.nongame.errand.20240520' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.769021" elapsed="0.138107"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.717204" elapsed="0.190928"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:17.388811" elapsed="0.519321"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.916105" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:17.915109" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:17.915109" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:17.915109" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:17.917102" elapsed="0.022071"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:17.939173" elapsed="0.022084"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.961257" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.962252" elapsed="0.019486"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:17.961257" elapsed="0.020481"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:17.981738" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.914112" elapsed="0.067626"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:17.982735" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:17.981738" elapsed="0.059989"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:17.912118" elapsed="0.129609"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:18.042759" elapsed="0.682925"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:17.911121" elapsed="0.814563"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:18.730181" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:18.730181" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:18.729184" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:18.729184" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:18.730181" elapsed="0.008671"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:18.738852" elapsed="0.021946"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:18.760798" elapsed="0.001011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:18.761809" elapsed="0.017853"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:18.761809" elapsed="0.017853"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:18.779662" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:18.729184" elapsed="0.050478"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:18.780685" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.nongame.errand.20240520')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:18.780685" elapsed="0.055427"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:18.726681" elapsed="0.109431"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:18.726681" elapsed="0.109431"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:18.838133" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:18.838133" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:18.838133" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:18.838133" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:18.838133" elapsed="0.010380"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:18.848513" elapsed="0.019298"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:18.867811" elapsed="0.001021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:18.868832" elapsed="0.016215"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:18.868832" elapsed="0.016215"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:18.885047" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:18.838133" elapsed="0.046914"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:18.886043" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:18.885047" elapsed="0.049507"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:18.837110" elapsed="0.097444"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:18.934554" elapsed="0.899968"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:18.837110" elapsed="0.998410"/>
</kw>
<kw name="Clear Field Value" owner="Package_Actions">
<if>
<branch type="IF" condition="'${field}' == 'title'">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:19.837551" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //input[@data-testid = 'input-applicationName'] element.</msg>
<msg time="2024-06-05T16:38:20.143355" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:20.143355" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:20.143355" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:20.152317" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:20.152317" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_title_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:19.836518" elapsed="0.323781"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:19.836518" elapsed="0.323781"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:19.836518" elapsed="0.323781"/>
</if>
<if>
<branch type="IF" condition="'${field}' == 'developer'">
<kw name="Press Keys" owner="SeleniumLibrary">
<arg>${input_developer_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:20.161298" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:20.160299" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.160299" elapsed="0.000999"/>
</if>
<arg>title</arg>
<status status="PASS" start="2024-06-05T16:38:19.836518" elapsed="0.324780"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.163291" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:20.163291" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.163291" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.163291" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:20.163291" elapsed="0.012422"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:20.175713" elapsed="0.024183"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.199896" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.200896" elapsed="0.018170"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:20.199896" elapsed="0.019170"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.219066" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.163291" elapsed="0.055775"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.220064" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.220064" elapsed="0.087373"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.162311" elapsed="0.145126"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:38:20.162311" elapsed="0.145126"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:20.308434" elapsed="0.025675"/>
</kw>
<arg>${ERROR_TITLE_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:38:20.308434" elapsed="0.025675"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:16.936638" elapsed="3.398118"/>
</test>
<test id="s1-t44" name="[Package Info - Edit] non game package info when title is empty cannot be added" line="427">
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.338772" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:20.338772" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.337750" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.337750" elapsed="0.001022"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:20.338772" elapsed="0.009764"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:20.348536" elapsed="0.020346"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.368882" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.369883" elapsed="0.017924"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:20.369883" elapsed="0.017924"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.388831" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.337750" elapsed="0.051081"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.388831" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.388831" elapsed="0.254013"/>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.337750" elapsed="0.305094"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:38:20.337750" elapsed="0.305094"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.646834" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:20.646834" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.645837" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.645837" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:20.646834" elapsed="0.012965"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:20.660829" elapsed="0.016838"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.677667" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.677667" elapsed="0.016000"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:20.677667" elapsed="0.016000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:20.694665" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.645837" elapsed="0.048828"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.695663" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:20.694665" elapsed="0.106817"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:20.644840" elapsed="0.156642"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:38:20.643842" elapsed="0.157640"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:20.802479" elapsed="0.024429"/>
</kw>
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:38:20.802479" elapsed="0.025428"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.336752" elapsed="0.491155"/>
</test>
<test id="s1-t45" name="[Package Info - Edit] non game package info when developer is empty cannot be added" line="432">
<kw name="Clear Field Value" owner="Package_Actions">
<if>
<branch type="IF" condition="'${field}' == 'title'">
<kw name="Press Keys" owner="SeleniumLibrary">
<arg>${input_title_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:20.830899" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:20.830899" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.830899" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="'${field}' == 'developer'">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:20.830899" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //input[@data-testid = 'input-seller'] element.</msg>
<msg time="2024-06-05T16:38:21.123354" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:21.123354" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:21.123354" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:21.134324" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:21.134324" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_developer_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:20.830899" elapsed="0.311404"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.830899" elapsed="0.311404"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:20.830899" elapsed="0.311404"/>
</if>
<arg>developer</arg>
<status status="PASS" start="2024-06-05T16:38:20.829903" elapsed="0.312400"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.145310" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:21.144311" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.144311" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.144311" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:21.145310" elapsed="0.010956"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.157263" elapsed="0.024284"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.181547" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.182572" elapsed="0.017987"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:21.182572" elapsed="0.017987"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.200559" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.144311" elapsed="0.056248"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.201557" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.200559" elapsed="0.107940"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.143309" elapsed="0.165190"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:38:21.143309" elapsed="0.165190"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.309496" elapsed="0.026841"/>
</kw>
<arg>${ERROR_DEVELOPER_REQUIRED}</arg>
<status status="PASS" start="2024-06-05T16:38:21.309496" elapsed="0.026841"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:20.829903" elapsed="0.506434"/>
</test>
<test id="s1-t46" name="[Package Info - Edit] non game package info when developer is more than maximum (256) cannot be added" line="437">
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.339806" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:21.339806" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.339806" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.339806" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:21.339806" elapsed="0.010497"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.351332" elapsed="0.020881"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.372213" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.373210" elapsed="0.017500"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:21.372213" elapsed="0.018497"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.391732" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.338807" elapsed="0.052925"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.392706" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.391732" elapsed="0.265358"/>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.338807" elapsed="0.318283"/>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:38:21.338807" elapsed="0.318283"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.662079" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:21.662079" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.661082" elapsed="0.001993"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.661082" elapsed="0.001993"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:21.664073" elapsed="0.020239"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.685348" elapsed="0.020909"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.706257" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.707281" elapsed="0.015908"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:21.707281" elapsed="0.015908"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.723189" elapsed="0.001010"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.660084" elapsed="0.064115"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.724199" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.724199" elapsed="0.107388"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.659084" elapsed="0.172503"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:38:21.658087" elapsed="0.173500"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.832584" elapsed="0.025603"/>
</kw>
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="PASS" start="2024-06-05T16:38:21.832584" elapsed="0.025603"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.338331" elapsed="0.520881"/>
</test>
<test id="s1-t47" name="[Package Info - Edit] non game package info when history comment is empty cannot be added" line="442">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.864172" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:21.864172" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.864172" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.864172" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:21.865169" elapsed="0.008016"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:21.874207" elapsed="0.019873"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.894080" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.895093" elapsed="0.018582"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:21.894080" elapsed="0.019595"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:21.914672" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.864172" elapsed="0.050500"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:21.914672" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:21.914672" elapsed="0.080994"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:21.863174" elapsed="0.132492"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:21.862178" elapsed="0.133488"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.862178" elapsed="0.133488"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.996664" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.995666" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.995666" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.996664" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.996664" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.996664" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.997663" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.997663" elapsed="0.001028"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.998691" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.001000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.999691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.998691" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.998691" elapsed="0.001000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.999691" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:21.999691" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.999691" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.999691" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:21.999691" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:21.999691" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.000686" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:22.000686" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.000686" elapsed="0.001004"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.001690" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:21.862178" elapsed="0.139512"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.003789" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:22.003789" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:22.003789" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.003789" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:22.003789" elapsed="0.011678"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:22.016465" elapsed="0.020240"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.036705" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.037706" elapsed="0.018347"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:22.037706" elapsed="0.018347"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.056053" elapsed="0.001026"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.002788" elapsed="0.054291"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.057079" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.057079" elapsed="0.046215"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.002788" elapsed="0.100506"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.105291" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:22.105291" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:22.105291" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.105291" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:22.105291" elapsed="0.012803"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:22.118094" elapsed="0.020597"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.138691" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.139723" elapsed="0.015909"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:22.139723" elapsed="0.015909"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.155632" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.104294" elapsed="0.051338"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.156654" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.156654" elapsed="0.164344"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.103294" elapsed="0.217704"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:38:22.002788" elapsed="0.318210"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.321995" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:38:22.613834" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:22.613834" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:22.613834" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:22.623807" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:22.623807" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:22.321995" elapsed="0.313467"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.636460" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:22.636460" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:22.636460" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.636460" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:22.637457" elapsed="0.011005"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:22.648462" elapsed="0.021699"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.670161" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.671186" elapsed="0.017669"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:22.671186" elapsed="0.017669"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.688855" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.636460" elapsed="0.052395"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.689886" level="INFO">Typing text 'com.package.nongame.errand.20240520' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.688855" elapsed="0.135684"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.635462" elapsed="0.190075"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:22.321995" elapsed="0.503542"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.827532" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:22.826573" elapsed="0.000959"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:22.826573" elapsed="0.000959"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:22.826573" elapsed="0.000959"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:22.827532" elapsed="0.008973"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:22.837526" elapsed="0.020561"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.858087" elapsed="0.001000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.859087" elapsed="0.022244"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:22.859087" elapsed="0.022244"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:22.882357" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.826573" elapsed="0.055784"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:22.882357" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:22.882357" elapsed="0.058524"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:22.825537" elapsed="0.115344"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:22.940881" elapsed="0.697097"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:22.825537" elapsed="0.812441"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:23.640479" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:23.640479" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:23.640479" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:23.640479" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:23.640479" elapsed="0.010977"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:23.651456" elapsed="0.019879"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:23.672372" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:23.672372" elapsed="0.017516"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:23.672372" elapsed="0.017516"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:23.689888" elapsed="0.000999"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:23.640479" elapsed="0.050408"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:23.690887" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.nongame.errand.20240520')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:23.690887" elapsed="0.055739"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:23.638564" elapsed="0.108062"/>
</kw>
<arg>com.package.nongame.errand.20240520</arg>
<status status="PASS" start="2024-06-05T16:38:23.638564" elapsed="0.109091"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:23.748659" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:23.748659" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:23.748659" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:23.748659" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:23.749616" elapsed="0.010972"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:23.760588" elapsed="0.020317"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:23.780905" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:23.781904" elapsed="0.016520"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:23.780905" elapsed="0.017519"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:23.798424" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:23.748659" elapsed="0.049765"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:23.799421" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:23.798424" elapsed="0.051674"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:23.747655" elapsed="0.102443"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:23.850098" elapsed="0.932323"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:23.747655" elapsed="1.034766"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:24.784564" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:24.784564" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:24.784564" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:24.784564" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:24.784564" elapsed="0.008496"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:24.794084" elapsed="0.020217"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:24.814301" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:24.815301" elapsed="0.018226"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:24.814301" elapsed="0.020200"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:24.834501" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:24.784564" elapsed="0.049937"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:24.834501" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:24.834501" elapsed="0.057378"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:24.783525" elapsed="0.108354"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:24.783525" elapsed="0.108354"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:38:24.895869" level="FAIL">Variable '${title_updated}' not found.</msg>
<arg>${title_updated}</arg>
<status status="FAIL" start="2024-06-05T16:38:24.892875" elapsed="0.002994">Variable '${title_updated}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:24.895869" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:21.860182" elapsed="3.036684">Variable '${title_updated}' not found.</status>
</test>
<test id="s1-t48" name="[Package Info - Edit] non game package info when history comment is more than maximum (1001) cannot be added" line="456">
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:24.899858" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:24.899858" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:24.899858" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:24.899858" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:24.899858" elapsed="0.009972"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:24.910828" elapsed="0.020944"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:24.931772" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:24.932770" elapsed="0.016555"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:24.931772" elapsed="0.017553"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:24.949325" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:24.899858" elapsed="0.050464"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:24.950322" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:24.950322" elapsed="0.811862"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:24.898910" elapsed="0.863274"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:38:24.898910" elapsed="0.863274"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:25.763189" elapsed="14.941700"/>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="PASS" start="2024-06-05T16:38:25.763189" elapsed="14.941700"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:24.897864" elapsed="15.807583"/>
</test>
<test id="s1-t49" name="[Package Info - Edit] unknown package info when all fields are populated can be added" line="461">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:40.709646" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:40.709646" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:40.709646" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.709646" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:40.709646" elapsed="0.010570"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:40.720216" elapsed="0.021497"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:40.742710" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:40.743708" elapsed="0.018804"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:40.742710" elapsed="0.019802"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:40.762512" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.708695" elapsed="0.054843"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:40.763538" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:40.763538" elapsed="0.086955"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.707684" elapsed="0.143807"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:40.707684" elapsed="0.143807"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.707684" elapsed="0.143807"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.851491" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.851491" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.851491" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.851491" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.851491" elapsed="0.001003"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.852494" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.852494" elapsed="0.001018"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.852494" elapsed="0.001018"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.853512" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.853512" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.854507" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.854507" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.855505" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.856501" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:40.706652" elapsed="0.149849"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:40.859471" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:40.858496" elapsed="0.000975"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:40.858496" elapsed="0.000975"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.858496" elapsed="0.000975"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:40.859471" elapsed="0.010761"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:40.870232" elapsed="0.020481"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:40.891710" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:40.891710" elapsed="0.019119"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:40.891710" elapsed="0.019119"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:40.911859" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.858496" elapsed="0.053363"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:40.911859" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:40.911859" elapsed="0.047491"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.857501" elapsed="0.101849"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:40.963339" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:40.963339" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:40.962342" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:40.962342" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:40.963339" elapsed="0.008952"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:40.972291" elapsed="0.018663"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:40.990954" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:40.991985" elapsed="0.015740"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:40.991985" elapsed="0.015740"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:41.007725" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.962342" elapsed="0.045383"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.007725" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:41.007725" elapsed="0.181112"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:40.959350" elapsed="0.229487"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:38:40.857501" elapsed="0.331336"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.189762" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:38:41.491912" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:41.491912" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:41.491912" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:41.500879" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:41.500879" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:41.189762" elapsed="0.317771"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.508556" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:41.508556" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:41.508556" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:41.508556" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:41.508556" elapsed="0.009947"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:41.518503" elapsed="0.020256"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:41.538759" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:41.539759" elapsed="0.016470"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:41.538759" elapsed="0.018503"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:41.557262" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:41.507533" elapsed="0.049729"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.557262" level="INFO">Typing text 'com.package.unknown.marmalade.20240516' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:41.557262" elapsed="0.146481"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:41.507533" elapsed="0.196210"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:38:41.188837" elapsed="0.514906"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.705563" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:41.705563" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:41.705563" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:41.705563" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:41.706560" elapsed="0.011120"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:41.717680" elapsed="0.021394"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:41.740071" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:41.740071" elapsed="0.022496"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:41.740071" elapsed="0.022496"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:41.762567" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:41.704562" elapsed="0.058005"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:41.762567" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:41.762567" elapsed="0.060923"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:41.704562" elapsed="0.118928"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:41.823490" elapsed="0.947662"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:41.704562" elapsed="1.067636"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:42.777905" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:42.777905" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:42.776869" elapsed="0.001036"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:42.776869" elapsed="0.001036"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:42.778898" elapsed="0.014924"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:42.794819" elapsed="0.020286"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:42.815105" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:42.816102" elapsed="0.017435"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:42.816102" elapsed="0.017435"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:42.834530" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:42.776869" elapsed="0.057661"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:42.834530" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.unknown.marmalade.20240516')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:42.834530" elapsed="0.062731"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:42.773916" elapsed="0.124367"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:38:42.772873" elapsed="0.125410"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:42.900279" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:42.899256" elapsed="0.001023"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:42.899256" elapsed="0.001023"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:42.899256" elapsed="0.001023"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:42.900279" elapsed="0.009975"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:42.910254" elapsed="0.020916"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:42.931170" elapsed="0.001022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:42.932192" elapsed="0.016930"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:42.932192" elapsed="0.016930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:42.949122" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:42.899256" elapsed="0.050864"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:42.950120" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:42.950120" elapsed="0.049144"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:42.899256" elapsed="0.100008"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:42.999264" elapsed="0.920524"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:42.898283" elapsed="1.021505"/>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:38:43.922809" level="FAIL">Variable '${developer_updated}' not found.</msg>
<arg>${developer_updated}</arg>
<status status="FAIL" start="2024-06-05T16:38:43.920789" elapsed="0.002020">Variable '${developer_updated}' not found.</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:43.923779" elapsed="0.000000"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<arg>${title_updated}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:43.923779" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${MSCC}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:43.924778" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:38:43.924778" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:40.706652" elapsed="3.219123">Variable '${developer_updated}' not found.</status>
</test>
<test id="s1-t50" name="[Package Info - Edit] unknown package info when all fields are populated can be added" line="477">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:43.929764" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:43.929764" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:43.929764" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:43.929764" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:43.930762" elapsed="0.008867"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:43.939629" elapsed="0.019617"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:43.959246" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:43.960243" elapsed="0.015412"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:43.960243" elapsed="0.016409"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:43.976652" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:43.929764" elapsed="0.046888"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:43.976652" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:43.976652" elapsed="0.075473"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:43.927769" elapsed="0.124356"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:43.927769" elapsed="0.124356"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:43.927769" elapsed="0.124356"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.052125" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.052125" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.052125" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.052125" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.052125" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.053122" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.053122" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.053122" elapsed="0.001021"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.054143" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.001998"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.054143" elapsed="0.001998"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.054143" elapsed="0.001998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.056141" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000995"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.056141" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.056141" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.057136" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.058133" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:43.927769" elapsed="0.131338"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.061106" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:44.061106" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:44.060130" elapsed="0.000976"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.060130" elapsed="0.000976"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:44.061106" elapsed="0.010358"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:44.071464" elapsed="0.019959"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.091423" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.092420" elapsed="0.017208"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:44.091423" elapsed="0.018205"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.110627" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.060130" elapsed="0.050497"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.110627" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.110627" elapsed="0.046201"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.060130" elapsed="0.096698"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.158852" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:44.158852" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:44.158852" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.158852" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:44.158852" elapsed="0.010038"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:44.168890" elapsed="0.018984"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.187874" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.188898" elapsed="0.029791"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:44.188898" elapsed="0.030747"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.219645" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.157859" elapsed="0.061786"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.219645" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.219645" elapsed="0.164254"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.156828" elapsed="0.228101"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:38:44.059107" elapsed="0.325822"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.385374" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:38:44.678162" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:44.679160" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:44.679160" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:44.687138" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:44.687138" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:44.385374" elapsed="0.309919"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.696290" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:44.696290" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:44.696290" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.696290" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:44.696290" elapsed="0.009793"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:44.706083" elapsed="0.021523"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.727606" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.728604" elapsed="0.016793"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:44.728604" elapsed="0.016793"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.745397" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.696290" elapsed="0.049107"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.746397" level="INFO">Typing text 'com.package.unknown.marmalade.20240516' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.746397" elapsed="0.138119"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.695293" elapsed="0.189223"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:38:44.385374" elapsed="0.499142"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.886510" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:44.886510" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:44.886510" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:44.886510" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:44.886510" elapsed="0.010025"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:44.897554" elapsed="0.021876"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.919430" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.920431" elapsed="0.019731"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:44.920431" elapsed="0.019731"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:44.940162" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.885514" elapsed="0.054648"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:44.940162" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:44.940162" elapsed="0.060103"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:44.885514" elapsed="0.114751"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:45.000265" elapsed="0.675082"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:44.885514" elapsed="0.789833"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:45.678339" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:45.678339" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:45.677367" elapsed="0.000972"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:45.677367" elapsed="0.000972"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:45.678339" elapsed="0.010001"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:45.688340" elapsed="0.019934"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:45.709280" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:45.710269" elapsed="0.017991"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:45.709280" elapsed="0.018980"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:45.728260" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:45.677367" elapsed="0.050893"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:45.729248" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.unknown.marmalade.20240516')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:45.729248" elapsed="0.057927"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:45.676344" elapsed="0.110831"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:38:45.676344" elapsed="0.110831"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:45.789185" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:45.789185" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:45.789185" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:45.789185" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:45.789185" elapsed="0.010495"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:45.799680" elapsed="0.020405"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:45.820085" elapsed="0.001038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:45.821123" elapsed="0.017588"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:45.821123" elapsed="0.017588"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:45.839709" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:45.789185" elapsed="0.050524"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:45.839709" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:45.839709" elapsed="0.049344"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:45.788172" elapsed="0.100881"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:38:45.889053" elapsed="0.684206"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:45.788172" elapsed="0.785087"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.575253" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:46.575253" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.574256" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:46.574256" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:46.575253" elapsed="0.013014"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:46.588267" elapsed="0.019991"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.609256" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.610253" elapsed="0.017692"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:46.609256" elapsed="0.018689"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.627945" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.574256" elapsed="0.054686"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.628942" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.628942" elapsed="0.081424"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.574256" elapsed="0.136110"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:38:46.574256" elapsed="0.136110"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<kw name="Wait And Select From List" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.712359" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:46.712359" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.712359" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:46.712359" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:46.712359" elapsed="0.011960"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:46.724319" elapsed="0.022857"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.747176" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.748173" elapsed="0.025014"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:46.748173" elapsed="0.025014"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.773187" elapsed="0.001000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.712359" elapsed="0.061828"/>
</kw>
<kw name="Select From List By Label" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.774187" level="INFO">Selecting options from selection list '//select[@data-testid = 'input-storeField-store']' by label MSCC.</msg>
<arg>${locator}</arg>
<arg>${target}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.774187" elapsed="0.053161"/>
</kw>
<arg>${input_store_add}</arg>
<arg>${store}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for and focuses on a list element, then
selects an item(s).
locator:  (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
target: (string, array of strings) The list item(s) to be selected (string, or list of strings)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.711362" elapsed="0.115986"/>
</kw>
<arg>${MSCC}</arg>
<status status="PASS" start="2024-06-05T16:38:46.711362" elapsed="0.116984"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.829344" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:46.829344" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.829344" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:46.829344" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:46.830375" elapsed="0.013350"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:46.843725" elapsed="0.020931"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.864656" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.865680" elapsed="0.018095"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:46.865680" elapsed="0.018095"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.883775" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.829344" elapsed="0.054431"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.884775" level="INFO">Clicking element '//button[@data-testid = 'submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.884775" elapsed="0.050143"/>
</kw>
<arg>${btn_save}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.828346" elapsed="0.106572"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.828346" elapsed="0.106572"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:43.926772" elapsed="3.009251"/>
</test>
<test id="s1-t51" name="Package_Info_Add_unknown package info when title is more than maximum (256) cannot be added" line="491">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.940512" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:46.940512" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.939515" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:46.939515" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:46.940512" elapsed="0.010944"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:46.951456" elapsed="0.020327"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.971783" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.972806" elapsed="0.016855"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:46.971783" elapsed="0.017878"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:46.989661" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.939515" elapsed="0.051144"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:46.990659" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:46.990659" elapsed="0.075455"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:46.938517" elapsed="0.127597"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:46.938517" elapsed="0.127597"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:46.938517" elapsed="0.127597"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.067112" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.066114" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.066114" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.067112" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.067112" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.067112" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.067112" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.067112" elapsed="0.001031"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.067112" elapsed="0.001031"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.068143" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.068143" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.068143" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.069140" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.069140" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.070138" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.070138" elapsed="0.000995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.071133" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.071133" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.072134" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:47.072134" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:47.072134" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.072134" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:38:46.937520" elapsed="0.134614"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.074094" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:47.074094" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:47.074094" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.074094" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:47.075091" elapsed="0.012938"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:47.088029" elapsed="0.019849"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.107878" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.108876" elapsed="0.018409"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:47.108876" elapsed="0.018409"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.127285" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.074094" elapsed="0.054189"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.128283" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.128283" elapsed="0.058727"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.073097" elapsed="0.113913"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:47.073097" elapsed="0.113913"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.192022" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:47.192022" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:47.191000" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.191000" elapsed="0.001022"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:47.192022" elapsed="0.021915"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:47.213937" elapsed="0.246935"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.461870" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.461870" elapsed="0.017432"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:47.461870" elapsed="0.017432"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.479302" elapsed="0.001002"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.191000" elapsed="0.289304"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.480304" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.480304" elapsed="0.051524"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.188009" elapsed="0.343819"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:38:47.188009" elapsed="0.343819"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.533847" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:47.533847" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:47.533847" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.533847" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:47.533847" elapsed="0.012741"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:47.547588" elapsed="0.019848"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.567436" elapsed="0.000997"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.568433" elapsed="0.016749"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:47.568433" elapsed="0.016749"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.585182" elapsed="0.001025"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.532825" elapsed="0.053382"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.586207" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<msg time="2024-06-05T16:38:47.771361" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-47.png"&gt;&lt;img src="selenium-screenshot-47.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:38:47.771361" level="FAIL">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="FAIL" start="2024-06-05T16:38:47.586207" elapsed="0.188148">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:38:47.532825" elapsed="0.242528">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="FAIL" start="2024-06-05T16:38:47.532825" elapsed="0.242528">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<kw name="Input Developer in Add Package" owner="Package_Actions">
<arg>${developer}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:47.776364" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:47.777360" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:46.937520" elapsed="0.839840">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</test>
<test id="s1-t52" name="[Package Info - Edit] unknown package info when title is empty cannot be added" line="500">
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.784498" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:47.784498" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:47.783501" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:47.783501" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:38:47.784498" elapsed="0.009976"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:38:47.795469" elapsed="0.019914"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.815383" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:38:47.816384" elapsed="0.016713"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:38:47.815383" elapsed="0.017714"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:38:47.833097" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:38:47.783501" elapsed="0.050622"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:47.834123" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-applicationName']'.</msg>
<msg time="2024-06-05T16:38:48.023974" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-48.png"&gt;&lt;img src="selenium-screenshot-48.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:38:48.024939" level="FAIL">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="FAIL" start="2024-06-05T16:38:47.834123" elapsed="0.191815">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${input_title_add}</arg>
<arg>${title}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:38:47.783501" elapsed="0.243433">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="FAIL" start="2024-06-05T16:38:47.782504" elapsed="0.244430">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:48.027932" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_TITLE_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:38:48.027932" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:47.782504" elapsed="0.246425">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</test>
<test id="s1-t53" name="[Package Info - Edit] unknown package info when developer is empty cannot be added" line="505">
<kw name="Clear Field Value" owner="Package_Actions">
<if>
<branch type="IF" condition="'${field}' == 'title'">
<kw name="Press Keys" owner="SeleniumLibrary">
<arg>${input_title_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="NOT RUN" start="2024-06-05T16:38:48.033915" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:38:48.032918" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:48.032918" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="'${field}' == 'developer'">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:48.034913" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //input[@data-testid = 'input-seller'] element.</msg>
<msg time="2024-06-05T16:38:48.331178" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:38:48.331178" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:38:48.331178" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:38:48.340391" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:38:48.340391" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_developer_add}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:38:48.033915" elapsed="0.314892"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:48.033915" elapsed="0.314892"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:48.033915" elapsed="0.314892"/>
</if>
<arg>developer</arg>
<status status="PASS" start="2024-06-05T16:38:48.032918" elapsed="0.315889"/>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:38:48.350829" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:38:48.350829" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:38:48.349807" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-06-05T16:38:48.349807" elapsed="0.001022"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:18.579146" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-49.png"&gt;&lt;img src="selenium-screenshot-49.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:39:18.579146" level="FAIL">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:38:48.350829" elapsed="30.229340">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:18.580169" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:18.580169" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:18.581175" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:18.581175" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:38:48.349807" elapsed="30.231368">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</status>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:18.581175" elapsed="0.000000"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:38:48.349807" elapsed="30.231368">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</status>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="FAIL" start="2024-06-05T16:38:48.349807" elapsed="30.231368">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_DEVELOPER_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:18.582365" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:38:48.032918" elapsed="30.550168">Element '//input[@data-testid = 'input-comment']' did not appear in 30 seconds.</status>
</test>
<test id="s1-t54" name="[Package Info - Edit] unknown package info when developer is more than maximum (256) cannot be added" line="510">
<kw name="Input Developer in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:18.586102" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:18.586102" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:18.585071" elapsed="0.001031"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:18.585071" elapsed="0.001031"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:18.586102" elapsed="0.009949"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:18.596051" elapsed="0.021316"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:18.617367" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:18.618365" elapsed="0.018175"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:18.618365" elapsed="0.018175"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:18.636540" elapsed="0.001001"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:18.585071" elapsed="0.052470"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:18.637541" level="INFO">Typing text 'com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.char.com.package.this.is.256.' into text field '//input[@data-testid = 'input-seller']'.</msg>
<msg time="2024-06-05T16:39:18.837190" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-50.png"&gt;&lt;img src="selenium-screenshot-50.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:39:18.837190" level="FAIL">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="FAIL" start="2024-06-05T16:39:18.637541" elapsed="0.201587">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${input_developer_add}</arg>
<arg>${developer}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:39:18.585071" elapsed="0.254057">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<arg>${INPUT_256_CHAR}</arg>
<status status="FAIL" start="2024-06-05T16:39:18.585071" elapsed="0.254057">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:18.840124" elapsed="0.000000"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_DEVELOPER_CANNOT_EXCEED_255}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:18.840124" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:39:18.584070" elapsed="0.257053">JavascriptException: Message: javascript error: {"status":12,"value":"Element is not currently interactable and may not be manipulated"}
  (Session info: chrome=125.0.6422.114)
Stacktrace:
	GetHandleVerifier [0x00007FF606231F52+60322]
	(No symbol) [0x00007FF6061ACEC9]
	(No symbol) [0x00007FF606067EBA]
	(No symbol) [0x00007FF60606DCEE]
	(No symbol) [0x00007FF606070641]
	(No symbol) [0x00007FF6060706E0]
	(No symbol) [0x00007FF6060ADAEA]
	(No symbol) [0x00007FF6060DC21A]
	(No symbol) [0x00007FF6060AADB6]
	(No symbol) [0x00007FF6060DC430]
	(No symbol) [0x00007FF6060FBC80]
	(No symbol) [0x00007FF6060DBFC3]
	(No symbol) [0x00007FF6060A9617]
	(No symbol) [0x00007FF6060AA211]
	GetHandleVerifier [0x00007FF6065494AD+3301629]
	GetHandleVerifier [0x00007FF6065936D3+3605283]
	GetHandleVerifier [0x00007FF606589450+3563680]
	GetHandleVerifier [0x00007FF6062E4326+790390]
	(No symbol) [0x00007FF6061B750F]
	(No symbol) [0x00007FF6061B3404]
	(No symbol) [0x00007FF6061B3592]
	(No symbol) [0x00007FF6061A2F9F]
	BaseThreadInitThunk [0x00007FFED4A47604+20]
	RtlUserThreadStart [0x00007FFED5A426A1+33]
</status>
</test>
<test id="s1-t55" name="[Package Info - Edit] unknown package info when history comment is empty cannot be added" line="515">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:18.848210" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:18.848210" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:18.848210" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:18.848210" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:18.848210" elapsed="0.010737"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:18.859945" elapsed="0.021205"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:18.881150" elapsed="0.001034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:18.882184" elapsed="0.017478"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:18.882184" elapsed="0.017478"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:18.899662" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:18.847212" elapsed="0.053477"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:18.900689" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:18.900689" elapsed="0.165808"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:18.846215" elapsed="0.220282"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:18.846215" elapsed="0.220282"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:18.846215" elapsed="0.221280"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.068491" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.067495" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.067495" elapsed="0.001994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.070486" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.070486" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.069489" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.069489" elapsed="0.001994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.072481" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.072481" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.071483" elapsed="0.001995"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.071483" elapsed="0.001995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.074475" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.074475" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.073478" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.073478" elapsed="0.001995"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.075473" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.075473" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.075473" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.076470" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.076470" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.076470" elapsed="0.001000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.077470" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.077470" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.077470" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.077470" elapsed="0.000994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.078464" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.079461" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.078464" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.078464" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.080459" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.080459" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.079461" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.079461" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.081458" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.081458" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.080459" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.080459" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.082454" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.082454" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.081458" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.081458" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.082454" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:19.083452" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:19.082454" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.082454" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:39:18.846215" elapsed="0.237237"/>
</kw>
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.086443" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:19.085486" elapsed="0.000957"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:19.085486" elapsed="0.000957"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.085486" elapsed="0.000957"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:19.086443" elapsed="0.038897"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:19.125340" elapsed="0.020068"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.145408" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.146440" elapsed="0.018688"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:19.145408" elapsed="0.019720"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.165128" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.085486" elapsed="0.079642"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.166124" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.165128" elapsed="0.062137"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.084448" elapsed="0.143814"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.230289" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:19.230289" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:19.229258" elapsed="0.001031"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.229258" elapsed="0.001031"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:19.230289" elapsed="0.012863"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:19.244172" elapsed="0.017974"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.263167" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.263167" elapsed="0.017891"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:19.263167" elapsed="0.017891"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.281058" elapsed="0.001027"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.229258" elapsed="0.052827"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.282085" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.282085" elapsed="0.052494"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.228262" elapsed="0.106317"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<status status="PASS" start="2024-06-05T16:39:19.084448" elapsed="0.250131"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.335579" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:19.652828" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:19.652828" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:19.652828" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:19.661803" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:19.661803" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:19.335579" elapsed="0.333308"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.669913" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:19.669913" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:19.669913" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.669913" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:19.670910" elapsed="0.010632"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:19.681542" elapsed="0.020817"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.702359" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.703359" elapsed="0.016676"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:19.702359" elapsed="0.017676"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.720035" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.669913" elapsed="0.050122"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.721067" level="INFO">Typing text 'com.package.unknown.marmalade.20240516' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.721067" elapsed="0.167216"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.668887" elapsed="0.219396"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:39:19.335579" elapsed="0.552704"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.889961" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:19.889961" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:19.889961" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:19.889961" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:19.890933" elapsed="0.012965"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:19.903898" elapsed="0.030917"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.934815" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.935813" elapsed="0.021896"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:19.935813" elapsed="0.021896"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:19.957709" elapsed="0.000996"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.889961" elapsed="0.068744"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:19.958705" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:19.958705" elapsed="0.062829"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:19.888935" elapsed="0.133596"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:20.022531" elapsed="0.682130"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:19.888935" elapsed="0.815726"/>
</kw>
<kw name="Click Searched Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:20.707217" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:20.707217" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:20.707217" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:20.707217" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:20.707217" elapsed="0.012896"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:20.720113" elapsed="0.021295"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:20.742430" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:20.742430" elapsed="0.016280"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:20.742430" elapsed="0.016280"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:20.759709" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:20.706240" elapsed="0.053469"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:20.759709" level="INFO">Clicking element '//tr[1]/td[@data-testid='table-body-cell'][4][contains(text(),'com.package.unknown.marmalade.20240516')]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:20.759709" elapsed="0.062530"/>
</kw>
<arg>${package_name_first_result_table.replace("value","${package_name}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:20.705209" elapsed="0.117030"/>
</kw>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:39:20.705209" elapsed="0.117030"/>
</kw>
<kw name="Click Edit" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:20.824236" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:20.824236" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:20.824236" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:20.824236" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:20.824236" elapsed="0.012672"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:20.836908" elapsed="0.021930"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:20.858838" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:20.859837" elapsed="0.016973"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:20.859837" elapsed="0.016973"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:20.876810" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:20.823239" elapsed="0.054571"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:20.877810" level="INFO">Clicking element '//div[@class='tw-truncate'][text()='Edit']/parent::button'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:20.877810" elapsed="0.051738"/>
</kw>
<arg>${btn_edit}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:20.823239" elapsed="0.106309"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:20.930550" elapsed="0.686490"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:20.823239" elapsed="0.793801"/>
</kw>
<kw name="Click History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:21.620035" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:21.620035" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:21.620035" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:21.619001" elapsed="0.001034"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:21.621015" elapsed="0.015940"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:21.636955" elapsed="0.024243"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:21.661198" elapsed="0.001033"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:21.662231" elapsed="0.020292"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:21.662231" elapsed="0.020292"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:21.682523" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:21.619001" elapsed="0.063522"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:21.683520" level="INFO">Clicking element '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:21.682523" elapsed="0.051441"/>
</kw>
<arg>${input_comment_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:21.618005" elapsed="0.115959"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:21.618005" elapsed="0.116996"/>
</kw>
<kw name="Input Game Title in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:39:21.736992" level="FAIL">Variable '${title_updated}' not found.</msg>
<arg>${title_updated}</arg>
<status status="FAIL" start="2024-06-05T16:39:21.735001" elapsed="0.002956">Variable '${title_updated}' not found.</status>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<arg>${ERROR_COMMENT_REQUIRED}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:21.737957" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:39:18.845218" elapsed="2.892739">Variable '${title_updated}' not found.</status>
</test>
<test id="s1-t56" name="[Package Info - Edit] unknown package info when history comment is more than maximum (1001) cannot be added" line="529">
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:21.741363" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:21.741363" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:21.741363" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:21.741363" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:21.742361" elapsed="0.009748"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:21.752109" elapsed="0.020221"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:21.772330" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:21.773365" elapsed="0.016602"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:21.772330" elapsed="0.017637"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:21.789967" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:21.741363" elapsed="0.048604"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:21.790964" level="INFO">Typing text 'This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. This is 1001 long comment. Th' into text field '//input[@data-testid = 'input-comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:21.790964" elapsed="0.798805"/>
</kw>
<arg>${input_comment_add}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:21.740364" elapsed="0.849405"/>
</kw>
<arg>${INPUT_1001_CHAR}</arg>
<status status="PASS" start="2024-06-05T16:39:21.740364" elapsed="0.849405"/>
</kw>
<kw name="Verify Error Message Field" owner="Package_Actions">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${error_required_field.replace('error_message', '${error}')}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:22.590766" elapsed="21.143159"/>
</kw>
<arg>${ERROR_COMMENT_CANNOT_EXCEED_1000}</arg>
<status status="PASS" start="2024-06-05T16:39:22.589769" elapsed="21.144156"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:21.739365" elapsed="21.995640"/>
</test>
<test id="s1-t57" name="[Package Info - Move] package can change from Game to non game" line="535">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:43.740296" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:43.740296" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:43.740296" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.740296" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:43.740296" elapsed="0.009933"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:43.750229" elapsed="0.020344"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:43.770573" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:43.771570" elapsed="0.018521"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:43.770573" elapsed="0.019518"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:43.791088" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:43.740296" elapsed="0.050792"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:43.791088" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:43.791088" elapsed="0.081925"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:43.737337" elapsed="0.135676"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:43.737337" elapsed="0.135676"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.737337" elapsed="0.135676"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.873013" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.873013" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.873013" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.874010" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.875009" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.874010" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.874010" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.875009" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.875009" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.875009" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.876006" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.876006" elapsed="0.001023"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.877029" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000993"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878022" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.877029" elapsed="0.000993"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.877029" elapsed="0.000993"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878022" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878022" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.878022" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.878022" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.878022" elapsed="0.000977"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.878022" elapsed="0.000977"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:43.880026" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:43.878999" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.878999" elapsed="0.001027"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:39:43.737337" elapsed="0.142689"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:43.882014" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:43.882014" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:43.882014" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:43.882014" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:43.882014" elapsed="0.010955"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:43.893990" elapsed="0.020882"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:43.914872" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:43.914872" elapsed="0.021863"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:43.914872" elapsed="0.021863"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:43.936735" elapsed="0.001024"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:43.881016" elapsed="0.056743"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:43.937759" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:43.937759" elapsed="0.066832"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:43.881016" elapsed="0.123575"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.006586" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:44.006586" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:44.006586" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:44.006586" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:44.007616" elapsed="0.009151"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:44.016767" elapsed="0.020088"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.036855" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.037883" elapsed="0.016270"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:44.037883" elapsed="0.016270"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.055172" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.006586" elapsed="0.048586"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.055172" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.055172" elapsed="0.174539"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.004591" elapsed="0.225120"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:43.881016" elapsed="0.348695"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.230736" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:44.519904" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:44.519904" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:44.519904" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:44.529877" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:44.530874" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:44.230736" elapsed="0.307414"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.539142" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:44.539142" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:44.538150" elapsed="0.000992"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:44.538150" elapsed="0.000992"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:44.540139" elapsed="0.009861"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:44.550000" elapsed="0.021862"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.571862" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.572861" elapsed="0.018435"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:44.572861" elapsed="0.018435"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.591296" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.538150" elapsed="0.053146"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.592331" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.592331" elapsed="0.123839"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.538150" elapsed="0.178020"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:44.229711" elapsed="0.486459"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.718153" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:44.718153" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:44.717156" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:44.717156" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:44.718153" elapsed="0.013399"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:44.731552" elapsed="0.020570"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.752122" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.752122" elapsed="0.018979"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:44.752122" elapsed="0.018979"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:44.772125" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.717156" elapsed="0.054969"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:44.772125" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:44.772125" elapsed="0.067053"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:44.716170" elapsed="0.124005"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:44.840175" elapsed="0.901069"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:44.716170" elapsed="1.025074"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:43.880026" elapsed="1.862239"/>
</kw>
<kw name="Click Checkbox for Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:45.745270" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:45.745270" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:45.744273" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:45.744273" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:45.745270" elapsed="0.017916"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:45.764209" elapsed="0.020476"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:45.784685" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:45.785682" elapsed="0.016780"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:45.785682" elapsed="0.016780"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:45.802462" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.744273" elapsed="0.058189"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:45.803495" level="INFO">Clicking element '//tr[@data-testid='table-body-row']/td/div/button/*'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:45.803495" elapsed="0.055680"/>
</kw>
<arg>${checkbox_package}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.743241" elapsed="0.115934"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:45.743241" elapsed="0.115934"/>
</kw>
<kw name="Click Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:45.861196" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:45.861196" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:45.860197" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:45.860197" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:45.861196" elapsed="0.013299"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:45.875459" elapsed="0.020719"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:45.896178" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:45.897204" elapsed="0.017723"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:45.897204" elapsed="0.017723"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:45.914927" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.860197" elapsed="0.054730"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:45.915959" level="INFO">Clicking element '//div[@data-folded='false']//button[@data-test='move-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:45.915959" elapsed="0.065037"/>
</kw>
<arg>${btn_move}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.860197" elapsed="0.120799"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:45.859175" elapsed="0.121821"/>
</kw>
<kw name="Select Category for Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:45.985688" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:45.985688" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:45.984690" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:45.984690" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:45.985688" elapsed="0.012964"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:45.999650" elapsed="0.477299"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.477949" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.477949" elapsed="0.017711"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:46.477949" elapsed="0.017711"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.496658" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.984690" elapsed="0.511968"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.496658" level="INFO">Clicking element '//label[@for='category_NON_GAME']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.496658" elapsed="0.050326"/>
</kw>
<arg>${move_category.replace('selected', '${selected_value.upper()}').replace(' ', '_')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:45.981695" elapsed="0.565289"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:45.981695" elapsed="0.565289"/>
</kw>
<kw name="Input History Comment in Move Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.548980" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:46.548980" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:46.547983" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:46.547983" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:46.548980" elapsed="0.013521"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:46.562501" elapsed="0.021384"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.583885" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.584885" elapsed="0.019300"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:46.583885" elapsed="0.020300"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.605206" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.547983" elapsed="0.057223"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.605206" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@name = 'comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.605206" elapsed="0.094023"/>
</kw>
<arg>${input_comment_move}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.547983" elapsed="0.151246"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:39:46.547983" elapsed="0.151246"/>
</kw>
<kw name="Click Move in Modal" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.701258" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:46.701258" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:46.700227" elapsed="0.001031"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:46.700227" elapsed="0.001031"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:46.701258" elapsed="0.013407"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:46.714665" elapsed="0.020013"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.734678" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.735678" elapsed="0.020751"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:46.734678" elapsed="0.021751"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.757426" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.700227" elapsed="0.057199"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.758424" level="INFO">Clicking element '//button[text()='Move']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.757426" elapsed="0.049441"/>
</kw>
<arg>${btn_move_modal}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.700227" elapsed="0.106640"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:46.700227" elapsed="0.106640"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.809862" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:46.809862" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:46.808897" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:46.808897" elapsed="0.000965"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:46.809862" elapsed="0.009985"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:46.819847" elapsed="0.021014"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.840861" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.841862" elapsed="0.018834"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:46.840861" elapsed="0.019835"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:46.860696" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.808897" elapsed="0.052821"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:46.861718" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:46.861718" elapsed="0.569533"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:46.808897" elapsed="0.622354"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:47.433245" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:47.433245" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:47.433245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:47.433245" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:47.434242" elapsed="0.010972"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:47.445214" elapsed="0.030227"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:47.475441" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:47.475441" elapsed="0.016443"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:47.475441" elapsed="0.016443"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:47.491884" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:47.433245" elapsed="0.059637"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:47.492882" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:47.492882" elapsed="0.049305"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:47.432248" elapsed="0.109939"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:46.807909" elapsed="0.734278"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:47.544201" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:47.837967" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:47.837967" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:47.837967" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:47.847940" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:47.847940" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:47.543184" elapsed="0.314560"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:47.859739" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:47.859739" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:47.858742" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:47.858742" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:47.859739" elapsed="0.009089"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:47.869861" elapsed="0.020014"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:47.889875" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:47.890873" elapsed="0.019725"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:47.890873" elapsed="0.019725"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:47.911627" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:47.858742" elapsed="0.052885"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:47.911627" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:47.911627" elapsed="0.132341"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:47.858742" elapsed="0.185226"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:47.543184" elapsed="0.500784"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.045962" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:48.044965" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.044965" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.044965" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:48.045962" elapsed="0.008956"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.055916" elapsed="0.019505"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.075421" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.076415" elapsed="0.020537"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:48.075421" elapsed="0.021531"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.096952" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.044965" elapsed="0.051987"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.097950" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.097950" elapsed="0.052626"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.044965" elapsed="0.105611"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.151600" elapsed="0.009070"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.043968" elapsed="0.116702"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:46.807909" elapsed="1.352761"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<kw name="Get Element Count" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.174274" level="INFO">${row_count} = 1</msg>
<var>${row_count}</var>
<arg>${row_result_table}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.161613" elapsed="0.012661"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${category_result_table.replace("count", "${counter + 1}").replace("value","${label}")}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.177249" elapsed="0.000000"/>
</kw>
<var name="${counter}"/>
<status status="NOT RUN" start="2024-06-05T16:39:48.177249" elapsed="0.000000"/>
</iter>
<var>${counter}</var>
<value>${row_count-1}</value>
<status status="NOT RUN" start="2024-06-05T16:39:48.174274" elapsed="0.002975"/>
</for>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:48.161613" elapsed="0.015636"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:43.736303" elapsed="4.441942"/>
</test>
<test id="s1-t58" name="[Package Info - Move] package can change from non game to game" line="548">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.183102" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:48.183102" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.182070" elapsed="0.001032"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.182070" elapsed="0.001032"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:48.183102" elapsed="0.010615"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.193717" elapsed="0.020050"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.214796" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.214796" elapsed="0.018778"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:48.214796" elapsed="0.018778"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.233574" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.182070" elapsed="0.052505"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.234575" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.234575" elapsed="0.052327"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.181099" elapsed="0.105803"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.181099" elapsed="0.105803"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.181099" elapsed="0.105803"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.286902" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.286902" elapsed="0.001001"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.288969" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.287903" elapsed="0.001066"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.287903" elapsed="0.001066"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.288969" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.289897" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.288969" elapsed="0.000928"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.288969" elapsed="0.000928"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.289897" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.289897" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.289897" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.290894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.290894" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.290894" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.290894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.290894" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.290894" elapsed="0.001000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.292893" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.291894" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.291894" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.292893" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.292893" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.292893" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.292893" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.292893" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.292893" elapsed="0.000994"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.293887" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:39:48.180073" elapsed="0.113814"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.296052" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:48.296052" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.296052" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.296052" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:48.297049" elapsed="0.010258"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.307307" elapsed="0.023139"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.330446" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.331441" elapsed="0.017525"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:48.331441" elapsed="0.017525"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.349963" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.296052" elapsed="0.053911"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.349963" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.349963" elapsed="0.047806"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.295051" elapsed="0.103716"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.400787" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:48.400787" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.399764" elapsed="0.001023"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.399764" elapsed="0.001023"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:48.400787" elapsed="0.009835"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.411622" elapsed="0.019368"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.431987" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.431987" elapsed="0.016389"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:48.431987" elapsed="0.016389"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.448965" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.399764" elapsed="0.049201"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.448965" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.448965" elapsed="0.046683"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.398767" elapsed="0.096881"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:48.295051" elapsed="0.200597"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.496701" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:48.900252" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:48.900252" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:48.900252" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:48.910228" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:48.910228" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:48.496701" elapsed="0.420123"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.917850" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:48.917850" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.917850" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:48.917850" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:48.918845" elapsed="0.009346"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:48.928191" elapsed="0.020311"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.949499" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.949499" elapsed="0.018432"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:48.949499" elapsed="0.018432"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:48.967931" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.917850" elapsed="0.050081"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:48.968929" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:48.968929" elapsed="0.128903"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:48.916824" elapsed="0.181008"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:48.496701" elapsed="0.601131"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:49.099825" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:49.099825" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.099825" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:49.099825" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:49.099825" elapsed="0.010184"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:49.110009" elapsed="0.020967"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:49.130976" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:49.131997" elapsed="0.019531"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:49.131997" elapsed="0.019531"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:49.152525" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.098827" elapsed="0.053698"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:49.152525" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:49.152525" elapsed="0.064361"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.098827" elapsed="0.118059"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:49.216886" elapsed="0.675156"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.098827" elapsed="0.793215"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:48.295051" elapsed="1.596991"/>
</kw>
<kw name="Click Checkbox for Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:49.894024" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:49.894024" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.894024" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:49.894024" elapsed="0.001021"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:49.895045" elapsed="0.009887"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:49.904932" elapsed="0.019938"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:49.924870" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:49.925869" elapsed="0.022038"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:49.924870" elapsed="0.023037"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:49.947907" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.894024" elapsed="0.053883"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:49.947907" level="INFO">Clicking element '//tr[@data-testid='table-body-row']/td/div/button/*'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:49.947907" elapsed="0.050198"/>
</kw>
<arg>${checkbox_package}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.893026" elapsed="0.105079"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.893026" elapsed="0.105079"/>
</kw>
<kw name="Click Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:49.999973" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:49.999973" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.999973" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:49.999973" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:49.999973" elapsed="0.011749"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:50.012691" elapsed="0.021435"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.034126" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.035126" elapsed="0.017267"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:50.034126" elapsed="0.018267"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.052393" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.998941" elapsed="0.053452"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.053428" level="INFO">Clicking element '//div[@data-folded='false']//button[@data-test='move-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.053428" elapsed="0.050105"/>
</kw>
<arg>${btn_move}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:49.998941" elapsed="0.104592"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:49.998941" elapsed="0.104592"/>
</kw>
<kw name="Select Category for Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.107525" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:50.107525" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:50.107525" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:50.107525" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:50.108522" elapsed="0.012868"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:50.121390" elapsed="0.505568"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.626958" elapsed="0.001030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.628988" elapsed="0.029786"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:50.627988" elapsed="0.030786"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.659773" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.107525" elapsed="0.552248"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.659773" level="INFO">Clicking element '//label[@for='category_GAME']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.659773" elapsed="0.049052"/>
</kw>
<arg>${move_category.replace('selected', '${selected_value.upper()}').replace(' ', '_')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.104533" elapsed="0.604292"/>
</kw>
<arg>${CAT_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:50.104533" elapsed="0.604292"/>
</kw>
<kw name="Input History Comment in Move Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.710819" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:50.710819" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:50.710819" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:50.710819" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:50.710819" elapsed="0.010112"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:50.720931" elapsed="0.021107"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.742038" elapsed="0.000998"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.743036" elapsed="0.018625"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:50.743036" elapsed="0.018625"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.761661" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.709823" elapsed="0.051838"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.761661" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@name = 'comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.761661" elapsed="0.088764"/>
</kw>
<arg>${input_comment_move}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.709823" elapsed="0.140602"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:39:50.709823" elapsed="0.140602"/>
</kw>
<kw name="Click Move in Modal" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.852424" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:50.852424" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:50.852424" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:50.852424" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:50.852424" elapsed="0.011043"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:50.863467" elapsed="0.021381"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.884848" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.885848" elapsed="0.017459"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:50.884848" elapsed="0.018459"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.904331" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.851425" elapsed="0.052906"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.904331" level="INFO">Clicking element '//button[text()='Move']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.904331" elapsed="0.046098"/>
</kw>
<arg>${btn_move_modal}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.851425" elapsed="0.099004"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:50.851425" elapsed="0.099004"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:50.952423" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:50.952423" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:50.952423" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:50.952423" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:50.952423" elapsed="0.011180"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:50.963603" elapsed="0.020985"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:50.984588" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:50.985588" elapsed="0.019593"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:50.984588" elapsed="0.021592"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:51.006180" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.951426" elapsed="0.054754"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:51.007177" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:51.006180" elapsed="0.603775"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:50.951426" elapsed="0.659527"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:51.612947" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:51.612947" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:51.612947" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:51.612947" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:51.612947" elapsed="0.010016"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:51.622963" elapsed="0.020869"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:51.643832" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:51.644832" elapsed="0.016413"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:51.643832" elapsed="0.017413"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:51.661245" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:51.611949" elapsed="0.049296"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:51.662244" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:51.662244" elapsed="0.049541"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:51.610953" elapsed="0.100832"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:50.951426" elapsed="0.760359"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:51.712809" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:52.003684" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:52.003684" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:52.003684" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:52.013781" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:52.013781" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:51.712809" elapsed="0.311778"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.026581" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:52.026581" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.026581" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.026581" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:52.026581" elapsed="0.009390"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.035971" elapsed="0.020799"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.056770" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.057767" elapsed="0.016666"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:52.057767" elapsed="0.016666"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.075466" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.025584" elapsed="0.049882"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.075466" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.075466" elapsed="0.127257"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.025584" elapsed="0.177139"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:51.711785" elapsed="0.490938"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.209702" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:52.208706" elapsed="0.000996"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.208706" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.208706" elapsed="0.000996"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:52.209702" elapsed="0.025284"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.234986" elapsed="0.019716"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.254702" elapsed="0.001001"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.255703" elapsed="0.019160"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:52.255703" elapsed="0.019160"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.274863" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.207709" elapsed="0.067154"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.275887" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.275887" elapsed="0.050585"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.204716" elapsed="0.121756"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.326472" elapsed="0.009641"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.203727" elapsed="0.132386"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:50.950429" elapsed="1.385684"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<kw name="Get Element Count" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.346926" level="INFO">${row_count} = 1</msg>
<var>${row_count}</var>
<arg>${row_result_table}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.336706" elapsed="0.010220"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${category_result_table.replace("count", "${counter + 1}").replace("value","${label}")}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.348953" elapsed="0.000000"/>
</kw>
<var name="${counter}"/>
<status status="NOT RUN" start="2024-06-05T16:39:52.347951" elapsed="0.001002"/>
</iter>
<var>${counter}</var>
<value>${row_count-1}</value>
<status status="NOT RUN" start="2024-06-05T16:39:52.346926" elapsed="0.002027"/>
</for>
<arg>${CAT_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:52.336706" elapsed="0.012247"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:48.180073" elapsed="4.168880"/>
</test>
<test id="s1-t59" name="[Package Info - Move] package can change from Unknown to non game" line="561">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.354936" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:52.354936" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.354936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.354936" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:52.354936" elapsed="0.010517"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.365453" elapsed="0.020649"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.386102" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.387124" elapsed="0.016829"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:52.386102" elapsed="0.017851"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.404952" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.353937" elapsed="0.051015"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.404952" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.404952" elapsed="0.056467"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.352940" elapsed="0.108479"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.351943" elapsed="0.109476"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.351943" elapsed="0.109476"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.461419" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.461419" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.462415" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.462415" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.463412" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.463412" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.463412" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.464409" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.464409" elapsed="0.000998"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000997"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.465407" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.465407" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.466404" elapsed="0.000000"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:39:52.351943" elapsed="0.115458"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.469432" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:52.469432" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.468431" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.468431" elapsed="0.001001"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:52.469432" elapsed="0.012931"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.482363" elapsed="0.020942"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.503305" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.503305" elapsed="0.019539"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:52.503305" elapsed="0.019539"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.522844" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.468431" elapsed="0.055410"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.523841" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.523841" elapsed="0.050864"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.468431" elapsed="0.106274"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.576698" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:52.576698" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.576698" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:52.576698" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:52.576698" elapsed="0.009876"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:52.586574" elapsed="0.018795"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.606365" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.607363" elapsed="0.014908"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:52.606365" elapsed="0.015906"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:52.623269" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.576698" elapsed="0.046571"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.623269" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:52.623269" elapsed="0.129455"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:52.574705" elapsed="0.178019"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:52.467401" elapsed="0.285323"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:52.753710" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:53.060193" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:53.060193" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:53.060193" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:53.069085" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:53.069085" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:52.753710" elapsed="0.324361"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:53.079060" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:53.079060" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:53.079060" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:53.079060" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:53.079060" elapsed="0.010304"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:53.090351" elapsed="0.020074"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:53.110425" elapsed="0.001021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:53.111446" elapsed="0.018531"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:53.111446" elapsed="0.018531"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:53.129977" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:53.079060" elapsed="0.050917"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:53.130977" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:53.130977" elapsed="0.137065"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:53.078071" elapsed="0.189971"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:52.752724" elapsed="0.515318"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:53.273027" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:53.273027" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:53.272029" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:53.272029" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:53.274024" elapsed="0.022127"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:53.296151" elapsed="0.020064"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:53.316215" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:53.317212" elapsed="0.018989"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:53.316215" elapsed="0.019986"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:53.336201" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:53.271032" elapsed="0.065169"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:53.337222" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:53.336201" elapsed="0.060575"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:53.270034" elapsed="0.126742"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:53.396776" elapsed="0.704999"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:53.269041" elapsed="0.832734"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:39:52.467401" elapsed="1.634374"/>
</kw>
<kw name="Click Checkbox for Package" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.103470" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:54.103470" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.103470" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:54.103470" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:54.103470" elapsed="0.009933"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:54.113403" elapsed="0.020851"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.134254" elapsed="0.001023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.135277" elapsed="0.015607"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:54.135277" elapsed="0.015607"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.150884" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.103470" elapsed="0.047414"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.151918" level="INFO">Clicking element '//tr[@data-testid='table-body-row']/td/div/button/*'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.150884" elapsed="0.050365"/>
</kw>
<arg>${checkbox_package}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.102435" elapsed="0.098814"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.102435" elapsed="0.098814"/>
</kw>
<kw name="Click Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.203173" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:54.203173" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.203173" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:54.203173" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:54.203173" elapsed="0.011137"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:54.214310" elapsed="0.021375"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.235685" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.236685" elapsed="0.017666"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:54.235685" elapsed="0.018666"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.254351" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.202125" elapsed="0.052226"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.255353" level="INFO">Clicking element '//div[@data-folded='false']//button[@data-test='move-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.255353" elapsed="0.048391"/>
</kw>
<arg>${btn_move}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.202125" elapsed="0.101619"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.202125" elapsed="0.101619"/>
</kw>
<kw name="Select Category for Move" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.307736" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:54.307736" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.307736" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:54.307736" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:54.308733" elapsed="0.010338"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:54.319071" elapsed="0.481747"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.800818" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.801817" elapsed="0.014999"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:54.800818" elapsed="0.015998"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.816816" elapsed="0.001021"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.307736" elapsed="0.510101"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.817837" level="INFO">Clicking element '//label[@for='category_NON_GAME']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.817837" elapsed="0.046718"/>
</kw>
<arg>${move_category.replace('selected', '${selected_value.upper()}').replace(' ', '_')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.304744" elapsed="0.559811"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:54.304744" elapsed="0.559811"/>
</kw>
<kw name="Input History Comment in Move Package" owner="Package_Actions">
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.866799" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:54.866799" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:54.866799" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:54.866799" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:54.866799" elapsed="0.011279"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:54.878078" elapsed="0.021424"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.899502" elapsed="0.000999"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.900501" elapsed="0.019539"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:54.900501" elapsed="0.019539"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:54.921037" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.865766" elapsed="0.055271"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:54.921037" level="INFO">Typing text 'Test Automation - SRPH' into text field '//input[@name = 'comment']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:54.921037" elapsed="0.093482"/>
</kw>
<arg>${input_comment_move}</arg>
<arg>${comment}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:54.865766" elapsed="0.148753"/>
</kw>
<arg>${HISTORY_COMMENT}</arg>
<status status="PASS" start="2024-06-05T16:39:54.865766" elapsed="0.148753"/>
</kw>
<kw name="Click Move in Modal" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.016392" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:55.016392" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:55.016392" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:55.016392" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:55.016392" elapsed="0.009673"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:55.027097" elapsed="0.020818"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.047915" elapsed="0.001022"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.048937" elapsed="0.017819"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:55.048937" elapsed="0.017819"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.067756" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.015368" elapsed="0.052388"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.067756" level="INFO">Clicking element '//button[text()='Move']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.067756" elapsed="0.043918"/>
</kw>
<arg>${btn_move_modal}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.015368" elapsed="0.096306"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:55.015368" elapsed="0.096306"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<kw name="Select Package Name or Title" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.113669" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:55.113669" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:55.113669" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:55.113669" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:55.113669" elapsed="0.010998"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:55.124667" elapsed="0.021629"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.146296" elapsed="0.001021"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.147317" elapsed="0.019076"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:55.147317" elapsed="0.019076"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.166393" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.112671" elapsed="0.053722"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.167390" level="INFO">Clicking element '(//div[@data-testid='select-searchField']/button)[1]'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.166393" elapsed="0.582370"/>
</kw>
<arg>${select}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.112671" elapsed="0.636092"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.750843" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:55.750843" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:55.750843" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:55.750843" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:55.750843" elapsed="0.009902"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:55.760745" elapsed="0.018893"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.779638" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.780664" elapsed="0.015961"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:55.780664" elapsed="0.015961"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:55.796625" elapsed="0.001001"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.750843" elapsed="0.046783"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.797626" level="INFO">Clicking element '//li/span[text() = 'Package Name']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:55.797626" elapsed="0.048602"/>
</kw>
<arg>${selected_value.replace('value', '${selected}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:55.748763" elapsed="0.097465"/>
</kw>
<arg>${search_field}</arg>
<status status="PASS" start="2024-06-05T16:39:55.112671" elapsed="0.733557"/>
</kw>
<kw name="Input Package Name" owner="Common_Actions">
<kw name="Press Keys" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:55.847251" level="INFO">Sending key(s) ('CTRL+A', 'BACKSPACE') to //div/input[@name='query'] element.</msg>
<msg time="2024-06-05T16:39:56.144111" level="INFO">Pressing special key CONTROL down.</msg>
<msg time="2024-06-05T16:39:56.144111" level="INFO">Sending key A</msg>
<msg time="2024-06-05T16:39:56.144111" level="INFO">Releasing special key CONTROL.</msg>
<msg time="2024-06-05T16:39:56.154084" level="INFO">Pressing special key BACKSPACE to element.</msg>
<msg time="2024-06-05T16:39:56.155081" level="INFO">Releasing special key BACKSPACE.</msg>
<arg>${input_field}</arg>
<arg>CTRL+A</arg>
<arg>BACKSPACE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<status status="PASS" start="2024-06-05T16:39:55.847251" elapsed="0.318605"/>
</kw>
<kw name="Wait And Input Text" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.167853" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.166856" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.166856" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.166856" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:56.167853" elapsed="0.009051"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.177897" elapsed="0.018980"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.196877" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.197877" elapsed="0.016745"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:56.196877" elapsed="0.017745"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.214622" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.166856" elapsed="0.047766"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.215621" level="INFO">Typing text 'com.package.game.street.20240521' into text field '//div/input[@name='query']'.</msg>
<arg>${locator}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.215621" elapsed="0.123298"/>
</kw>
<arg>${input_field}</arg>
<arg>${package_name}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then input text.
If the element fails to typed into, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
text: (string) Text to be typed into the input field.
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.166856" elapsed="0.173093"/>
</kw>
<arg>com.package.game.street.20240521</arg>
<status status="PASS" start="2024-06-05T16:39:55.846228" elapsed="0.493721"/>
</kw>
<kw name="Click Search" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.340946" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.340946" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.340946" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.340946" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:56.340946" elapsed="0.010281"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.352223" elapsed="0.019520"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.371743" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.372740" elapsed="0.020359"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:56.371743" elapsed="0.021356"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.393099" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.339949" elapsed="0.054147"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.394096" level="INFO">Clicking element '//button[@type='submit']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.394096" elapsed="0.052868"/>
</kw>
<arg>${search_btn}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.339949" elapsed="0.107015"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.447961" elapsed="0.009515"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.339949" elapsed="0.117527"/>
</kw>
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>com.package.unknown.marmalade.20240516</arg>
<status status="PASS" start="2024-06-05T16:39:55.111674" elapsed="1.345802"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<kw name="Get Element Count" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.467642" level="INFO">${row_count} = 1</msg>
<var>${row_count}</var>
<arg>${row_result_table}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.458500" elapsed="0.009142"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${category_result_table.replace("count", "${counter + 1}").replace("value","${label}")}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.468733" elapsed="0.000000"/>
</kw>
<var name="${counter}"/>
<status status="NOT RUN" start="2024-06-05T16:39:56.468733" elapsed="0.000000"/>
</iter>
<var>${counter}</var>
<value>${row_count-1}</value>
<status status="NOT RUN" start="2024-06-05T16:39:56.467642" elapsed="0.001091"/>
</for>
<arg>${CAT_NON_GAME}</arg>
<status status="PASS" start="2024-06-05T16:39:56.458500" elapsed="0.011166"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:52.350945" elapsed="4.119323"/>
</test>
<test id="s1-t60" name="[Package Info - Move] package can change from Unknown to game" line="574">
<kw name="Navigate to Module" owner="Common_Actions">
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.474653" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.474653" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.474653" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.474653" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:56.474653" elapsed="0.009939"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.484592" elapsed="0.020053"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.504645" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.505644" elapsed="0.018279"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:56.504645" elapsed="0.019278"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.524919" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.474653" elapsed="0.050266"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.524919" level="INFO">Clicking element '//a[@href='/packages']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.524919" elapsed="0.054270"/>
</kw>
<arg>${module.replace('hrefloc',"/packages")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.472659" elapsed="0.106530"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.472659" elapsed="0.106530"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.471658" elapsed="0.107531"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/package-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.579189" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.579189" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.579189" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.579189" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.579189" elapsed="0.001029"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/device-group-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.580218" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_device}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.581217" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/devices/product-manager")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.581217" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.580218" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.580218" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/device-group-policy")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.581217" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.581217" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.581217" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;Account&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/account/accounts")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.582213" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.581217" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.581217" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.582213" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-info-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.582213" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.582213" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.582213" elapsed="0.000997"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Package Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.583210" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/package-policy-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.583210" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.583210" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.583210" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.584209" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.584209" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.583210" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.583210" elapsed="0.000999"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.584209" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.584209" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.584209" elapsed="0.000996"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Product Manager&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/product-manager-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</if>
<if>
<branch type="IF" condition="&quot;${component}&quot; == &quot;History-Device Group Policy&quot;">
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module_history}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000000"/>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${module.replace('hrefloc',"/history/device-group-history")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:39:56.586203" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-06-05T16:39:56.585205" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.585205" elapsed="0.000998"/>
</if>
<arg>${MODULE_PACKAGE}</arg>
<status status="PASS" start="2024-06-05T16:39:56.471658" elapsed="0.114545"/>
</kw>
<kw name="Click Add Button" owner="Common_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.588197" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.587169" elapsed="0.001028"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.587169" elapsed="0.001028"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.587169" elapsed="0.001028"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:56.588197" elapsed="0.014928"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.603125" elapsed="0.020449"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.623574" elapsed="0.001029"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.624603" elapsed="0.017845"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:56.624603" elapsed="0.017845"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.642448" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.587169" elapsed="0.056277"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.643446" level="INFO">Clicking element '//button[@data-test='add-button']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.643446" elapsed="0.056765"/>
</kw>
<arg>${btn_add}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.587169" elapsed="0.114065"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.586203" elapsed="0.115031"/>
</kw>
<kw name="Select Package Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.703230" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.703230" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.703230" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.703230" elapsed="0.000998"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2024-06-05T16:39:56.704228" elapsed="0.022643"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2024-06-05T16:39:56.726871" elapsed="0.019970"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.746841" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Set Focus To Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.747866" elapsed="0.016580"/>
</kw>
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-06-05T16:39:56.747866" elapsed="0.016580"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:39:56.764446" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.703230" elapsed="0.061216"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.765479" level="INFO">Clicking element '//input[@id='Unknown']'.</msg>
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-06-05T16:39:56.765479" elapsed="0.051267"/>
</kw>
<arg>${radio_category.replace('category', '${category}')}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="PASS" start="2024-06-05T16:39:56.702231" elapsed="0.114515"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="PASS" start="2024-06-05T16:39:56.701234" elapsed="0.115512"/>
</kw>
<kw name="Input Package Name in Add Package" owner="Package_Actions">
<msg time="2024-06-05T16:39:56.819738" level="FAIL">Variable '${package_unknown_for_move}' not found.</msg>
<arg>${package_unknown_for_move}</arg>
<status status="FAIL" start="2024-06-05T16:39:56.817743" elapsed="0.001995">Variable '${package_unknown_for_move}' not found.</status>
</kw>
<kw name="Input History Comment in Add Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.819738" elapsed="0.000000"/>
</kw>
<kw name="Select Store in Add Package" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.820735" elapsed="0.000000"/>
</kw>
<kw name="Click Save Button" owner="Common_Actions">
<status status="NOT RUN" start="2024-06-05T16:39:56.820735" elapsed="0.000000"/>
</kw>
<kw name="Navigate to Module" owner="Common_Actions">
<arg>${MODULE_PACKAGE}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.821733" elapsed="0.000000"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>${package_unknown_for_move}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.822731" elapsed="0.000000"/>
</kw>
<kw name="Click Checkbox for Package" owner="Package_Actions">
<status status="NOT RUN" start="2024-06-05T16:39:56.823727" elapsed="0.000000"/>
</kw>
<kw name="Click Move" owner="Package_Actions">
<status status="NOT RUN" start="2024-06-05T16:39:56.823727" elapsed="0.000000"/>
</kw>
<kw name="Select Category for Move" owner="Package_Actions">
<arg>${CAT_GAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.823727" elapsed="0.000000"/>
</kw>
<kw name="Input History Comment in Move Package" owner="Package_Actions">
<arg>${HISTORY_COMMENT}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.824725" elapsed="0.000000"/>
</kw>
<kw name="Click Move in Modal" owner="Package_Actions">
<status status="NOT RUN" start="2024-06-05T16:39:56.824725" elapsed="0.000000"/>
</kw>
<kw name="Search Package" owner="Common_Actions">
<arg>${LBL_PACKAGE_NAME}</arg>
<arg>${package_unknown_for_move}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.825722" elapsed="0.000000"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<arg>${CAT_GAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:39:56.825722" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:39:56.470665" elapsed="0.355057">Variable '${package_unknown_for_move}' not found.</status>
</test>
<test id="s1-t61" name="Searching a package using category GAME should be Successful" line="595">
<kw name="Search by Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:39:56.829713" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:39:56.828714" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-06-05T16:39:56.828714" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-06-05T16:39:56.828714" elapsed="0.000999"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:40:27.053150" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-51.png"&gt;&lt;img src="selenium-screenshot-51.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:40:27.053150" level="FAIL">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:39:56.829713" elapsed="30.224462">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.054175" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.054175" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.054175" elapsed="0.000970"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:40:27.055145" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:39:56.828714" elapsed="30.226431">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.055145" elapsed="0.000000"/>
</kw>
<arg>${category_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:39:56.828714" elapsed="30.227429">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${category_drop_down_options.replace("value", "${category}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.056143" elapsed="0.000000"/>
</kw>
<arg>${CAT_GAME}</arg>
<status status="FAIL" start="2024-06-05T16:39:56.827716" elapsed="30.228427">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:27.056521" elapsed="0.000000"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<arg>${CAT_GAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:40:27.056521" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:39:56.826720" elapsed="30.230828">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t62" name="Searching a package using category NON GAME should be Successful" line="600">
<kw name="Search by Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:40:27.059516" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:40:27.059516" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:40:27.059516" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:40:27.059516" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:40:57.359897" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-52.png"&gt;&lt;img src="selenium-screenshot-52.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:40:57.360893" level="FAIL">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:40:27.059516" elapsed="30.301377">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.361891" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.361891" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.361891" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:40:57.361891" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:40:27.059516" elapsed="30.302375">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.361891" elapsed="0.000997"/>
</kw>
<arg>${category_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:40:27.058519" elapsed="30.304369">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${category_drop_down_options.replace("value", "${category}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.362888" elapsed="0.000000"/>
</kw>
<arg>${CAT_NON_GAME}</arg>
<status status="FAIL" start="2024-06-05T16:40:27.058519" elapsed="30.304369">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:40:57.362888" elapsed="0.000000"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<arg>${CAT_NON_GAME}</arg>
<status status="NOT RUN" start="2024-06-05T16:40:57.363886" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:40:27.058519" elapsed="30.305367">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t63" name="Searching a package using category Unknown should be Successful" line="605">
<kw name="Search by Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:40:57.366878" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:40:57.366878" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:40:57.366878" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:40:57.366878" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:41:27.658612" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-53.png"&gt;&lt;img src="selenium-screenshot-53.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:41:27.658612" level="FAIL">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:40:57.366878" elapsed="30.292730">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.659608" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.659608" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.659608" elapsed="0.000998"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:41:27.660606" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:40:57.365881" elapsed="30.294725">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.660606" elapsed="0.000000"/>
</kw>
<arg>${category_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:40:57.365881" elapsed="30.294725">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${category_drop_down_options.replace("value", "${category}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.660606" elapsed="0.000000"/>
</kw>
<arg>${CAT_UNKNOWN}</arg>
<status status="FAIL" start="2024-06-05T16:40:57.364884" elapsed="30.295722">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:27.661606" elapsed="0.000000"/>
</kw>
<kw name="Verify Category in Result Table" owner="Package_Actions">
<arg>${CAT_UNKNOWN}</arg>
<status status="NOT RUN" start="2024-06-05T16:41:27.662602" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:40:57.364884" elapsed="30.297718">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t64" name="Searching a package using store Google Play should be Successful" line="610">
<kw name="Search by Category" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:41:27.665791" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:41:27.665791" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:41:27.664770" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-06-05T16:41:27.664770" elapsed="0.001021"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:41:58.021708" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-54.png"&gt;&lt;img src="selenium-screenshot-54.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:41:58.021708" level="FAIL">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:41:27.665791" elapsed="30.357913">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.023704" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.023704" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.023704" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:41:58.024738" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:41:27.664770" elapsed="30.359968">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.024738" elapsed="0.000000"/>
</kw>
<arg>${category_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:41:27.664770" elapsed="30.359968">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${category_drop_down_options.replace("value", "${category}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.025727" elapsed="0.000000"/>
</kw>
<arg>${ALL}</arg>
<status status="FAIL" start="2024-06-05T16:41:27.664770" elapsed="30.360957">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Search by Store" owner="Package_Actions">
<arg>${GOOGLE_PLAY}</arg>
<status status="NOT RUN" start="2024-06-05T16:41:58.026696" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:41:58.027692" elapsed="0.000000"/>
</kw>
<kw name="Verify Store in Result Table" owner="Package_Actions">
<arg>${GOOGLE_PLAY}</arg>
<status status="NOT RUN" start="2024-06-05T16:41:58.027692" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:41:27.663770" elapsed="30.364935">Element '//div[@data-testid='select-category']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t65" name="Searching a package using store Galaxy Apps should be Successful" line="616">
<kw name="Search by Store" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:41:58.034673" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:41:58.034673" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:41:58.034673" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-06-05T16:41:58.034673" elapsed="0.000000"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:42:28.325371" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-55.png"&gt;&lt;img src="selenium-screenshot-55.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:42:28.325371" level="FAIL">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:41:58.034673" elapsed="30.291696">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.327366" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.327366" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.327366" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:42:28.327366" elapsed="0.000998"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:41:58.033685" elapsed="30.294679">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.328364" elapsed="0.000000"/>
</kw>
<arg>${store_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:41:58.033685" elapsed="30.294679">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${store_drop_down_options.replace("value", "${store}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.328364" elapsed="0.000000"/>
</kw>
<arg>${GALAXY_APPS}</arg>
<status status="FAIL" start="2024-06-05T16:41:58.032678" elapsed="30.295686">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:28.329361" elapsed="0.000000"/>
</kw>
<kw name="Verify Store in Result Table" owner="Package_Actions">
<arg>${GALAXY_APPS}</arg>
<status status="NOT RUN" start="2024-06-05T16:42:28.330358" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-06-05T16:41:58.031683" elapsed="30.299673">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t66" name="Searching a package using store One should be Successful" line="621">
<kw name="Search by Store" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:42:28.336342" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:42:28.336342" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:42:28.335345" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:42:28.335345" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:42:58.698420" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-56.png"&gt;&lt;img src="selenium-screenshot-56.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:42:58.698420" level="FAIL">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:42:28.336342" elapsed="30.362995">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.700334" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.700334" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.700334" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:42:58.700334" elapsed="0.000997"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:42:28.335345" elapsed="30.365986">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.701331" elapsed="0.000000"/>
</kw>
<arg>${store_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:42:28.334348" elapsed="30.366983">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait And Click Element" owner="SeleniumActions">
<arg>${store_drop_down_options.replace("value", "${store}")}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.701331" elapsed="0.001000"/>
</kw>
<arg>${ONE}</arg>
<status status="FAIL" start="2024-06-05T16:42:28.334348" elapsed="30.367983">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>${progress_bar}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:42:58.703324" elapsed="0.000000"/>
</kw>
<kw name="Verify Store in Result Table" owner="Package_Actions">
<arg>${ONE}</arg>
<status status="NOT RUN" start="2024-06-05T16:42:58.703324" elapsed="0.000997"/>
</kw>
<status status="FAIL" start="2024-06-05T16:42:28.333361" elapsed="30.370960">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</test>
<test id="s1-t67" name="Searching a package using store MSCC should be Successful" line="626">
<kw name="Search by Store" owner="Package_Actions">
<kw name="Wait And Click Element" owner="SeleniumActions">
<kw name="Wait And Focus On Element" owner="SeleniumActions">
<if>
<branch type="IF" condition="not ${timeout}">
<kw name="Get Selenium Timeout" owner="SeleniumLibrary">
<msg time="2024-06-05T16:42:58.708310" level="INFO">${timeout} = 30 seconds</msg>
<var>${timeout}</var>
<doc>Gets the timeout that is used by various keywords.</doc>
<status status="PASS" start="2024-06-05T16:42:58.708310" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-05T16:42:58.708310" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-06-05T16:42:58.708310" elapsed="0.000997"/>
</if>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2024-06-05T16:43:28.912300" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-57.png"&gt;&lt;img src="selenium-screenshot-57.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-06-05T16:43:28.912300" level="FAIL">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</msg>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="FAIL" start="2024-06-05T16:42:58.709307" elapsed="30.203980">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="NOT RUN" start="2024-06-05T16:43:28.914283" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn">
<arg>ERROR</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="NOT RUN" start="2024-06-05T16:43:28.914283" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<arg>${timeout}</arg>
<arg>500ms</arg>
<arg>Set Focus To Element</arg>
<arg>${locator}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" start="2024-06-05T16:43:28.914283" elapsed="0.000000"/>
</kw>
<kw name="Set Log Level" owner="BuiltIn" type="TEARDOWN">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level.</doc>
<status status="PASS" start="2024-06-05T16:43:28.914283" elapsed="0.000000"/>
</kw>
<arg>${locator}</arg>
<arg>${timeout}</arg>
<doc>This is a series of chained Selenium keywords, that first waits for an element to be on the DOM, executes
Focus on it, then it waits for it to be visible.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:42:58.708310" elapsed="30.205973">Element '//div[@data-testid='select-store']/button' did not appear in 30 seconds.</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>${locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2024-06-05T16:43:28.915280" elapsed="0.000000"/>
</kw>
<arg>${store_drop_down}</arg>
<doc>This is a series of chained Selenium keywords, that tries to find a web element first, and then clicks it.
If the element fails to be clicked, it will scroll to the bottom of the page and try again.
locator: (string) A selenium locator(CSS, XPATH, ID, NAME, etc)
timeout: (float) Time in seconds to wait, will use global timeout if not set.</doc>
<status status="FAIL" start="2024-06-05T16:42:58.707313" elapsed="30.207967">